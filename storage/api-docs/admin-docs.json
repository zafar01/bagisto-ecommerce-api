{
    "openapi": "3.0.0",
    "info": {
        "title": "Bagisto Admin Rest API Documentation",
        "description": "Bagisto Admin Rest API Documentation",
        "contact": {
            "email": "admin@example.com"
        },
        "version": "2.3.0"
    },
    "servers": [
        {
            "url": "http://localhost",
            "description": "Bagisto Admin End Rest API"
        }
    ],
    "paths": {
        "/api/v1/admin/get": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get logged in admin user's details",
                "description": "Get logged in admin user's details",
                "operationId": "getAdminUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/update": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update admin user's profile",
                "description": "Update admin user's profile",
                "operationId": "updateAdminUser",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "current_password"
                                ],
                                "properties": {
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Kim Thomson"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "example@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "admin123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "admin123"
                                    },
                                    "current_password": {
                                        "type": "string",
                                        "example": "admin123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The name field is required. (and 1 more error)"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/logout": {
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout admin user",
                "description": "Logout admin user",
                "operationId": "logoutAdminUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login admin user",
                "description": "Login admin user",
                "operationId": "adminLogin",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "device_name"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "admin123"
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "example": "android"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged in successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid Email or Password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/api/v1/admin/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Admin user's forgot password",
                "description": "Admin user's forgot password",
                "operationId": "adminForgotPassword",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "We have e-mailed your password reset link!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Warning: You have requested password reset recently, please check your email."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/api/v1/admin/cms": {
            "get": {
                "tags": [
                    "CMS Pages"
                ],
                "summary": "Get CMS pages",
                "description": "Returns CMS pages, if you want to retrieve all CMS pages at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getCmsPages",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "CMS Page id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CmsPage"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CMS Pages"
                ],
                "summary": "Store the CMS page",
                "description": "Store the CMS page",
                "operationId": "storeCMSPage",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "url_key",
                                    "page_title",
                                    "channels",
                                    "html_content"
                                ],
                                "properties": {
                                    "url_key": {
                                        "description": "CMS page's Url Key (must be unique)",
                                        "type": "string",
                                        "example": "faq-info"
                                    },
                                    "page_title": {
                                        "description": "CMS page's title",
                                        "type": "string",
                                        "example": "FAQ Information"
                                    },
                                    "channels": {
                                        "description": "CMS page's channels",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "html_content": {
                                        "description": "CMS page's html content",
                                        "type": "string",
                                        "format": "text",
                                        "example": "<div class=\\'static-container\\'><div class=\\'mb-5\\'>FAQ page content information</div></div>"
                                    },
                                    "meta_title": {
                                        "description": "CMS page's meta title",
                                        "type": "string",
                                        "example": "faq-info"
                                    },
                                    "meta_keywords": {
                                        "description": "CMS page's meta keywords",
                                        "type": "string",
                                        "example": "faq-info"
                                    },
                                    "meta_description": {
                                        "description": "CMS page's meta descripton",
                                        "type": "string",
                                        "example": "faq-info"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "CMS Page created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CmsPage"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/cms/{id}": {
            "get": {
                "tags": [
                    "CMS Pages"
                ],
                "summary": "Get CMS page detail",
                "description": "Returns CMS page detail",
                "operationId": "getCMSPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CMS Page id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CmsPage"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CMS Pages"
                ],
                "summary": "Update CMS page",
                "description": "Update CMS page",
                "operationId": "updateCMSPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CMS Page id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "channels"
                                ],
                                "properties": {
                                    "en": {
                                        "description": "Provide locale code as key to this index i.e. 'en'",
                                        "properties": {
                                            "url_key": {
                                                "description": "CMS page's Url Key (must be unique)",
                                                "type": "string",
                                                "example": "faq-info"
                                            },
                                            "page_title": {
                                                "description": "CMS page's title",
                                                "type": "string",
                                                "example": "FAQ Information"
                                            },
                                            "html_content": {
                                                "description": "CMS page's html content",
                                                "type": "string",
                                                "format": "text",
                                                "example": "<div class=\\'static-container\\'><div class=\\'mb-5\\'>FAQ page content information</div></div>"
                                            },
                                            "meta_title": {
                                                "description": "CMS page's meta title",
                                                "type": "string",
                                                "example": "faq-info"
                                            },
                                            "meta_keywords": {
                                                "description": "CMS page's meta keywords",
                                                "type": "string",
                                                "example": "faq-info"
                                            },
                                            "meta_description": {
                                                "description": "CMS page's meta description",
                                                "type": "string",
                                                "example": "faq-info"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "channels": {
                                        "description": "CMS page's channels",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "CMS Page updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CmsPage"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CMS Pages"
                ],
                "summary": "Delete CMS page by id",
                "description": "Delete CMS page by id",
                "operationId": "deleteCMSPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CMS Page id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "CMS Page deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/cms/mass-destroy": {
            "post": {
                "tags": [
                    "CMS Pages"
                ],
                "summary": "Mass delete cms pages",
                "description": "Mass delete cms pages",
                "operationId": "massDeleteCMSPage",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "indices"
                                ],
                                "properties": {
                                    "indices": {
                                        "description": "CMS Page's Ids `CommaSeperated`",
                                        "type": "string",
                                        "example": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Selected CMS Page successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/catalog/attributes": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Get list of attributes",
                "description": "Returns attribute list, if you want to retrieve all attributes at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getAdminAttributes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Attribute id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Attribute"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Store the attribute",
                "description": "Store the attribute",
                "operationId": "storeAttribute",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "admin_name"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Attribute's code",
                                        "type": "string",
                                        "example": "age_range"
                                    },
                                    "type": {
                                        "description": "Attribute's type",
                                        "type": "string",
                                        "enum": [
                                            "text",
                                            "textarea",
                                            "price",
                                            "boolean",
                                            "select",
                                            "multiselect",
                                            "datetime",
                                            "date",
                                            "image",
                                            "file",
                                            "checkbox"
                                        ],
                                        "example": "text"
                                    },
                                    "admin_name": {
                                        "description": "Attribute's admin name",
                                        "type": "string",
                                        "example": "Age Range"
                                    },
                                    "en": {
                                        "description": "Attribute's name based on locale English",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Age Range"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "fr": {
                                        "description": "Attribute's name based on locale French",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Tranche d'âge"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "default_value": {
                                        "type": "interger",
                                        "example": null
                                    },
                                    "swatch_type": {
                                        "description": "Only use with select type attribute",
                                        "type": "string",
                                        "enum": [
                                            "dropdown",
                                            "color",
                                            "image",
                                            "text"
                                        ],
                                        "example": "dropdown"
                                    },
                                    "default-null-option": {
                                        "description": "Only use with select type attribute, i.e. `on` or `null`",
                                        "type": "string",
                                        "enum": [
                                            "on"
                                        ],
                                        "example": null
                                    },
                                    "options": {
                                        "description": "Only use with select type attribute, i.e. `on` or `null`",
                                        "properties": {
                                            "option_1": {
                                                "properties": {
                                                    "swatch_value": {
                                                        "description": "Only use with `swatch_type` = `color` & `image`",
                                                        "type": "string",
                                                        "example": "#00ff00"
                                                    },
                                                    "sort_order": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "admin_name": {
                                                        "type": "string",
                                                        "example": "10 & Above"
                                                    },
                                                    "en": {
                                                        "properties": {
                                                            "label": {
                                                                "type": "string",
                                                                "example": "10 & Above"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "fr": {
                                                        "properties": {
                                                            "label": {
                                                                "type": "string",
                                                                "example": "10 et plus"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "nl": {
                                                        "properties": {
                                                            "label": {
                                                                "type": "string",
                                                                "example": "10  en hoger"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "option_2": {
                                                "properties": {
                                                    "swatch_value": {
                                                        "description": "Only use with `swatch_type` = `color` & `image`",
                                                        "type": "string",
                                                        "example": "#b6d7a8"
                                                    },
                                                    "sort_order": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "admin_name": {
                                                        "type": "string",
                                                        "example": "20 & Above"
                                                    },
                                                    "en": {
                                                        "properties": {
                                                            "label": {
                                                                "type": "string",
                                                                "example": "20 & Above"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "fr": {
                                                        "properties": {
                                                            "label": {
                                                                "type": "string",
                                                                "example": "20 et plus"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "nl": {
                                                        "properties": {
                                                            "label": {
                                                                "type": "string",
                                                                "example": "20 en hoger"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "is_required": {
                                        "description": "Attribute is required or not",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "is_unique": {
                                        "description": "Attribute is unique or not",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "validation": {
                                        "description": "Attribute's validation",
                                        "type": "string",
                                        "enum": [
                                            "number",
                                            "email",
                                            "decimal",
                                            "url"
                                        ],
                                        "example": "number"
                                    },
                                    "value_per_locale": {
                                        "description": "Attribute's value per locale",
                                        "type": "boolean",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "value_per_channel": {
                                        "description": "Attribute's value per channel",
                                        "type": "boolean",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "is_configurable": {
                                        "description": "Attribute can in configurable product",
                                        "type": "boolean",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "is_visible_on_front": {
                                        "description": "Attribute's value can show on front",
                                        "type": "boolean",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "use_in_flat": {
                                        "description": "Attribute's value will store in flat table",
                                        "type": "boolean",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "is_comparable": {
                                        "description": "Attribute's value will use in comparable option",
                                        "type": "boolean",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Attribute created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Attribute"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/catalog/attributes/{id}": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Get attribute detail",
                "description": "Returns attribute detail",
                "operationId": "getAttribute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attribute ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Attribute"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Update attribute",
                "description": "Update attribute",
                "operationId": "updateAttribute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attribute ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "admin_name"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Attribute's code",
                                        "type": "string",
                                        "example": "age_range"
                                    },
                                    "type": {
                                        "description": "Attribute's type",
                                        "type": "string",
                                        "enum": [
                                            "text",
                                            "textarea",
                                            "price",
                                            "boolean",
                                            "select",
                                            "multiselect",
                                            "datetime",
                                            "date",
                                            "image",
                                            "file",
                                            "checkbox"
                                        ],
                                        "example": "text"
                                    },
                                    "admin_name": {
                                        "description": "Attribute's admin name",
                                        "type": "string",
                                        "example": "Age Range"
                                    },
                                    "en": {
                                        "description": "Attribute's name based on locale English",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Age Range"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "fr": {
                                        "description": "Attribute's name based on locale French",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Tranche d'âge"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "default_value": {
                                        "type": "interger",
                                        "example": null
                                    },
                                    "swatch_type": {
                                        "description": "Only use with select type attribute",
                                        "type": "string",
                                        "enum": [
                                            "dropdown",
                                            "color",
                                            "image",
                                            "text"
                                        ],
                                        "example": "dropdown"
                                    },
                                    "default-null-option": {
                                        "description": "Only use with select type attribute, i.e. `on` or `null`",
                                        "type": "string",
                                        "enum": [
                                            "on"
                                        ],
                                        "example": null
                                    },
                                    "options": {
                                        "description": "Only use with select type attribute, i.e. `on` or `null`",
                                        "properties": {
                                            "28": {
                                                "properties": {
                                                    "swatch_value": {
                                                        "description": "Only use with `swatch_type` = `color` & `image`",
                                                        "type": "string",
                                                        "example": "#00ff00"
                                                    },
                                                    "isNew": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ],
                                                        "example": false
                                                    },
                                                    "isDelete": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ],
                                                        "example": false
                                                    },
                                                    "sort_order": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "admin_name": {
                                                        "type": "string",
                                                        "example": "10 & Above"
                                                    },
                                                    "en": {
                                                        "properties": {
                                                            "label": {
                                                                "type": "string",
                                                                "example": "10 & Above"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "29": {
                                                "properties": {
                                                    "swatch_value": {
                                                        "description": "Only use with `swatch_type` = `color` & `image`",
                                                        "type": "string",
                                                        "example": "#b6d7a8"
                                                    },
                                                    "isNew": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ],
                                                        "example": false
                                                    },
                                                    "isDelete": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ],
                                                        "example": true
                                                    },
                                                    "sort_order": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "admin_name": {
                                                        "type": "string",
                                                        "example": "20 & Above"
                                                    },
                                                    "en": {
                                                        "properties": {
                                                            "label": {
                                                                "type": "string",
                                                                "example": "20 & Above"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "option_3": {
                                                "properties": {
                                                    "swatch_value": {
                                                        "description": "Only use with `swatch_type` = `color` & `image`",
                                                        "type": "string",
                                                        "example": "#b6d7a8"
                                                    },
                                                    "isNew": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ],
                                                        "example": true
                                                    },
                                                    "isDelete": {
                                                        "type": "boolean",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ],
                                                        "example": false
                                                    },
                                                    "sort_order": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "admin_name": {
                                                        "type": "string",
                                                        "example": "30 & Above"
                                                    },
                                                    "en": {
                                                        "properties": {
                                                            "label": {
                                                                "type": "string",
                                                                "example": "30 & Above"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "is_required": {
                                        "description": "Attribute is required or not",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "is_unique": {
                                        "description": "Attribute is unique or not",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "validation": {
                                        "description": "Attribute's validation",
                                        "type": "string",
                                        "enum": [
                                            "number",
                                            "email",
                                            "decimal",
                                            "url"
                                        ],
                                        "example": "number"
                                    },
                                    "is_configurable": {
                                        "description": "Attribute can in configurable product",
                                        "type": "boolean",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "is_visible_on_front": {
                                        "description": "Attribute's value can show on front",
                                        "type": "boolean",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "use_in_flat": {
                                        "description": "Attribute's value will store in flat table",
                                        "type": "boolean",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "is_comparable": {
                                        "description": "Attribute's value will use in comparable option",
                                        "type": "boolean",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Attribute updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Attribute"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Delete attribute by id",
                "description": "Delete attribute by id",
                "operationId": "deleteAttribute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attribute ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Attribute deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/catalog/attributes/mass-destroy": {
            "post": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Mass delete attributes",
                "description": "Mass delete attributes",
                "operationId": "massDeleteAttributes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "indices"
                                ],
                                "properties": {
                                    "indices": {
                                        "description": "Attribute's Ids `CommaSeperated`",
                                        "type": "string",
                                        "example": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Selected attributes successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/catalog/attribute-families": {
            "get": {
                "tags": [
                    "Attribute Families"
                ],
                "summary": "Get attribute families",
                "description": "Returns attribute family list, if you want to retrieve all attribute families at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getAdminAttributeFamilies",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Attribute Family id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AttributeFamily"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Attribute Families"
                ],
                "summary": "Store the attribute family",
                "description": "Store the attribute family",
                "operationId": "storeAttributeFamily",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name",
                                    "attribute_groups"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Attribute family's code",
                                        "type": "string",
                                        "example": "furniture"
                                    },
                                    "name": {
                                        "description": "Attribute family's name",
                                        "type": "string",
                                        "example": "Furniture"
                                    },
                                    "attribute_groups": {
                                        "description": "Attribute family's attribute groups",
                                        "properties": {
                                            "group_0": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "General"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "General"
                                                    },
                                                    "column": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "position": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "custom_attributes": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "group_1": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Description"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "Description"
                                                    },
                                                    "column": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "position": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "custom_attributes": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 9
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Family created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AttributeFamily"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/catalog/attribute-families/{id}": {
            "get": {
                "tags": [
                    "Attribute Families"
                ],
                "summary": "Get attribute family detail",
                "description": "Returns attribute family detail",
                "operationId": "getAttributeFamily",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attribute Family ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AttributeFamily"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Attribute Families"
                ],
                "summary": "Update attribute family",
                "description": "Update attribute family",
                "operationId": "updateAttributeFamily",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attribute Family ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name",
                                    "attribute_groups"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Attribute family's code",
                                        "type": "string",
                                        "example": "furniture"
                                    },
                                    "name": {
                                        "description": "Attribute family's name",
                                        "type": "string",
                                        "example": "Furniture"
                                    },
                                    "attribute_groups": {
                                        "description": "Attribute family's attribute groups",
                                        "properties": {
                                            "8": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "General"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "General"
                                                    },
                                                    "position": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "column": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "custom_attributes": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "position": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "9": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Description"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "Description"
                                                    },
                                                    "position": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "column": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "custom_attributes": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 9
                                                                },
                                                                "position": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Family updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AttributeFamily"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Attribute Families"
                ],
                "summary": "Delete attribute family by id",
                "description": "Delete attribute family by id",
                "operationId": "deleteAttributeFamily",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attribute Family ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Family deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/catalog/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get categories",
                "description": "Returns category list, if you want to retrieve all categories at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getAdminCategories",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Category id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Store the Category",
                "description": "Store the Category",
                "operationId": "storeCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "locale",
                                    "name",
                                    "description",
                                    "slug",
                                    "position",
                                    "display_mode",
                                    "attributes[]"
                                ],
                                "properties": {
                                    "locale": {
                                        "description": "Category's locale i.e. `all`",
                                        "type": "string",
                                        "enum": [
                                            "all"
                                        ],
                                        "example": "all"
                                    },
                                    "name": {
                                        "description": "Category's name",
                                        "type": "string",
                                        "example": "Home Decor"
                                    },
                                    "status": {
                                        "description": "Category's status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "position": {
                                        "description": "Category's position",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "display_mode": {
                                        "description": "Category's display mode",
                                        "type": "string",
                                        "enum": [
                                            "products_and_description",
                                            "products_only",
                                            "description_only"
                                        ],
                                        "example": "products_and_description"
                                    },
                                    "description": {
                                        "description": "Category's description",
                                        "type": "string",
                                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                                    },
                                    "banner_path[]": {
                                        "description": "Category's Banner",
                                        "type": "file",
                                        "format": "binary"
                                    },
                                    "logo_path[]": {
                                        "description": "Category's Logo",
                                        "type": "file",
                                        "format": "binary"
                                    },
                                    "parent_id": {
                                        "description": "Category's parent id",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "attributes[]": {
                                        "description": "Category's attributes for filter",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "11"
                                        }
                                    },
                                    "slug": {
                                        "description": "Category's slug",
                                        "type": "string",
                                        "example": "home-decor"
                                    },
                                    "meta_title": {
                                        "description": "Category's meta title",
                                        "type": "string",
                                        "example": "Home Decor Meta Title"
                                    },
                                    "meta_description": {
                                        "description": "Category's meta description",
                                        "type": "string",
                                        "example": "Home Decor Meta Description"
                                    },
                                    "meta_keywords": {
                                        "description": "Category's meta keywords",
                                        "type": "string",
                                        "example": "Home Decor Meta Keywords"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/catalog/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category detail",
                "description": "Returns category detail",
                "operationId": "getCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update category",
                "description": "Update category",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "en": {
                                        "description": "Category's locale code i.e. `en` Info: This field is required",
                                        "properties": {
                                            "name": {
                                                "description": "Category's name",
                                                "type": "string",
                                                "example": "Home Decor"
                                            },
                                            "description": {
                                                "description": "Category's description",
                                                "type": "string",
                                                "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                                            },
                                            "slug": {
                                                "description": "Category's slug",
                                                "type": "string",
                                                "example": "home-decor-1"
                                            },
                                            "meta_title": {
                                                "description": "Category's meta title",
                                                "type": "string",
                                                "example": "Home Decor Meta title"
                                            },
                                            "meta_description": {
                                                "description": "Category's meta description",
                                                "type": "string",
                                                "example": "Home Decor Meta description"
                                            },
                                            "meta_keywords": {
                                                "description": "Category's meta keywords",
                                                "type": "string",
                                                "example": "Home Decor Meta keywords"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "locale": {
                                        "description": "Current Locale",
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "status": {
                                        "description": "Category's status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "position": {
                                        "description": "Category's position",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "display_mode": {
                                        "description": "Category's display mode",
                                        "type": "string",
                                        "enum": [
                                            "products_and_description",
                                            "products_only",
                                            "description_only"
                                        ],
                                        "example": "products_and_description"
                                    },
                                    "banner_path[]": {
                                        "description": "Category's Banner",
                                        "type": "file",
                                        "format": "byte",
                                        "example": null
                                    },
                                    "logo_path[]": {
                                        "description": "Category's Logo",
                                        "type": "string",
                                        "format": "byte",
                                        "example": null
                                    },
                                    "parent_id": {
                                        "description": "Category's parent id",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "attributes": {
                                        "description": "Category's attributes for filter",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 11
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category by id",
                "description": "Delete category by id",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/catalog/categories/mass-update": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Mass update categories",
                "description": "Mass update categories",
                "operationId": "massUpdateCategories",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "indices",
                                    "value"
                                ],
                                "properties": {
                                    "indices": {
                                        "description": "categories Ids `CommaSeperated`",
                                        "type": "string",
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "value": {
                                        "description": "category's status value",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Selected categories successfully updated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/catalog/categories/mass-destroy": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Mass delete categories",
                "description": "Mass delete categories",
                "operationId": "massDeleteCategories",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "indices"
                                ],
                                "properties": {
                                    "indices": {
                                        "description": "Category's Ids `CommaSeperated`",
                                        "type": "string",
                                        "example": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Selected categories successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/catalog/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product list",
                "description": "Returns catalog product list, if you want to retrieve all catalog products at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getProducts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Product Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "allOf": [
                                                    {
                                                        "$ref": "#/components/schemas/Product"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/ProductFlat"
                                                    }
                                                ]
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Store the product",
                "description": "Store the catalog product",
                "operationId": "storeProduct",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "attribute_family_id",
                                    "sku"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "Product's type i.e. `simple`, `configurable`, `virtual`, `grouped`, `downloadable`, `bundle`, `booking`",
                                        "type": "string",
                                        "enum": [
                                            "simple",
                                            "configurable",
                                            "virtual",
                                            "grouped",
                                            "downloadable",
                                            "bundle",
                                            "booking"
                                        ],
                                        "example": "simple"
                                    },
                                    "attribute_family_id": {
                                        "description": "Attribute Family ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "sku": {
                                        "description": "Product's SKU Must be unique",
                                        "type": "string",
                                        "example": "furniture"
                                    },
                                    "super_attributes": {
                                        "description": "Product's super attributes `Only use with configurable type product`",
                                        "properties": {
                                            "color": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "size": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "example": 6
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "examples": {
                                "Standard": {
                                    "summary": "Standard",
                                    "value": {
                                        "type": "simple",
                                        "attribute_family_id": 1,
                                        "sku": "furniture"
                                    }
                                },
                                "Configurable": {
                                    "summary": "Configurable product",
                                    "value": {
                                        "type": "Configurable",
                                        "attribute_family_id": 1,
                                        "sku": "furniture",
                                        "super_attributes": {
                                            "color": [
                                                1
                                            ],
                                            "size": [
                                                6
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product created successfully."
                                        },
                                        "data": {
                                            "type": "object",
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/Product"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ProductFlat"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/catalog/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product detail",
                "description": "Returns catalog product detail",
                "operationId": "getProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/Product"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/ProductFlat"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update product (Configurable, Grouped, Downloadable, Bundle, Booking)",
                "description": "Update product (Configurable, Grouped, Downloadable, Bundle, Booking)",
                "operationId": "updateOtherTypeProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "sku",
                                    "name",
                                    "url_key",
                                    "short_description",
                                    "description"
                                ],
                                "properties": {
                                    "channel": {
                                        "description": "Store's channel code",
                                        "type": "string",
                                        "example": "default"
                                    },
                                    "locale": {
                                        "description": "Store's locale code",
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "sku": {
                                        "description": "Product's SKU must be unique",
                                        "type": "string",
                                        "example": "skipping-rope"
                                    },
                                    "product_number": {
                                        "description": "Product's number",
                                        "type": "string",
                                        "example": "sr-001"
                                    },
                                    "name": {
                                        "description": "Product's name",
                                        "type": "string",
                                        "example": "Skipping Rope"
                                    },
                                    "url_key": {
                                        "description": "Product's url key",
                                        "type": "string",
                                        "example": "skipping-rope"
                                    },
                                    "tax_category_id": {
                                        "description": "Product's tax category id",
                                        "type": "integer",
                                        "format": "id",
                                        "example": null
                                    },
                                    "new": {
                                        "description": "New's status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "featured": {
                                        "description": "Featured's status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "weight": {
                                        "description": "Weight",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "manage_stock": {
                                        "description": "Manage Stock status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "visible_individually": {
                                        "description": "Product visible individually status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "guest_checkout": {
                                        "description": "Product guest checkout status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "status": {
                                        "description": "Product status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "brand": {
                                        "description": "Product's brand attribute",
                                        "type": "integer",
                                        "format": "id",
                                        "example": 17
                                    },
                                    "short_description": {
                                        "description": "Product's short description",
                                        "type": "string",
                                        "example": "What is Lorem Ipsum?"
                                    },
                                    "description": {
                                        "description": "Product's description",
                                        "type": "string",
                                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                                    },
                                    "meta_title": {
                                        "description": "Product's meta title",
                                        "type": "string",
                                        "example": "Premium sofa sets"
                                    },
                                    "meta_description": {
                                        "description": "Product's meta description",
                                        "type": "string",
                                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                                    },
                                    "meta_keywords": {
                                        "description": "Product's meta keywords",
                                        "type": "string",
                                        "example": "Sofa set"
                                    },
                                    "price": {
                                        "description": "Product's price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                    },
                                    "customer_group_prices": {
                                        "description": "Product's customer group prices",
                                        "properties": {
                                            "price_0": {
                                                "properties": {
                                                    "customer_group_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "qty": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "value_type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "discount",
                                                            "fixed"
                                                        ],
                                                        "example": "fixed"
                                                    },
                                                    "value": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 3.2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "categories": {
                                        "description": "Product's categories",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "channels": {
                                        "description": "Product's channels",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "example": [
                                            1,
                                            3,
                                            4
                                        ]
                                    },
                                    "inventories": {
                                        "description": "Inventories",
                                        "properties": {
                                            "1": {
                                                "description": "Inventory source id",
                                                "type": "integer",
                                                "format": "id",
                                                "example": 270
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "variants": {
                                        "description": "Product's variants, `Only use in case of configurable type product (required field)`",
                                        "properties": {
                                            "28": {
                                                "properties": {
                                                    "sku": {
                                                        "type": "string",
                                                        "example": "skipping-rope-variant-1-6"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Red-S"
                                                    },
                                                    "color": {
                                                        "type": "integer",
                                                        "format": "id",
                                                        "example": 1
                                                    },
                                                    "size": {
                                                        "type": "integer",
                                                        "format": "id",
                                                        "example": 6
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 10.5
                                                    },
                                                    "weight": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 1.2
                                                    },
                                                    "status": {
                                                        "type": "integer",
                                                        "enum": [
                                                            0,
                                                            1
                                                        ],
                                                        "example": 1
                                                    },
                                                    "inventories": {
                                                        "properties": {
                                                            "1": {
                                                                "type": "integer",
                                                                "example": 500
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "images[]": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "format": "binary"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "29": {
                                                "properties": {
                                                    "sku": {
                                                        "type": "string",
                                                        "example": "skipping-rope-variant-1-7"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Red-M"
                                                    },
                                                    "color": {
                                                        "type": "integer",
                                                        "format": "id",
                                                        "example": 1
                                                    },
                                                    "size": {
                                                        "type": "integer",
                                                        "format": "id",
                                                        "example": 7
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 15
                                                    },
                                                    "weight": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 1
                                                    },
                                                    "status": {
                                                        "type": "integer",
                                                        "enum": [
                                                            0,
                                                            1
                                                        ],
                                                        "example": 1
                                                    },
                                                    "inventories": {
                                                        "properties": {
                                                            "1": {
                                                                "type": "integer",
                                                                "example": 500
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "images[files]": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "format": "binary"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "links": {
                                        "description": "Product's links, `Only use in case of grouped type product (required field)`",
                                        "properties": {
                                            "link_0": {
                                                "properties": {
                                                    "associated_product_id": {
                                                        "type": "integer",
                                                        "format": "id",
                                                        "example": 1
                                                    },
                                                    "qty": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "sort_order": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "link_1": {
                                                "properties": {
                                                    "associated_product_id": {
                                                        "type": "integer",
                                                        "format": "id",
                                                        "example": 2
                                                    },
                                                    "qty": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "sort_order": {
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "downloadable_links": {
                                        "description": "Product's downloadable links, `Info: Only use in downloadable type product`",
                                        "properties": {
                                            "link_0": {
                                                "properties": {
                                                    "en": {
                                                        "properties": {
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Link 1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 5
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "file",
                                                            "url"
                                                        ],
                                                        "example": "url"
                                                    },
                                                    "url": {
                                                        "description": "Only use with `type=url`.",
                                                        "type": "string",
                                                        "format": "byte",
                                                        "example": "https://cdn.pixabay.com/photo/2016/03/26/13/08/conceptual-1280533_1280.jpg"
                                                    },
                                                    "sample_type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "file",
                                                            "url"
                                                        ],
                                                        "example": "url"
                                                    },
                                                    "sample_url": {
                                                        "description": "Only use with `sample_type=url`.",
                                                        "type": "string",
                                                        "format": "byte",
                                                        "example": "https://cdn.pixabay.com/photo/2016/11/22/19/11/brick-wall-1850095_1280.jpg"
                                                    },
                                                    "downloads": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "sort_order": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "link_1": {
                                                "properties": {
                                                    "en": {
                                                        "properties": {
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Link 2"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 10
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "file",
                                                            "url"
                                                        ],
                                                        "example": "url"
                                                    },
                                                    "url": {
                                                        "description": "Only use with `type=url`.",
                                                        "type": "string",
                                                        "format": "byte",
                                                        "example": "https://cdn.pixabay.com/photo/2016/03/26/13/08/conceptual-1280533_1280.jpg"
                                                    },
                                                    "sample_type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "file",
                                                            "url"
                                                        ],
                                                        "example": "url"
                                                    },
                                                    "sample_url": {
                                                        "description": "Only use with `sample_type=url`.",
                                                        "type": "string",
                                                        "format": "byte",
                                                        "example": "https://cdn.pixabay.com/photo/2016/11/22/19/11/brick-wall-1850095_1280.jpg"
                                                    },
                                                    "downloads": {
                                                        "type": "integer",
                                                        "example": 20
                                                    },
                                                    "sort_order": {
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "downloadable_samples": {
                                        "description": "Product's downloadable samples, `Info: Only use in downloadable type product`",
                                        "properties": {
                                            "sample_0": {
                                                "properties": {
                                                    "en": {
                                                        "properties": {
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Sample 1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "file",
                                                            "url"
                                                        ],
                                                        "example": "url"
                                                    },
                                                    "url": {
                                                        "description": "Only use with `type=url`.",
                                                        "type": "string",
                                                        "format": "byte",
                                                        "example": "https://cdn.pixabay.com/photo/2017/10/04/14/50/staging-2816464_1280.jpg"
                                                    },
                                                    "sort_order": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "sample_1": {
                                                "properties": {
                                                    "en": {
                                                        "properties": {
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Sample 2"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "file",
                                                            "url"
                                                        ],
                                                        "example": "url"
                                                    },
                                                    "url": {
                                                        "description": "Only use with `type=url`.",
                                                        "type": "string",
                                                        "format": "byte",
                                                        "example": "https://cdn.pixabay.com/photo/2015/12/05/23/38/nursery-1078923_1280.jpg"
                                                    },
                                                    "sort_order": {
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "bundle_options": {
                                        "description": "Bundle product options, `Info: Only use in bundle type product`",
                                        "properties": {
                                            "option_0": {
                                                "properties": {
                                                    "en": {
                                                        "properties": {
                                                            "label": {
                                                                "type": "string",
                                                                "example": "Select One"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "select",
                                                            "radio",
                                                            "checkbox",
                                                            "multiselect"
                                                        ],
                                                        "example": "select"
                                                    },
                                                    "is_required": {
                                                        "type": "integer",
                                                        "enum": [
                                                            0,
                                                            1
                                                        ],
                                                        "example": 0
                                                    },
                                                    "sort_order": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "products": {
                                                        "properties": {
                                                            "product_0": {
                                                                "properties": {
                                                                    "product_id": {
                                                                        "type": "integer",
                                                                        "format": "id",
                                                                        "example": 1
                                                                    },
                                                                    "qty": {
                                                                        "type": "integer",
                                                                        "example": 2
                                                                    },
                                                                    "sort_order": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "product_1": {
                                                                "properties": {
                                                                    "product_id": {
                                                                        "type": "integer",
                                                                        "format": "id",
                                                                        "example": 2
                                                                    },
                                                                    "qty": {
                                                                        "type": "integer",
                                                                        "example": 3
                                                                    },
                                                                    "sort_order": {
                                                                        "type": "integer",
                                                                        "example": 2
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "option_1": {
                                                "properties": {
                                                    "en": {
                                                        "properties": {
                                                            "label": {
                                                                "type": "string",
                                                                "example": "Radio One"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "select",
                                                            "radio",
                                                            "checkbox",
                                                            "multiselect"
                                                        ],
                                                        "example": "radio"
                                                    },
                                                    "is_required": {
                                                        "type": "integer",
                                                        "enum": [
                                                            0,
                                                            1
                                                        ],
                                                        "example": 1
                                                    },
                                                    "sort_order": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "products": {
                                                        "properties": {
                                                            "product_0": {
                                                                "properties": {
                                                                    "product_id": {
                                                                        "type": "integer",
                                                                        "format": "id",
                                                                        "example": 1
                                                                    },
                                                                    "qty": {
                                                                        "type": "integer",
                                                                        "example": 2
                                                                    },
                                                                    "sort_order": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "product_1": {
                                                                "properties": {
                                                                    "product_id": {
                                                                        "type": "integer",
                                                                        "format": "id",
                                                                        "example": 2
                                                                    },
                                                                    "qty": {
                                                                        "type": "integer",
                                                                        "example": 3
                                                                    },
                                                                    "sort_order": {
                                                                        "type": "integer",
                                                                        "example": 2
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "option_3": {
                                                "properties": {
                                                    "en": {
                                                        "properties": {
                                                            "label": {
                                                                "type": "string",
                                                                "example": "Multiselect One"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "select",
                                                            "radio",
                                                            "checkbox",
                                                            "multiselect"
                                                        ],
                                                        "example": "multiselect"
                                                    },
                                                    "is_required": {
                                                        "type": "integer",
                                                        "enum": [
                                                            0,
                                                            1
                                                        ],
                                                        "example": 1
                                                    },
                                                    "sort_order": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "products": {
                                                        "properties": {
                                                            "product_0": {
                                                                "properties": {
                                                                    "product_id": {
                                                                        "type": "integer",
                                                                        "format": "id",
                                                                        "example": 1
                                                                    },
                                                                    "qty": {
                                                                        "type": "integer",
                                                                        "example": 2
                                                                    },
                                                                    "sort_order": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "product_1": {
                                                                "properties": {
                                                                    "product_id": {
                                                                        "type": "integer",
                                                                        "format": "id",
                                                                        "example": 2
                                                                    },
                                                                    "qty": {
                                                                        "type": "integer",
                                                                        "example": 3
                                                                    },
                                                                    "sort_order": {
                                                                        "type": "integer",
                                                                        "example": 2
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "product_2": {
                                                                "properties": {
                                                                    "product_id": {
                                                                        "type": "integer",
                                                                        "format": "id",
                                                                        "example": 3
                                                                    },
                                                                    "qty": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "sort_order": {
                                                                        "type": "integer",
                                                                        "example": 3
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "booking": {
                                        "description": "Booking product options, `Info: Only use in booking type product`",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "default",
                                                    "appointment",
                                                    "event",
                                                    "rental",
                                                    "table"
                                                ],
                                                "example": "default"
                                            },
                                            "booking_type": {
                                                "description": "`Only use with booking type=default`",
                                                "type": "string",
                                                "enum": [
                                                    "one",
                                                    "many"
                                                ],
                                                "example": "one"
                                            },
                                            "location": {
                                                "type": "string",
                                                "example": "India"
                                            },
                                            "available_every_week": {
                                                "description": "`Use with booking type=appointment, rental, table`",
                                                "type": "integer",
                                                "enum": [
                                                    0,
                                                    1
                                                ],
                                                "example": 1
                                            },
                                            "available_from": {
                                                "description": "`Not use if available_every_week=1 in appointment, rental, table bookings`",
                                                "type": "string",
                                                "format": "datetime",
                                                "example": "2023-05-31 12:00:00"
                                            },
                                            "available_to": {
                                                "description": "`Not use if available_every_week=1 in appointment, rental, table bookings`",
                                                "type": "string",
                                                "format": "datetime",
                                                "example": "2024-05-31 12:00:00"
                                            },
                                            "duration": {
                                                "description": "`Not use with type=event, rental, & booking_type=one`",
                                                "type": "number",
                                                "format": "float",
                                                "example": 30
                                            },
                                            "break_time": {
                                                "description": "`Not use with type=event, rental, & booking_type=one`",
                                                "type": "number",
                                                "format": "float",
                                                "example": 15
                                            },
                                            "qty": {
                                                "description": "`Not use with booking type=event`",
                                                "type": "integer",
                                                "example": 50
                                            },
                                            "same_slot_all_days": {
                                                "description": "`Use with booking type=appointment, rental, table`",
                                                "type": "integer",
                                                "enum": [
                                                    0,
                                                    1
                                                ],
                                                "example": 1
                                            },
                                            "slots": {
                                                "description": "`Not use with booking type=event`",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "from_day": {
                                                            "description": "`Only use with type=default with booking_type=one`",
                                                            "type": "integer",
                                                            "enum": [
                                                                0,
                                                                1,
                                                                2,
                                                                3,
                                                                4,
                                                                5,
                                                                6
                                                            ],
                                                            "example": 0
                                                        },
                                                        "to_day": {
                                                            "description": "`Only use with type=default with booking_type=one`",
                                                            "type": "integer",
                                                            "enum": [
                                                                0,
                                                                1,
                                                                2,
                                                                3,
                                                                4,
                                                                5,
                                                                6
                                                            ],
                                                            "example": 0
                                                        },
                                                        "from": {
                                                            "type": "string",
                                                            "example": "09:00"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "example": "11:00"
                                                        },
                                                        "status": {
                                                            "description": "`Only use with booking_type=many`",
                                                            "type": "integer",
                                                            "enum": [
                                                                0,
                                                                1
                                                            ],
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "tickets": {
                                                "description": "`Only use with booking type=event`",
                                                "properties": {
                                                    "ticket_0": {
                                                        "properties": {
                                                            "en": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Morning Show"
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "qty": {
                                                                "type": "integer",
                                                                "example": "150"
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 10.5
                                                            },
                                                            "special_price": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "special_price_from": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": null
                                                            },
                                                            "special_price_to": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": null
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ticket_1": {
                                                        "properties": {
                                                            "en": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Evening Show"
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "qty": {
                                                                "type": "integer",
                                                                "example": "200"
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 22
                                                            },
                                                            "special_price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 20.5
                                                            },
                                                            "special_price_from": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2023-05-31 12:00:00"
                                                            },
                                                            "special_price_to": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2024-05-31 12:00:00"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "renting_type": {
                                                "description": "`Only use with booking type=rental`",
                                                "type": "string",
                                                "enum": [
                                                    "daily",
                                                    "hourly",
                                                    "daily_hourly"
                                                ],
                                                "example": "daily_hourly"
                                            },
                                            "daily_price": {
                                                "description": "`Only use with booking type=rental & renting_type=daily, daily_hourly`",
                                                "type": "number",
                                                "format": "float",
                                                "example": 24
                                            },
                                            "hourly_price": {
                                                "description": "`Only use with booking type=rental & renting_type=hourly, daily_hourly`",
                                                "type": "number",
                                                "format": "float",
                                                "example": 1
                                            },
                                            "price_type": {
                                                "description": "`Only use with booking type=table`",
                                                "type": "string",
                                                "enum": [
                                                    "guest",
                                                    "table"
                                                ],
                                                "example": "guest"
                                            },
                                            "guest_limit": {
                                                "description": "`Only use with booking type=table & price_type=table`",
                                                "type": "integer",
                                                "example": 20
                                            },
                                            "prevent_scheduling_before": {
                                                "description": "`Only use with booking type=table`",
                                                "type": "number",
                                                "format": "float",
                                                "example": 5
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "examples": {
                                "ConfigurableProduct": {
                                    "summary": "Configurable Product",
                                    "value": {
                                        "channel": "default",
                                        "locale": "en",
                                        "sku": "skipping-rope",
                                        "product_number": "sr-001",
                                        "name": "Skipping Rope",
                                        "url_key": "skipping-rope",
                                        "tax_category_id": null,
                                        "new": 1,
                                        "featured": 1,
                                        "visible_individually": 1,
                                        "guest_checkout": 0,
                                        "status": 1,
                                        "brand": 17,
                                        "short_description": "What is Lorem Ipsum?",
                                        "description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_title": "Premium sofa sets",
                                        "meta_description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_keywords": "Sofa set",
                                        "price": 0,
                                        "customer_group_prices": {
                                            "customer_group_price_0": {
                                                "customer_group_id": 1,
                                                "qty": 2,
                                                "value_type": "fixed",
                                                "value": 3.2
                                            }
                                        },
                                        "categories": [
                                            1,
                                            2
                                        ],
                                        "channels": [
                                            1,
                                            3,
                                            4
                                        ],
                                        "variants": {
                                            "28": {
                                                "sku": "skipping-rope-variant-1-6",
                                                "name": "Red-S",
                                                "color": 1,
                                                "size": 6,
                                                "price": 10.5,
                                                "weight": 1.2,
                                                "status": 1,
                                                "inventories": {
                                                    "1": 500
                                                },
                                                "images[]": [
                                                    "string"
                                                ]
                                            },
                                            "29": {
                                                "sku": "skipping-rope-variant-1-7",
                                                "name": "Red-M",
                                                "color": 1,
                                                "size": 7,
                                                "price": 15,
                                                "weight": 1,
                                                "status": 1,
                                                "inventories": {
                                                    "1": 500
                                                },
                                                "images[files]": [
                                                    "string"
                                                ]
                                            }
                                        }
                                    }
                                },
                                "DownloadableProduct": {
                                    "summary": "Downloadable Product",
                                    "value": {
                                        "channel": "default",
                                        "locale": "en",
                                        "sku": "skipping-rope",
                                        "product_number": "sr-001",
                                        "name": "Skipping Rope",
                                        "url_key": "skipping-rope",
                                        "tax_category_id": null,
                                        "new": 1,
                                        "featured": 1,
                                        "visible_individually": 1,
                                        "guest_checkout": 0,
                                        "status": 1,
                                        "brand": 17,
                                        "short_description": "What is Lorem Ipsum?",
                                        "description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_title": "Premium sofa sets",
                                        "meta_description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_keywords": "Sofa set",
                                        "price": 0,
                                        "customer_group_prices": {
                                            "customer_group_price_0": {
                                                "customer_group_id": 1,
                                                "qty": 2,
                                                "value_type": "fixed",
                                                "value": 3.2
                                            }
                                        },
                                        "categories": [
                                            1,
                                            2
                                        ],
                                        "channels": [
                                            1,
                                            3,
                                            4
                                        ],
                                        "downloadable_links": {
                                            "link_0": {
                                                "en": {
                                                    "title": "Link 1"
                                                },
                                                "price": 5,
                                                "type": "url",
                                                "url": "https://cdn.pixabay.com/photo/2016/03/26/13/08/conceptual-1280533_1280.jpg",
                                                "sample_type": "url",
                                                "sample_url": "https://cdn.pixabay.com/photo/2016/11/22/19/11/brick-wall-1850095_1280.jpg",
                                                "downloads": 10,
                                                "sort_order": 1
                                            },
                                            "link_1": {
                                                "en": {
                                                    "title": "Link 2"
                                                },
                                                "price": 10,
                                                "type": "url",
                                                "url": "https://cdn.pixabay.com/photo/2016/03/26/13/08/conceptual-1280533_1280.jpg",
                                                "sample_type": "url",
                                                "sample_url": "https://cdn.pixabay.com/photo/2016/11/22/19/11/brick-wall-1850095_1280.jpg",
                                                "downloads": 20,
                                                "sort_order": 2
                                            }
                                        },
                                        "downloadable_samples": {
                                            "sample_0": {
                                                "en": {
                                                    "title": "Sample 1"
                                                },
                                                "type": "url",
                                                "url": "https://cdn.pixabay.com/photo/2017/10/04/14/50/staging-2816464_1280.jpg",
                                                "sort_order": 1
                                            },
                                            "sample_1": {
                                                "en": {
                                                    "title": "Sample 2"
                                                },
                                                "type": "url",
                                                "url": "https://cdn.pixabay.com/photo/2015/12/05/23/38/nursery-1078923_1280.jpg",
                                                "sort_order": 2
                                            }
                                        }
                                    }
                                },
                                "GroupedProduct": {
                                    "summary": "Grouped Product",
                                    "value": {
                                        "channel": "default",
                                        "locale": "en",
                                        "sku": "skipping-rope",
                                        "product_number": "sr-001",
                                        "name": "Skipping Rope",
                                        "url_key": "skipping-rope",
                                        "tax_category_id": null,
                                        "new": 1,
                                        "featured": 1,
                                        "visible_individually": 1,
                                        "guest_checkout": 0,
                                        "status": 1,
                                        "brand": 17,
                                        "short_description": "What is Lorem Ipsum?",
                                        "description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_title": "Premium sofa sets",
                                        "meta_description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_keywords": "Sofa set",
                                        "price": 0,
                                        "customer_group_prices": {
                                            "customer_group_price_0": {
                                                "customer_group_id": 1,
                                                "qty": 2,
                                                "value_type": "fixed",
                                                "value": 3.2
                                            }
                                        },
                                        "categories": [
                                            1,
                                            2
                                        ],
                                        "channels": [
                                            1,
                                            3,
                                            4
                                        ],
                                        "links": {
                                            "link_0": {
                                                "associated_product_id": 1,
                                                "qty": 2,
                                                "sort_order": 1
                                            },
                                            "link_1": {
                                                "associated_product_id": 2,
                                                "qty": 3,
                                                "sort_order": 2
                                            }
                                        }
                                    }
                                },
                                "BundleProduct": {
                                    "summary": "Bundle Product",
                                    "value": {
                                        "channel": "default",
                                        "locale": "en",
                                        "sku": "skipping-rope",
                                        "product_number": "sr-001",
                                        "name": "Skipping Rope",
                                        "url_key": "skipping-rope",
                                        "tax_category_id": null,
                                        "new": 1,
                                        "featured": 1,
                                        "visible_individually": 1,
                                        "guest_checkout": 0,
                                        "status": 1,
                                        "brand": 17,
                                        "short_description": "What is Lorem Ipsum?",
                                        "description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_title": "Premium sofa sets",
                                        "meta_description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_keywords": "Sofa set",
                                        "price": 0,
                                        "customer_group_prices": {
                                            "customer_group_price_0": {
                                                "customer_group_id": 1,
                                                "qty": 2,
                                                "value_type": "fixed",
                                                "value": 3.2
                                            }
                                        },
                                        "categories": [
                                            1,
                                            2
                                        ],
                                        "channels": [
                                            1,
                                            3,
                                            4
                                        ],
                                        "bundle_options": {
                                            "option_0": {
                                                "en": {
                                                    "label": "Select One"
                                                },
                                                "type": "select",
                                                "is_required": 0,
                                                "sort_order": 1,
                                                "products": {
                                                    "product_0": {
                                                        "product_id": 1,
                                                        "qty": 2,
                                                        "sort_order": 1
                                                    },
                                                    "product_1": {
                                                        "product_id": 2,
                                                        "qty": 3,
                                                        "sort_order": 2
                                                    }
                                                }
                                            },
                                            "option_1": {
                                                "en": {
                                                    "label": "Radio One"
                                                },
                                                "type": "radio",
                                                "is_required": 1,
                                                "sort_order": 2,
                                                "products": {
                                                    "product_0": {
                                                        "product_id": 1,
                                                        "qty": 2,
                                                        "sort_order": 1
                                                    },
                                                    "product_1": {
                                                        "product_id": 2,
                                                        "qty": 3,
                                                        "sort_order": 2
                                                    }
                                                }
                                            },
                                            "option_3": {
                                                "en": {
                                                    "label": "Multiselect One"
                                                },
                                                "type": "multiselect",
                                                "is_required": 1,
                                                "sort_order": 3,
                                                "products": {
                                                    "product_0": {
                                                        "product_id": 1,
                                                        "qty": 2,
                                                        "sort_order": 1
                                                    },
                                                    "product_1": {
                                                        "product_id": 2,
                                                        "qty": 3,
                                                        "sort_order": 2
                                                    },
                                                    "product_2": {
                                                        "product_id": 3,
                                                        "qty": 1,
                                                        "sort_order": 3
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "BookingProduct": {
                                    "summary": "Booking Product | Default",
                                    "value": {
                                        "channel": "default",
                                        "locale": "en",
                                        "sku": "skipping-rope",
                                        "product_number": "sr-001",
                                        "name": "Skipping Rope",
                                        "url_key": "skipping-rope",
                                        "tax_category_id": null,
                                        "new": 1,
                                        "featured": 1,
                                        "visible_individually": 1,
                                        "guest_checkout": 0,
                                        "status": 1,
                                        "brand": 17,
                                        "short_description": "What is Lorem Ipsum?",
                                        "description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_title": "Premium sofa sets",
                                        "meta_description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_keywords": "Sofa set",
                                        "price": 0,
                                        "customer_group_prices": {
                                            "customer_group_price_0": {
                                                "customer_group_id": 1,
                                                "qty": 2,
                                                "value_type": "fixed",
                                                "value": 3.2
                                            }
                                        },
                                        "categories": [
                                            1,
                                            2
                                        ],
                                        "channels": [
                                            1,
                                            3,
                                            4
                                        ],
                                        "booking": {
                                            "type": "default",
                                            "location": "Delhi",
                                            "qty": "25",
                                            "available_from": "2025-05-07 12:00:00",
                                            "available_to": "2025-05-16 12:00:00",
                                            "booking_type": "many",
                                            "duration": "45",
                                            "break_time": "15",
                                            "slots": {
                                                "0": [
                                                    {
                                                        "id": "0",
                                                        "from": "13:00",
                                                        "to": "16:00",
                                                        "status": "1"
                                                    }
                                                ],
                                                "1": [
                                                    {
                                                        "id": "1",
                                                        "from": "12:00",
                                                        "to": "14:00",
                                                        "status": "0"
                                                    }
                                                ],
                                                "2": [
                                                    {
                                                        "id": "2",
                                                        "from": "13:00",
                                                        "to": "17:00",
                                                        "status": "0"
                                                    }
                                                ],
                                                "6": [
                                                    {
                                                        "id": "6",
                                                        "from": "12:00",
                                                        "to": "15:00",
                                                        "status": "0"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "BookingProductAppointment": {
                                    "summary": "Booking Product | Appointment",
                                    "value": {
                                        "channel": "default",
                                        "locale": "en",
                                        "sku": "skipping-rope",
                                        "product_number": "sr-001",
                                        "name": "Skipping Rope",
                                        "url_key": "skipping-rope",
                                        "tax_category_id": null,
                                        "new": 1,
                                        "featured": 1,
                                        "visible_individually": 1,
                                        "guest_checkout": 0,
                                        "status": 1,
                                        "brand": 17,
                                        "short_description": "What is Lorem Ipsum?",
                                        "description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_title": "Premium sofa sets",
                                        "meta_description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_keywords": "Sofa set",
                                        "price": 0,
                                        "customer_group_prices": {
                                            "customer_group_price_0": {
                                                "customer_group_id": 1,
                                                "qty": 2,
                                                "value_type": "fixed",
                                                "value": 3.2
                                            }
                                        },
                                        "categories": [
                                            1,
                                            2
                                        ],
                                        "channels": [
                                            1,
                                            3,
                                            4
                                        ],
                                        "booking": {
                                            "type": "appointment",
                                            "location": "Noida",
                                            "qty": "15",
                                            "available_every_week": "0",
                                            "available_from": "2025-05-05 12:00:00",
                                            "available_to": "2025-05-08 12:00:00",
                                            "duration": "45",
                                            "break_time": "15",
                                            "same_slot_all_days": "0",
                                            "slots": {
                                                "0": [
                                                    {
                                                        "from": "12:10",
                                                        "to": "13:00"
                                                    }
                                                ],
                                                "1": [
                                                    {
                                                        "from": "12:00",
                                                        "to": "13:00"
                                                    },
                                                    {
                                                        "from": "14:00",
                                                        "to": "15:00"
                                                    }
                                                ],
                                                "6": [
                                                    {
                                                        "from": "13:00",
                                                        "to": "15:00"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "BookingProductRental": {
                                    "summary": "Booking Product | Rental",
                                    "value": {
                                        "channel": "default",
                                        "locale": "en",
                                        "sku": "skipping-rope",
                                        "product_number": "sr-001",
                                        "name": "Skipping Rope",
                                        "url_key": "skipping-rope",
                                        "tax_category_id": null,
                                        "new": 1,
                                        "featured": 1,
                                        "visible_individually": 1,
                                        "guest_checkout": 0,
                                        "status": 1,
                                        "brand": 17,
                                        "short_description": "What is Lorem Ipsum?",
                                        "description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_title": "Premium sofa sets",
                                        "meta_description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_keywords": "Sofa set",
                                        "price": 0,
                                        "customer_group_prices": {
                                            "customer_group_price_0": {
                                                "customer_group_id": 1,
                                                "qty": 2,
                                                "value_type": "fixed",
                                                "value": 3.2
                                            }
                                        },
                                        "categories": [
                                            1,
                                            2
                                        ],
                                        "channels": [
                                            1,
                                            3,
                                            4
                                        ],
                                        "booking": {
                                            "type": "rental",
                                            "location": "Delhi",
                                            "qty": "35",
                                            "available_every_week": "0",
                                            "available_from": "2025-05-06 12:00:00",
                                            "available_to": "2025-05-08 12:00:00",
                                            "renting_type": "daily_hourly",
                                            "daily_price": "50",
                                            "hourly_price": "5.0000",
                                            "same_slot_all_days": "0",
                                            "slots": {
                                                "0": [
                                                    {
                                                        "from": "12:00",
                                                        "to": "13:00"
                                                    },
                                                    {
                                                        "from": "13:00",
                                                        "to": "14:00"
                                                    }
                                                ],
                                                "1": [
                                                    {
                                                        "from": "12:00",
                                                        "to": "13:00"
                                                    },
                                                    {
                                                        "from": "13:00",
                                                        "to": "14:00"
                                                    },
                                                    {
                                                        "from": "14:00",
                                                        "to": "15:00"
                                                    }
                                                ],
                                                "6": [
                                                    {
                                                        "from": "12:00",
                                                        "to": "13:00"
                                                    },
                                                    {
                                                        "from": "13:00",
                                                        "to": "14:00"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "BookingProductTable": {
                                    "summary": "Booking Product | Table",
                                    "value": {
                                        "channel": "default",
                                        "locale": "en",
                                        "sku": "skipping-rope",
                                        "product_number": "sr-001",
                                        "name": "Skipping Rope",
                                        "url_key": "skipping-rope",
                                        "tax_category_id": null,
                                        "new": 1,
                                        "featured": 1,
                                        "visible_individually": 1,
                                        "guest_checkout": 0,
                                        "status": 1,
                                        "brand": 17,
                                        "short_description": "What is Lorem Ipsum?",
                                        "description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_title": "Premium sofa sets",
                                        "meta_description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_keywords": "Sofa set",
                                        "price": 0,
                                        "customer_group_prices": {
                                            "customer_group_price_0": {
                                                "customer_group_id": 1,
                                                "qty": 2,
                                                "value_type": "fixed",
                                                "value": 3.2
                                            }
                                        },
                                        "categories": [
                                            1,
                                            2
                                        ],
                                        "channels": [
                                            1,
                                            3,
                                            4
                                        ],
                                        "booking": {
                                            "type": "table",
                                            "location": "Delhi",
                                            "available_every_week": "0",
                                            "available_from": "2025-05-06 12:00:00",
                                            "available_to": "2025-05-14 12:00:00",
                                            "price_type": "table",
                                            "guest_limit": "5",
                                            "qty": "6",
                                            "duration": "20",
                                            "break_time": "10",
                                            "prevent_scheduling_before": "0",
                                            "same_slot_all_days": "0",
                                            "slots": {
                                                "0": [
                                                    {
                                                        "from": "12:00",
                                                        "to": "13:00"
                                                    },
                                                    {
                                                        "from": "13:00",
                                                        "to": "14:00"
                                                    }
                                                ],
                                                "1": [
                                                    {
                                                        "from": "13:00",
                                                        "to": "15:00"
                                                    }
                                                ],
                                                "6": [
                                                    {
                                                        "from": "13:00",
                                                        "to": "14:00"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "BookingProductEvent": {
                                    "summary": "Booking Product | Event",
                                    "value": {
                                        "channel": "default",
                                        "locale": "en",
                                        "sku": "skipping-rope",
                                        "product_number": "sr-001",
                                        "name": "Skipping Rope",
                                        "url_key": "skipping-rope",
                                        "tax_category_id": null,
                                        "new": 1,
                                        "featured": 1,
                                        "visible_individually": 1,
                                        "guest_checkout": 0,
                                        "status": 1,
                                        "brand": 17,
                                        "short_description": "What is Lorem Ipsum?",
                                        "description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_title": "Premium sofa sets",
                                        "meta_description": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                                        "meta_keywords": "Sofa set",
                                        "price": 0,
                                        "customer_group_prices": {
                                            "customer_group_price_0": {
                                                "customer_group_id": 1,
                                                "qty": 2,
                                                "value_type": "fixed",
                                                "value": 3.2
                                            }
                                        },
                                        "categories": [
                                            1,
                                            2
                                        ],
                                        "channels": [
                                            1,
                                            3,
                                            4
                                        ],
                                        "booking": {
                                            "type": "event",
                                            "location": "Delhi",
                                            "available_from": "2025-05-06 12:00:00",
                                            "available_to": "2025-05-09 12:00:00",
                                            "tickets": {
                                                "ticket_0": {
                                                    "en": {
                                                        "name": "Morning event",
                                                        "description": "Morning event"
                                                    },
                                                    "qty": "5",
                                                    "price": "500.0000",
                                                    "special_price": "",
                                                    "special_price_from": "2025-05-05 12:00:00",
                                                    "special_price_to": "2025-05-09 12:00:00"
                                                },
                                                "ticket_1": {
                                                    "en": {
                                                        "name": "Evening event",
                                                        "description": "Evening event"
                                                    },
                                                    "qty": "4",
                                                    "price": "400.0000",
                                                    "special_price": "",
                                                    "special_price_from": "2025-05-05 12:00:00",
                                                    "special_price_to": "2025-05-09 12:00:00"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product updated successfully."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Update product (Simple, Virtual)",
                "description": "Update product (Simple, Virtual)",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "sku",
                                    "name",
                                    "url_key",
                                    "short_description",
                                    "description"
                                ],
                                "properties": {
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    },
                                    "channel": {
                                        "description": "Store's channel code",
                                        "type": "string",
                                        "example": "default"
                                    },
                                    "locale": {
                                        "description": "Store's locale code",
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "sku": {
                                        "description": "Product's SKU must be unique",
                                        "type": "string",
                                        "example": "furniture"
                                    },
                                    "product_number": {
                                        "description": "Product's number",
                                        "type": "string",
                                        "example": "ssf-001"
                                    },
                                    "name": {
                                        "description": "Product's name",
                                        "type": "string",
                                        "example": "Sofa Set"
                                    },
                                    "url_key": {
                                        "description": "Product's url key",
                                        "type": "string",
                                        "example": "sofa-set-furniture"
                                    },
                                    "tax_category_id": {
                                        "description": "Product's tax category id",
                                        "type": "integer",
                                        "format": "id",
                                        "example": null
                                    },
                                    "new": {
                                        "description": "New's status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "featured": {
                                        "description": "Featured's status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "manage_stock": {
                                        "description": "Manage Stock status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "visible_individually": {
                                        "description": "Product visible individually status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "guest_checkout": {
                                        "description": "Product guest checkout status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "status": {
                                        "description": "Product status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "color": {
                                        "description": "Product's color attribute",
                                        "type": "integer",
                                        "format": "id",
                                        "example": 3
                                    },
                                    "size": {
                                        "description": "Product's size attribute",
                                        "type": "integer",
                                        "format": "id",
                                        "example": 9
                                    },
                                    "brand": {
                                        "description": "Product's brand attribute",
                                        "type": "integer",
                                        "format": "id",
                                        "example": 17
                                    },
                                    "short_description": {
                                        "description": "Product's short description",
                                        "type": "string",
                                        "example": "What is Lorem Ipsum?"
                                    },
                                    "description": {
                                        "description": "Product's description",
                                        "type": "string",
                                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                                    },
                                    "meta_title": {
                                        "description": "Product's meta title",
                                        "type": "string",
                                        "example": "Premium sofa sets"
                                    },
                                    "meta_description": {
                                        "description": "Product's meta description",
                                        "type": "string",
                                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                                    },
                                    "meta_keywords": {
                                        "description": "Product's meta keywords",
                                        "type": "string",
                                        "example": "Sofa set"
                                    },
                                    "price": {
                                        "description": "Product's price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10.5
                                    },
                                    "cost": {
                                        "description": "Product's cost",
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                    },
                                    "special_price": {
                                        "description": "Product's special price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 8.3
                                    },
                                    "special_price_from": {
                                        "description": "Product's special price from",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-05-30"
                                    },
                                    "special_price_to": {
                                        "description": "Product's special price to",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-22"
                                    },
                                    "length": {
                                        "description": "Product's length, `Info: not use in virtual, downloadable types product`",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "width": {
                                        "description": "Product's width, `Info: not use in virtual, downloadable types product`",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "height": {
                                        "description": "Product's height, `Info: not use in virtual, downloadable types product`",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "weight": {
                                        "description": "Product's weight, `Info: not use in virtual, downloadable types product`",
                                        "type": "number",
                                        "format": "float",
                                        "example": 1
                                    },
                                    "inventories[1]": {
                                        "description": "Product's inventories",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "images[files][]": {
                                        "description": "Product's images",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "images[position][]": {
                                        "description": "Product's image position",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "id",
                                            "example": 1
                                        },
                                        "collectionFormat": "multi"
                                    },
                                    "videos[files][]": {
                                        "description": "Product's videos",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "videos[position][]": {
                                        "description": "Product's video position",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "id",
                                            "example": 1
                                        },
                                        "collectionFormat": "multi"
                                    },
                                    "categories[]": {
                                        "description": "Product's categories",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "channels[]": {
                                        "description": "Product's channels",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "up_sell[]": {
                                        "description": "Product's channels",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "cross_sell[]": {
                                        "description": "Product's channels",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "related_products[]": {
                                        "description": "Product's channels",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete product by id",
                "description": "Delete catalog product by id",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/catalog/products/{id}/inventories": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Update the product's inventory",
                "description": "Update the product's inventory",
                "operationId": "updateProductInventory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "inventories"
                                ],
                                "properties": {
                                    "inventories": {
                                        "description": "Product's inventories in key:value pair i.e. `key` is `inventory_source_id` and `value` is `quantity`",
                                        "properties": {
                                            "1": {
                                                "description": "Inventory source id",
                                                "type": "integer",
                                                "format": "id",
                                                "example": 270
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Inventory updated successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 150
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/catalog/products/mass-update": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Mass update products",
                "description": "Mass update products",
                "operationId": "massUpdateProduct",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "indices",
                                    "value"
                                ],
                                "properties": {
                                    "indices": {
                                        "description": "Products Ids `CommaSeperated`",
                                        "type": "string",
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "value": {
                                        "description": "Product's status value",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Selected products successfully updated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/catalog/products/mass-destroy": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Mass delete products",
                "description": "Mass delete products",
                "operationId": "massDeleteProduct",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "indices"
                                ],
                                "properties": {
                                    "indices": {
                                        "description": "Products Ids `CommaSeperated`",
                                        "type": "string",
                                        "example": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Selected Resource(s) successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/configuration": {
            "get": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Get admin configuration's item list",
                "description": "Returns configuration's item list",
                "operationId": "getConfigurations",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Configuration"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Store the configuration value",
                "description": "Store the configuration calue",
                "operationId": "storeConfiguration",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "channel",
                                    "locale"
                                ],
                                "properties": {
                                    "channel": {
                                        "description": "Channel code for which you want to save the config value",
                                        "type": "string",
                                        "example": "default"
                                    },
                                    "locale": {
                                        "description": "Locale code for which you want to save the config value",
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "index": {
                                        "description": "Replace `index` with your key, like: `general`",
                                        "properties": {
                                            "child_index": {
                                                "description": "Replace `child_index` with your key, like: `content`",
                                                "properties": {
                                                    "child_1_sub_index": {
                                                        "description": "Replace `child_1_sub_index` with your key, like: `shop`",
                                                        "properties": {
                                                            "child_1_sub_index_1": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "child_1_sub_index_2": {
                                                                "type": "string",
                                                                "example": "1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "child_2_sub_index": {
                                                        "description": "Replace `child_2_sub_index` with your key, like: `shop`",
                                                        "properties": {
                                                            "child_2_sub_index_1": {
                                                                "type": "string",
                                                                "example": "1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "child_3_sub_index": {
                                                        "description": "Replace `child_3_sub_index` with your key, like: `shop`",
                                                        "properties": {
                                                            "child_3_sub_index_1": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "child_3_sub_index_2": {
                                                                "type": "string",
                                                                "example": "1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object",
                                        "example": {
                                            "content": {
                                                "shop": {
                                                    "compare_option": "0",
                                                    "wishlist_option": "0"
                                                },
                                                "custom_scripts": {
                                                    "custom_css": "<style>.demo{width:100px;}</style>",
                                                    "custom_javascript": "<script>console.log('Texting')</script>"
                                                }
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Configuration updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/{customer_id}/addresses": {
            "get": {
                "tags": [
                    "Customer Addresses"
                ],
                "summary": "Get customer address list",
                "description": "Returns customer address list, if you want to retrieve all customer addresses at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getCustomerAddresses",
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "path",
                        "description": "Customer Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Customer Address Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Address"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customer Addresses"
                ],
                "summary": "Store the customer's address",
                "description": "Store the customer's address",
                "operationId": "storeCustomerAddress",
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "path",
                        "description": "Customer Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "address",
                                    "country",
                                    "state",
                                    "city",
                                    "postcode",
                                    "phone",
                                    "email"
                                ],
                                "properties": {
                                    "company_name": {
                                        "description": "Company name",
                                        "type": "string",
                                        "example": "Bagisto"
                                    },
                                    "vat_id": {
                                        "description": "Vat ID",
                                        "type": "string",
                                        "example": "INV01234567891"
                                    },
                                    "first_name": {
                                        "description": "Customer's First name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "description": "Customer's Last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "address": {
                                        "description": "Street Address",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "address": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            "5230, N Lincoln Ave"
                                        ]
                                    },
                                    "country": {
                                        "description": "Address's ountry code `United State` i.e. `US`",
                                        "type": "string",
                                        "example": "US"
                                    },
                                    "state": {
                                        "description": "Address's state code `Indiana` i.e. `IN`",
                                        "type": "string",
                                        "example": "IN"
                                    },
                                    "city": {
                                        "description": "Address's city",
                                        "type": "string",
                                        "example": "Chicago"
                                    },
                                    "postcode": {
                                        "description": "Address's postcode",
                                        "type": "integer",
                                        "example": 60625
                                    },
                                    "email": {
                                        "description": "Address's email",
                                        "type": "string",
                                        "example": "admin@example.com"
                                    },
                                    "phone": {
                                        "description": "Phone Number",
                                        "type": "string",
                                        "example": "02345678976"
                                    },
                                    "default_address": {
                                        "description": "Default Address Status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer address created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Address"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/{customer_id}/addresses/{id}": {
            "get": {
                "tags": [
                    "Customer Addresses"
                ],
                "summary": "Get customer's address detail",
                "description": "Returns customer's address detail",
                "operationId": "getCustomerAddress",
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer Address ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Address"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customer Addresses"
                ],
                "summary": "Update customer's addresses",
                "description": "Update customer's addresses",
                "operationId": "updateCustomerAddress",
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "path",
                        "description": "Customer Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer Address ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "address",
                                    "country",
                                    "state",
                                    "city",
                                    "postcode",
                                    "phone",
                                    "email"
                                ],
                                "properties": {
                                    "company_name": {
                                        "description": "Company name",
                                        "type": "string",
                                        "example": "Bagisto"
                                    },
                                    "vat_id": {
                                        "description": "Vat ID",
                                        "type": "string",
                                        "example": "INV01234567891"
                                    },
                                    "first_name": {
                                        "description": "Customer's First name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "description": "Customer's Last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "address": {
                                        "description": "Street Address",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "address": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            "5230, N Lincoln Ave"
                                        ]
                                    },
                                    "country": {
                                        "description": "Address's country code `United State` i.e. `US`",
                                        "type": "string",
                                        "example": "US"
                                    },
                                    "state": {
                                        "description": "Address's state code `Indiana` i.e. `IN`",
                                        "type": "string",
                                        "example": "IN"
                                    },
                                    "city": {
                                        "description": "Address's city",
                                        "type": "string",
                                        "example": "Chicago"
                                    },
                                    "postcode": {
                                        "description": "Address's postcode",
                                        "type": "integer",
                                        "example": 60625
                                    },
                                    "email": {
                                        "description": "Address's email",
                                        "type": "string",
                                        "example": "admin@example.com"
                                    },
                                    "phone": {
                                        "description": "Phone Number",
                                        "type": "string",
                                        "example": "02345678976"
                                    },
                                    "default_address": {
                                        "description": "Default Address Status",
                                        "type": "integer",
                                        "enum": [
                                            1
                                        ],
                                        "example": null
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer address updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Address"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customer Addresses"
                ],
                "summary": "Delete customer's address by id",
                "description": "Delete customer's address by id",
                "operationId": "deleteCustomerAddress",
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "path",
                        "description": "Customer Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer Address ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer address deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/{customer_id}/addresses/mass-destroy": {
            "post": {
                "tags": [
                    "Customer Addresses"
                ],
                "summary": "Mass delete customer's address' by id",
                "description": "Mass delete customer's address' by id",
                "operationId": "massDeleteCustomerAddress",
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "path",
                        "description": "Customer Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "indices"
                                ],
                                "properties": {
                                    "indices": {
                                        "description": "Address's Ids `CommaSeperated`",
                                        "type": "string",
                                        "example": [
                                            8,
                                            7
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Selected customer addresses deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get customers",
                "description": "Returns customer list, if you want to retrieve all customers at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getCustomers",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Customer id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Customer"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Store the customer",
                "description": "Store the customer",
                "operationId": "storeCustomer",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "gender",
                                    "customer_group_id"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "Customer's first name",
                                        "type": "string",
                                        "example": "Smith"
                                    },
                                    "last_name": {
                                        "description": "Customer's last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "description": "Customer's email",
                                        "type": "string",
                                        "example": "smith@example.com"
                                    },
                                    "gender": {
                                        "description": "Customer's gender",
                                        "type": "string",
                                        "enum": [
                                            "Male",
                                            "Female",
                                            "Other"
                                        ],
                                        "example": "Male"
                                    },
                                    "date_of_birth": {
                                        "description": "Customer's date of birth i.e. `yyyy-mm-dd`",
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-12-05"
                                    },
                                    "phone": {
                                        "description": "Customer's phone",
                                        "type": "integer",
                                        "example": 9785461320
                                    },
                                    "customer_group_id": {
                                        "description": "Customer's group id",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/{id}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get customer detail",
                "description": "Returns customer detail",
                "operationId": "getCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update Customer",
                "description": "Update Customer",
                "operationId": "updateCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "gender",
                                    "customer_group_id"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "Customer's first name",
                                        "type": "string",
                                        "example": "Smith"
                                    },
                                    "last_name": {
                                        "description": "Customer's last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "description": "Customer's email",
                                        "type": "string",
                                        "example": "smith@example.com"
                                    },
                                    "gender": {
                                        "description": "Customer's gender",
                                        "type": "string",
                                        "enum": [
                                            "Male",
                                            "Female",
                                            "Other"
                                        ],
                                        "example": "Male"
                                    },
                                    "date_of_birth": {
                                        "description": "Customer's date of birth i.e. `yyyy-mm-dd`",
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-12-05"
                                    },
                                    "status": {
                                        "description": "Customer's status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "is_suspended": {
                                        "description": "Customer's suspended status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "phone": {
                                        "description": "Customer's phone",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 9785461320
                                    },
                                    "customer_group_id": {
                                        "description": "Customer's group id",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Delete customer by id",
                "description": "Delete customer by id",
                "operationId": "deleteCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/mass-update": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Mass update customers",
                "description": "Mass update customers",
                "operationId": "massUpdateCustomers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "indices",
                                    "update_value"
                                ],
                                "properties": {
                                    "indices": {
                                        "description": "Products Ids `CommaSeperated`",
                                        "type": "string",
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "value": {
                                        "description": "Customer's status value",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Selected customers successfully updated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/mass-destroy": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Mass delete customers",
                "description": "Mass delete customers",
                "operationId": "massDeleteCustomer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "indices",
                                    "update_value"
                                ],
                                "properties": {
                                    "indices": {
                                        "description": "Customer's Ids `CommaSeperated`",
                                        "type": "string",
                                        "example": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Selected customers successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/{id}/orders": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get customer's orders",
                "description": "Returns customer's order list",
                "operationId": "getCustomerOrders",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/{id}/invoices": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get all order invoices by customer ID",
                "description": "Get all order invoices by customer ID\t",
                "operationId": "getCustomerInvoices",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Invoice"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/{id}/notes": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Store the customer's note by customer id",
                "description": "Store the customer's note by customer id",
                "operationId": "storeCustomerNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "note"
                                ],
                                "properties": {
                                    "note": {
                                        "description": "Customer's note",
                                        "type": "string",
                                        "example": "This is a first note for this customer"
                                    },
                                    "customer_notified": {
                                        "description": "Flag indicating if customer has been notified",
                                        "type": "integer",
                                        "enum": [
                                            "0",
                                            "1"
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Customer"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/gdpr": {
            "get": {
                "tags": [
                    "Customer GDPR"
                ],
                "summary": "Get list of customer's GDPR requests",
                "description": "Returns a list of GDPR data requests. Supports pagination and sorting.",
                "operationId": "getCustomerGDPRRequests",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "GDPR id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GDPR"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/gdpr/{id}": {
            "get": {
                "tags": [
                    "Customer GDPR"
                ],
                "summary": "Get a GDPR request's of the customer",
                "description": "Returns detailed information of a specific GDPR data request.",
                "operationId": "getCustomerGDPRRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "GDPR request ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GDPR"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "GDPR Request Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customer GDPR"
                ],
                "summary": "Update GDPR Request",
                "description": "Update the GDPR request's information.",
                "operationId": "updateGDPRRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "GDPR request ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "completed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "GDPR request updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "GDPR request has been updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/GDPR"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to update GDPR request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to update GDPR request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customer GDPR"
                ],
                "summary": "Delete customer GDPR request by id",
                "description": "Delete customer GDPR by id",
                "operationId": "deleteCustomerGDPRRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer GDPR ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "GDPR Request deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/groups": {
            "get": {
                "tags": [
                    "Customer Groups"
                ],
                "summary": "Get customer group list",
                "description": "Returns customer group list, if you want to retrieve all customer groups at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getCustomerGroups",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Customer Group Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Group"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customer Groups"
                ],
                "summary": "Store the customer group",
                "description": "Store the customer group",
                "operationId": "storeCustomerGroup",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Customer group's code `Unique`, `No-whitespace`, `No-underscore`",
                                        "type": "string",
                                        "example": "vip"
                                    },
                                    "name": {
                                        "description": "Customer group's name",
                                        "type": "string",
                                        "example": "VIP Group"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer group created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Group"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/groups/{id}": {
            "get": {
                "tags": [
                    "Customer Groups"
                ],
                "summary": "Get customer group detail",
                "description": "Returns customer group detail",
                "operationId": "getCustomerGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer Group ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Group"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customer Groups"
                ],
                "summary": "Update customer group",
                "description": "Update customer group",
                "operationId": "updateCustomerGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer Group ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Customer group's code `Unique`, `No-whitespace`, `No-underscore`",
                                        "type": "string",
                                        "example": "vip"
                                    },
                                    "name": {
                                        "description": "Customer group's name",
                                        "type": "string",
                                        "example": "VIP Group"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer group updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Group"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customer Groups"
                ],
                "summary": "Delete customer group by id",
                "description": "Delete customer group by id",
                "operationId": "deleteCustomerGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer Group ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer group deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/reviews": {
            "get": {
                "tags": [
                    "Customer Reviews"
                ],
                "summary": "Get customer review list",
                "description": "Returns customer review list, if you want to retrieve all customer reviews at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getCustomerReviews",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Customer Review Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Review"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/reviews/{id}": {
            "get": {
                "tags": [
                    "Customer Reviews"
                ],
                "summary": "Get customer review detail",
                "description": "Returns customer review detail",
                "operationId": "getCustomerReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer Review ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Review"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customer Reviews"
                ],
                "summary": "Update customer review",
                "description": "Update customer review",
                "operationId": "updateCustomerReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer Review ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "Review's status",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "approved",
                                            "disapproved"
                                        ],
                                        "example": "approved"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customer Reviews"
                ],
                "summary": "Delete customer review by id",
                "description": "Delete customer review by id",
                "operationId": "deleteCustomerReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer Review ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/reviews/mass-destroy": {
            "post": {
                "tags": [
                    "Customer Reviews"
                ],
                "summary": "Mass delete customer review by id",
                "description": "Mass delete customer review by id",
                "operationId": "massDeleteCustomerReview",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "indices"
                                ],
                                "properties": {
                                    "indices": {
                                        "description": "Review's Ids `CommaSeperated`",
                                        "type": "string",
                                        "example": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Selected reviews deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/customers/reviews/mass-update": {
            "post": {
                "tags": [
                    "Customer Reviews"
                ],
                "summary": "Mass update customer review by id",
                "description": "Mass update customer review by id",
                "operationId": "massUpdateCustomerReview",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "indices",
                                    "value"
                                ],
                                "properties": {
                                    "indices": {
                                        "description": "Review's Ids `CommaSeperated`",
                                        "type": "string",
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "value": {
                                        "description": "Review's status",
                                        "type": "integer",
                                        "enum": [
                                            "approved",
                                            "disapproved",
                                            "pending"
                                        ],
                                        "example": "approved"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Selected reviews successfully updated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/promotions/campaigns": {
            "get": {
                "tags": [
                    "Campaigns"
                ],
                "summary": "Get campaign list",
                "description": "Returns campaign list, if you want to retrieve all campaigns at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getCampaigns",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Campaign Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Campaign"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Campaigns"
                ],
                "summary": "Store the campaign",
                "description": "Store the campaign",
                "operationId": "storeCampaign",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "subject",
                                    "status",
                                    "marketing_template_id",
                                    "marketing_event_id",
                                    "channel_id",
                                    "customer_group_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Campaign's name",
                                        "type": "string",
                                        "example": "Birthday Offer"
                                    },
                                    "subject": {
                                        "description": "Campaign's subject",
                                        "type": "string",
                                        "example": "Birthday Offer"
                                    },
                                    "status": {
                                        "description": "Campaign's status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "marketing_template_id": {
                                        "description": "Email Template ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "marketing_event_id": {
                                        "description": "Event ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "channel_id": {
                                        "description": "Channel ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "customer_group_id": {
                                        "description": "Customer Group ID",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Campaign"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/promotions/campaigns/{id}": {
            "get": {
                "tags": [
                    "Campaigns"
                ],
                "summary": "Get campaign detail",
                "description": "Returns campaign detail",
                "operationId": "getCampaign",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Campaign ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Campaign"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Campaigns"
                ],
                "summary": "Update campaign",
                "description": "Update campaign",
                "operationId": "updateCampaign",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Campaign ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "subject",
                                    "status",
                                    "marketing_template_id",
                                    "marketing_event_id",
                                    "channel_id",
                                    "customer_group_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Campaign's name",
                                        "type": "string",
                                        "example": "Birthday Offer"
                                    },
                                    "subject": {
                                        "description": "Campaign's subject",
                                        "type": "string",
                                        "example": "Birthday Offer"
                                    },
                                    "status": {
                                        "description": "Campaign's status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "marketing_template_id": {
                                        "description": "Email Template ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "marketing_event_id": {
                                        "description": "Event ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "channel_id": {
                                        "description": "Channel ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "customer_group_id": {
                                        "description": "Customer Group ID",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Campaign"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Campaigns"
                ],
                "summary": "Delete campaign by id",
                "description": "Delete campaign by id",
                "operationId": "deleteCampaign",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Campaign ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/promotions/email-templates": {
            "get": {
                "tags": [
                    "Email Templates"
                ],
                "summary": "Get email template's",
                "description": "Returns email template list, if you want to retrieve all email templates at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getEmailTemplates",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Email Template Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EmailTemplate"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Email Templates"
                ],
                "summary": "Store the email template",
                "description": "Store the email template",
                "operationId": "storeEmailTemplate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "content"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Email template name",
                                        "type": "string",
                                        "example": "Festival Offer"
                                    },
                                    "content": {
                                        "description": "Email template content",
                                        "type": "string",
                                        "example": "What is Lorem Ipsum? Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."
                                    },
                                    "status": {
                                        "description": "Email template status",
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "draft"
                                        ],
                                        "example": "inactive"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email template created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EmailTemplate"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/promotions/email-templates/{id}": {
            "get": {
                "tags": [
                    "Email Templates"
                ],
                "summary": "Get email template detail",
                "description": "Returns email template detail",
                "operationId": "getEmailTemplate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Email Template ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/EmailTemplate"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Email Templates"
                ],
                "summary": "Update email template",
                "description": "Update email template",
                "operationId": "updateEmailTemplate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Email Template ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "content"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Email template name",
                                        "type": "string",
                                        "example": "Festival Offer"
                                    },
                                    "content": {
                                        "description": "Email template content",
                                        "type": "string",
                                        "example": "What is Lorem Ipsum? Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."
                                    },
                                    "status": {
                                        "description": "Email template status",
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "draft"
                                        ],
                                        "example": "inactive"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email template updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EmailTemplate"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Email Templates"
                ],
                "summary": "Delete email template by id",
                "description": "Delete email template by id",
                "operationId": "deleteEmailTemplate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Email Template ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email template deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/promotions/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get event list",
                "description": "Returns event list, if you want to retrieve all events at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getEvents",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Event Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Event"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Store the event",
                "description": "Store the event",
                "operationId": "storeEvent",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "date"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Event name",
                                        "type": "string",
                                        "example": "Birthday Offer"
                                    },
                                    "description": {
                                        "description": "Email template content",
                                        "type": "string",
                                        "example": "What is Lorem Ipsum? Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."
                                    },
                                    "date": {
                                        "description": "Event date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-07-27"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/promotions/events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get event detail",
                "description": "Returns event detail",
                "operationId": "getEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update event",
                "description": "Update event",
                "operationId": "updateEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "date"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Event name",
                                        "type": "string",
                                        "example": "Anniversary Offer"
                                    },
                                    "description": {
                                        "description": "Email template content",
                                        "type": "string",
                                        "example": "What is Lorem Ipsum? Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."
                                    },
                                    "date": {
                                        "description": "Event date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-27"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete event by id",
                "description": "Delete event by id",
                "operationId": "deleteEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/marketing/communications/subscribers": {
            "get": {
                "tags": [
                    "Newsletter Subscriptions"
                ],
                "summary": "Get Subscriber's list",
                "description": "Returns Subscriber's list, if you want to retrieve all Subscribers at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getSubscribers",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Subscribers Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Subscription"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/marketing/communications/subscribers/{id}": {
            "get": {
                "tags": [
                    "Newsletter Subscriptions"
                ],
                "summary": "Get Subscriber detail",
                "description": "Returns getSubscriber detail",
                "operationId": "getSubscriber",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subscriber ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Subscription"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Newsletter Subscriptions"
                ],
                "summary": "Update Subscriber",
                "description": "Update Subscriber",
                "operationId": "updateSubscriber",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subscription ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "isSubscribed"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_subscribed": {
                                        "description": "isSubscribed",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Subscription updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Subscription"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Newsletter Subscriptions"
                ],
                "summary": "Delete Subscriber by id",
                "description": "Delete Subscriber by id",
                "operationId": "deleteSubscriber",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subscription ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Subscription deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/promotions/cart-rules": {
            "get": {
                "tags": [
                    "Cart Rules"
                ],
                "summary": "Get cart rule list",
                "description": "Returns cart rule list, if you want to retrieve all cart rules at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getCartRules",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Cart Rule Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CartRule"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cart Rules"
                ],
                "summary": "Store the cart rule",
                "description": "Store the cart rule",
                "operationId": "storeCartRule",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "channels",
                                    "customer_groups",
                                    "coupon_type",
                                    "action_type",
                                    "discount_amount"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "cart rule name",
                                        "type": "string",
                                        "example": "Offer 10%"
                                    },
                                    "description": {
                                        "description": "cart rule description",
                                        "type": "string",
                                        "example": "Buy 2 time & get 10% off"
                                    },
                                    "status": {
                                        "description": "cart rule status",
                                        "type": "ingerer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "channels": {
                                        "description": "cart rule will applicable on which channels?",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "customer_groups": {
                                        "description": "cart rule will applicable on which customer's groups?",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "coupon_type": {
                                        "description": "Cart rule coupon type, i.e. `0` is used for `No Coupon` and `1` is for `Specific Coupon`",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "use_auto_generation": {
                                        "description": "Want to generate coupon auto or manual. Only use if `coupon_type` is set `1` (i.e. `0` is used for `No` and `1` is for `Yes`)",
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "coupon_code": {
                                        "description": "Provide coupon code manually.  Only use if `coupon_type` is set `1` and `use_auto_generation` is set to `0`",
                                        "type": "string",
                                        "example": "FLAT10"
                                    },
                                    "uses_per_coupon": {
                                        "description": "Provide coupon use count. Only use if `coupon_type` is set `1`",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "usage_per_customer": {
                                        "description": "Provide use count for a customer.",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "starts_from": {
                                        "description": "cart rule will applicable from date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-05-25"
                                    },
                                    "ends_till": {
                                        "description": "cart rule will applicable till date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-05-31"
                                    },
                                    "sort_order": {
                                        "description": "cart rule priority",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "condition_type": {
                                        "description": "cart rule condition type, i.e. `1` is used for `All Conditions are True` and `2` is for `Any Condition is True`",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "conditions": {
                                        "description": "cart rule conditions",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "value": {
                                                    "type": "string",
                                                    "example": "2"
                                                },
                                                "operator": {
                                                    "type": "string",
                                                    "example": ">="
                                                },
                                                "attribute": {
                                                    "type": "string",
                                                    "example": "cart|items_qty"
                                                },
                                                "attribute_type": {
                                                    "type": "string",
                                                    "example": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "value": "2",
                                                "operator": ">=",
                                                "attribute": "cart|items_qty",
                                                "attribute_type": "integer"
                                            }
                                        ]
                                    },
                                    "action_type": {
                                        "description": "Action type i.e. `by_fixed` & `by_percent`",
                                        "type": "string",
                                        "enum": [
                                            "by_fixed",
                                            "by_percent"
                                        ],
                                        "example": "by_percent"
                                    },
                                    "discount_amount": {
                                        "description": "Provide discount amount",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10.5
                                    },
                                    "discount_quantity": {
                                        "description": "Discount will apply on how many quantity (Maximum Quantity Allowed to be Discounted)",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "discount_step": {
                                        "description": "Buy X Quantity",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "apply_to_shipping": {
                                        "description": "Discount will apply on shipping or not. i.e. `0` is for `No` & `1` is for `Yes`",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "free_shipping": {
                                        "description": "Free Shipping",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "end_other_rules": {
                                        "description": "End other rules status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "cart rule created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CartRule"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/promotions/cart-rules/{id}": {
            "get": {
                "tags": [
                    "Cart Rules"
                ],
                "summary": "Get cart rule detail",
                "description": "Returns cart rule detail",
                "operationId": "getCartRule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart Rule ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CartRule"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Cart Rules"
                ],
                "summary": "Update cart rule",
                "description": "Update cart rule",
                "operationId": "updateCartRule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cart rule ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "channels",
                                    "customer_groups",
                                    "coupon_type",
                                    "action_type",
                                    "discount_amount"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "cart rule name",
                                        "type": "string",
                                        "example": "Offer 10%"
                                    },
                                    "description": {
                                        "description": "cart rule description",
                                        "type": "string",
                                        "example": "Buy 2 time & get 10% off"
                                    },
                                    "status": {
                                        "description": "cart rule status",
                                        "type": "ingerer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "channels": {
                                        "description": "cart rule will applicable on which channels?",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "customer_groups": {
                                        "description": "cart rule will applicable on which customer's groups?",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "coupon_type": {
                                        "description": "Cart rule coupon type, i.e. `0` is used for `No Coupon` and `1` is for `Specific Coupon`",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "use_auto_generation": {
                                        "description": "Want to generate coupon auto or manual. Only use if `coupon_type` is set `1` (i.e. `0` is used for `No` and `1` is for `Yes`)",
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "coupon_code": {
                                        "description": "Provide coupon code manually.  Only use if `coupon_type` is set `1` and `use_auto_generation` is set to `0`",
                                        "type": "string",
                                        "example": "FLAT10"
                                    },
                                    "uses_per_coupon": {
                                        "description": "Provide coupon use count. Only use if `coupon_type` is set `1`",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "usage_per_customer": {
                                        "description": "Provide use count for a customer.",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "starts_from": {
                                        "description": "cart rule will applicable from date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-05-25"
                                    },
                                    "ends_till": {
                                        "description": "cart rule will applicable till date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-05-31"
                                    },
                                    "sort_order": {
                                        "description": "cart rule priority",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "condition_type": {
                                        "description": "cart rule condition type, i.e. `1` is used for `All Conditions are True` and `2` is for `Any Condition is True`",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "conditions": {
                                        "description": "cart rule conditions",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "value": {
                                                    "type": "string",
                                                    "example": "2"
                                                },
                                                "operator": {
                                                    "type": "string",
                                                    "example": ">="
                                                },
                                                "attribute": {
                                                    "type": "string",
                                                    "example": "cart|items_qty"
                                                },
                                                "attribute_type": {
                                                    "type": "string",
                                                    "example": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "value": "2",
                                                "operator": ">=",
                                                "attribute": "cart|items_qty",
                                                "attribute_type": "integer"
                                            }
                                        ]
                                    },
                                    "action_type": {
                                        "description": "Action type i.e. `by_fixed` & `by_percent`",
                                        "type": "string",
                                        "enum": [
                                            "by_fixed",
                                            "by_percent"
                                        ],
                                        "example": "by_percent"
                                    },
                                    "discount_amount": {
                                        "description": "Provide discount amount",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10.5
                                    },
                                    "discount_quantity": {
                                        "description": "Discount will apply on how many quantity (Maximum Quantity Allowed to be Discounted)",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "discount_step": {
                                        "description": "Buy X Quantity",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "apply_to_shipping": {
                                        "description": "Discount will apply on shipping or not. i.e. `0` is for `No` & `1` is for `Yes`",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "free_shipping": {
                                        "description": "Free Shipping",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "end_other_rules": {
                                        "description": "End other rules status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "cart rule updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CartRule"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cart Rules"
                ],
                "summary": "Delete cart rule by id",
                "description": "Delete cart rule by id",
                "operationId": "deleteCartRule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cart rule ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart rule deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/promotions/cart-rules/{cart_rule_id}/coupons": {
            "get": {
                "tags": [
                    "Cart Rule Coupons"
                ],
                "summary": "Get cart rule's coupon list",
                "description": "Returns cart rule's coupon list",
                "operationId": "getCartRuleCoupons",
                "parameters": [
                    {
                        "name": "cart_rule_id",
                        "in": "path",
                        "description": "Cart Rule Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CartRuleCoupon"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cart Rule Coupons"
                ],
                "summary": "Store the cart rule's coupon",
                "description": "Store the cart rule's coupon",
                "operationId": "storeCartRuleCoupon",
                "parameters": [
                    {
                        "name": "cart_rule_id",
                        "in": "path",
                        "description": "Cart Rule Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "coupon_qty",
                                    "code_length",
                                    "code_format"
                                ],
                                "properties": {
                                    "coupon_qty": {
                                        "description": "Number of coupon want to create",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "code_length": {
                                        "description": "Code length",
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "code_format": {
                                        "description": "Code format",
                                        "type": "string",
                                        "enum": [
                                            "alphanumeric",
                                            "alphabetical",
                                            "numeric"
                                        ],
                                        "example": "alphanumeric"
                                    },
                                    "code_prefix": {
                                        "description": "Code prefix",
                                        "type": "string",
                                        "example": "CAP"
                                    },
                                    "code_suffix": {
                                        "description": "Code prefix",
                                        "type": "string",
                                        "example": "**"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart rule coupon created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CartRuleCoupon"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/promotions/cart-rules/{cart_rule_id}/coupons/{id}": {
            "get": {
                "tags": [
                    "Cart Rule Coupons"
                ],
                "summary": "Get cart rule's coupon detail",
                "description": "Returns cart rule's coupon detail",
                "operationId": "getCartRuleCoupon",
                "parameters": [
                    {
                        "name": "cart_rule_id",
                        "in": "path",
                        "description": "Cart Rule Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart Rule's Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CartRuleCoupon"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cart Rule Coupons"
                ],
                "summary": "Delete cart rule's coupon by id",
                "description": "Delete cart rule's coupon by id",
                "operationId": "deleteCartRuleCoupon",
                "parameters": [
                    {
                        "name": "cart_rule_id",
                        "in": "path",
                        "description": "Cart Rule Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart Rule's Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart rule coupon deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/promotions/cart-rules/{cart_rule_id}/coupons/mass-destroy": {
            "post": {
                "tags": [
                    "Cart Rule Coupons"
                ],
                "summary": "Mass delete cart rule's coupon",
                "description": "Mass delete cart rule's coupon",
                "operationId": "massDeleteCoupon",
                "parameters": [
                    {
                        "name": "cart_rule_id",
                        "in": "path",
                        "description": "Cart Rule Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "indices"
                                ],
                                "properties": {
                                    "indices": {
                                        "description": "Coupon's Ids `CommaSeperated`",
                                        "type": "string",
                                        "example": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Selected cart rule coupons successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/promotions/catalog-rules": {
            "get": {
                "tags": [
                    "Catalog Rules"
                ],
                "summary": "Get catalog rule list",
                "description": "Returns catalog rule list, if you want to retrieve all catalog rules at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getCatalogRules",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Catalog Rule Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CatalogRule"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Catalog Rules"
                ],
                "summary": "Store the catalog rule",
                "description": "Store the catalog rule",
                "operationId": "storeCatalogRule",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "channels",
                                    "customer_groups",
                                    "action_type",
                                    "discount_amount"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Catalog rule name",
                                        "type": "string",
                                        "example": "Offer 10%"
                                    },
                                    "description": {
                                        "description": "Catalog rule description",
                                        "type": "string",
                                        "example": "Buy 2 time & get 10% off"
                                    },
                                    "status": {
                                        "description": "Catalog rule status",
                                        "type": "ingerer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "channels": {
                                        "description": "Catalog rule will applicable on which channels?",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "customer_groups": {
                                        "description": "Catalog rule will applicable on which customer's groups?",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "starts_from": {
                                        "description": "Catalog rule will applicable from date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-05-25"
                                    },
                                    "ends_till": {
                                        "description": "Catalog rule will applicable till date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-05-31"
                                    },
                                    "sort_order": {
                                        "description": "Catalog rule priority",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "condition_type": {
                                        "description": "Catalog rule condition type, i.e. `1` is used for `All Conditions are True` and `2` is for `Any Condition is True`",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "conditions": {
                                        "description": "Catalog rule conditions",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "value": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "operator": {
                                                    "type": "string",
                                                    "example": "<="
                                                },
                                                "attribute": {
                                                    "type": "string",
                                                    "example": "product|price"
                                                },
                                                "attribute_type": {
                                                    "type": "string",
                                                    "example": "price"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "value": "1",
                                                "operator": "<=",
                                                "attribute": "product|price",
                                                "attribute_type": "price"
                                            }
                                        ]
                                    },
                                    "action_type": {
                                        "description": "Action type i.e. `by_fixed` & `by_percent`",
                                        "type": "string",
                                        "enum": [
                                            "by_fixed",
                                            "by_percent"
                                        ],
                                        "example": "by_percent"
                                    },
                                    "discount_amount": {
                                        "description": "Provide discount amount",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10.5
                                    },
                                    "end_other_rules": {
                                        "description": "End other rules status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Catalog rule created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CatalogRule"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/promotions/catalog-rules/{id}": {
            "get": {
                "tags": [
                    "Catalog Rules"
                ],
                "summary": "Get catalog rule detail",
                "description": "Returns catalog rule detail",
                "operationId": "getCatalogRule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Catalog Rule ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CatalogRule"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Catalog Rules"
                ],
                "summary": "Update catalog rule",
                "description": "Update catalog rule",
                "operationId": "updateCatalogRule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Catalog Rule ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "channels",
                                    "customer_groups",
                                    "action_type",
                                    "discount_amount"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Catalog rule name",
                                        "type": "string",
                                        "example": "Offer 10%"
                                    },
                                    "description": {
                                        "description": "Catalog rule description",
                                        "type": "string",
                                        "example": "Buy 2 time & get 10% off"
                                    },
                                    "status": {
                                        "description": "Catalog rule status",
                                        "type": "ingerer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "channels": {
                                        "description": "Catalog rule will applicable on which channels?",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "customer_groups": {
                                        "description": "Catalog rule will applicable on which customer's groups?",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "starts_from": {
                                        "description": "Catalog rule will applicable from date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-05-25"
                                    },
                                    "ends_till": {
                                        "description": "Catalog rule will applicable till date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-05-31"
                                    },
                                    "sort_order": {
                                        "description": "Catalog rule priority",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "condition_type": {
                                        "description": "Catalog rule condition type, i.e. `1` is used for `All Conditions are True` and `2` is for `Any Condition is True`",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "conditions": {
                                        "description": "Catalog rule conditions",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "value": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "operator": {
                                                    "type": "string",
                                                    "example": "<="
                                                },
                                                "attribute": {
                                                    "type": "string",
                                                    "example": "product|price"
                                                },
                                                "attribute_type": {
                                                    "type": "string",
                                                    "example": "price"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "value": "1",
                                                "operator": "<=",
                                                "attribute": "product|price",
                                                "attribute_type": "price"
                                            }
                                        ]
                                    },
                                    "action_type": {
                                        "description": "Action type i.e. `by_fixed` & `by_percent`",
                                        "type": "string",
                                        "enum": [
                                            "by_fixed",
                                            "by_percent"
                                        ],
                                        "example": "by_percent"
                                    },
                                    "discount_amount": {
                                        "description": "Provide discount amount",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10.5
                                    },
                                    "end_other_rules": {
                                        "description": "End other rules status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Catalog rule updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CatalogRule"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Catalog Rules"
                ],
                "summary": "Delete catalog rule by id",
                "description": "Delete catalog rule by id",
                "operationId": "deleteCatalogRule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Catalog Rule ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Catalog rule deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/marketing/search-seo/search-synonyms": {
            "get": {
                "tags": [
                    "Search Synonym"
                ],
                "summary": "Get search synonyms",
                "description": "Returns search synonyms, if you want to retrieve all search synonyms at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getSearchSynonyms",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "SearchSynonym Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SearchSynonym"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Search Synonym"
                ],
                "summary": "Store the search synonym",
                "description": "Store the search synonym",
                "operationId": "storeSearchSynonym",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "terms"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "SearchSynonym name",
                                        "type": "string",
                                        "example": "Shoes"
                                    },
                                    "terms": {
                                        "description": "SearchSynonym Terms",
                                        "type": "string",
                                        "example": "Shoes, Boot, SportShoes"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "SearchSynonym created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SearchSynonym"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/marketing/search-seo/search-synonyms/{id}": {
            "get": {
                "tags": [
                    "Search Synonym"
                ],
                "summary": "Get search synonym detail",
                "description": "Returns SearchSynonym detail",
                "operationId": "getSearchSynonym",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SearchSynonym ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/SearchSynonym"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Search Synonym"
                ],
                "summary": "Update search synonym",
                "description": "Update search synonym",
                "operationId": "updateSearchSynonym",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SearchSynonym ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "terms"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "SearchSynonym name",
                                        "type": "string",
                                        "example": "Shoes"
                                    },
                                    "terms": {
                                        "description": "SearchSynonym Terms",
                                        "type": "string",
                                        "example": "Shoes, Boot, SportShoes"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "SearchSynonym updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SearchSynonym"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Search Synonym"
                ],
                "summary": "Delete search synonym by id",
                "description": "Delete search synonym by id",
                "operationId": "deleteSearchSynonym",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SearchSynonym ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "SearchSynonym deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/marketing/search-seo/search-synonyms/mass-destroy": {
            "post": {
                "tags": [
                    "Search Synonym"
                ],
                "summary": "Mass delete search synonym",
                "description": "Mass delete search synonym",
                "operationId": "massDeleteSearchSynonym",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "indices",
                                    "update_value"
                                ],
                                "properties": {
                                    "indices": {
                                        "description": "SearchSynonym's Ids `CommaSeparated`",
                                        "type": "string",
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "value": {
                                        "description": "SearchSynonym's status value",
                                        "type": "integer",
                                        "enum": [
                                            null
                                        ],
                                        "example": null
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Selected SearchSynonyms successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/marketing/search-seo/search-terms": {
            "get": {
                "tags": [
                    "Search Terms"
                ],
                "summary": "Get search terms",
                "description": "Returns search terms, if you want to retrieve all search terms at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getSearchTerms",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "SearchTerms Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SearchTerm"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Search Terms"
                ],
                "summary": "Store the search term",
                "description": "Store the search term",
                "operationId": "storeSearchTerms",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term",
                                    "redirect_url",
                                    "channel_id",
                                    "locale"
                                ],
                                "properties": {
                                    "term": {
                                        "description": "SearchTerm's Term",
                                        "type": "string",
                                        "example": "Adorable"
                                    },
                                    "redirect_url": {
                                        "description": "SearchTerm Redirect URL",
                                        "type": "string",
                                        "example": "http://localhost/bagisto_2.x/public"
                                    },
                                    "channel_id": {
                                        "description": "SearchTerm Channel ID",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "locale": {
                                        "description": "SearchTerm Locale",
                                        "type": "string",
                                        "example": "ar"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "SearchTerms created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SearchTerm"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/marketing/search-seo/search-terms/{id}": {
            "get": {
                "tags": [
                    "Search Terms"
                ],
                "summary": "Get search term detail",
                "description": "Returns search term detail",
                "operationId": "getSearchTerm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SearchTerm ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/SearchTerm"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Search Terms"
                ],
                "summary": "Update search term",
                "description": "Update search term",
                "operationId": "updateSearchTerms",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SearchTerms ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term",
                                    "redirect_url",
                                    "channel_id",
                                    "locale"
                                ],
                                "properties": {
                                    "term": {
                                        "description": "SearchTerm's Term",
                                        "type": "string",
                                        "example": "Adorable"
                                    },
                                    "redirect_url": {
                                        "description": "SearchTerm Redirect URL",
                                        "type": "string",
                                        "example": "http://localhost/bagisto_2.x/public"
                                    },
                                    "channel_id": {
                                        "description": "SearchTerm Channel ID",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "locale": {
                                        "description": "SearchTerm Locale",
                                        "type": "string",
                                        "example": "ar"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "SearchTerm updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SearchTerm"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Search Terms"
                ],
                "summary": "Delete search term by id",
                "description": "Delete search term by id",
                "operationId": "deleteSearchTerm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SearchTerms ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "SearchTerm deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/marketing/search-seo/search-terms/mass-destroy": {
            "post": {
                "tags": [
                    "Search Terms"
                ],
                "summary": "Mass delete search term",
                "description": "Mass delete search term",
                "operationId": "massDeleteSearchTerms",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "indices"
                                ],
                                "properties": {
                                    "indices": {
                                        "description": "SearchTerm's Ids `CommaSeparated`",
                                        "type": "string",
                                        "example": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Selected SearchTerms successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/marketing/search-seo/sitemaps": {
            "get": {
                "tags": [
                    "Sitemaps"
                ],
                "summary": "Get Sitemaps",
                "description": "Returns sitemaps, if you want to retrieve all sitemaps at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getSitemaps",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Sitemaps Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Sitemaps"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Sitemaps"
                ],
                "summary": "Store the sitemap",
                "description": "Store the sitemap",
                "operationId": "storeSitemaps",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "file_name",
                                    "path"
                                ],
                                "properties": {
                                    "file_name": {
                                        "description": "Sitemaps File Name",
                                        "type": "string",
                                        "example": "site.xml"
                                    },
                                    "path": {
                                        "description": "Sitemaps Path",
                                        "type": "string",
                                        "example": "/sitemap/"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sitemaps created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Sitemaps"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/marketing/search-seo/sitemaps/{id}": {
            "get": {
                "tags": [
                    "Sitemaps"
                ],
                "summary": "Returns sitemap detail",
                "description": "Get sitemap detail",
                "operationId": "getSitemap",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sitemaps ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Sitemaps"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Sitemaps"
                ],
                "summary": "Update Sitemap",
                "description": "Update Sitemap",
                "operationId": "updateSitemaps",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sitemaps ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "file_name",
                                    "path"
                                ],
                                "properties": {
                                    "file_name": {
                                        "description": "Sitemaps File Name",
                                        "type": "string",
                                        "example": "site.xml"
                                    },
                                    "path": {
                                        "description": "Sitemaps Path",
                                        "type": "string",
                                        "example": "/sitemap/"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sitemaps updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Sitemaps"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Sitemaps"
                ],
                "summary": "Delete sitemap by id",
                "description": "Delete sitemap by id",
                "operationId": "deleteSitemaps",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sitemaps ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sitemaps deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/marketing/search-seo/url-rewrites": {
            "get": {
                "tags": [
                    "URL Rewrite"
                ],
                "summary": "Get URL rewrites",
                "description": "Returns URL rewrites, if you want to retrieve all URL rewrites at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getURLRewrites",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "URLRewrites Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/URLRewrite"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "URL Rewrite"
                ],
                "summary": "Store the URL rewrite",
                "description": "Store the URL rewrite",
                "operationId": "storeURLRewrite",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "entity_type",
                                    "request_path",
                                    "target_path",
                                    "redirect_type",
                                    "locale"
                                ],
                                "properties": {
                                    "entity_type": {
                                        "description": "URLRewrite For",
                                        "type": "string",
                                        "example": "category"
                                    },
                                    "request_path": {
                                        "description": "URLRewrite Requested Path",
                                        "type": "string",
                                        "example": "new-requested-path"
                                    },
                                    "target_path": {
                                        "description": "URLRewrite Target Path",
                                        "type": "string",
                                        "example": "target-path"
                                    },
                                    "redirect_type": {
                                        "description": "URLRewrite Redirect Type",
                                        "type": "integer",
                                        "enum": [
                                            302,
                                            301
                                        ],
                                        "example": "302"
                                    },
                                    "locale": {
                                        "description": "URLRewrite Locale",
                                        "type": "string",
                                        "example": "ar"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "URLRewrite created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/URLRewrite"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/marketing/search-seo/url-rewrites/{id}": {
            "get": {
                "tags": [
                    "URL Rewrite"
                ],
                "summary": "Get URL rewrite detail",
                "description": "Returns URL rewrite detail",
                "operationId": "getURLRewrite",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "URLRewrite ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/URLRewrite"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "URL Rewrite"
                ],
                "summary": "Update URL rewrite",
                "description": "Update URL rewrite",
                "operationId": "updateURLRewrite",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "URLRewrite ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "entity_type",
                                    "request_path",
                                    "target_path",
                                    "redirect_type",
                                    "locale"
                                ],
                                "properties": {
                                    "entity_type": {
                                        "description": "URLRewrite For",
                                        "type": "string",
                                        "example": "category"
                                    },
                                    "request_path": {
                                        "description": "URLRewrite Requested Path",
                                        "type": "string",
                                        "example": "new-requested-path"
                                    },
                                    "target_path": {
                                        "description": "URLRewrite Target Path",
                                        "type": "string",
                                        "example": "target-path"
                                    },
                                    "redirect_type": {
                                        "description": "URLRewrite Redirect Type",
                                        "type": "integer",
                                        "enum": [
                                            302,
                                            301
                                        ],
                                        "example": "302"
                                    },
                                    "locale": {
                                        "description": "URLRewrite Locale",
                                        "type": "string",
                                        "example": "ar"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "URLRewrite updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/URLRewrite"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "URL Rewrite"
                ],
                "summary": "Delete URL rewrite by id",
                "description": "Delete URL rewrite by id",
                "operationId": "deleteURLRewrite",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "URL Rewrite ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "URLRewrite deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/marketing/search-seo/url-rewrites/mass-destroy": {
            "post": {
                "tags": [
                    "URL Rewrite"
                ],
                "summary": "Mass delete URL rewrite",
                "description": "Mass delete URL rewrite",
                "operationId": "massDeleteURLRewrites",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "indices"
                                ],
                                "properties": {
                                    "indices": {
                                        "description": "URLRewrite's Ids `CommaSeparated`",
                                        "type": "string",
                                        "example": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Selected URLRewrite successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/reporting/customers/stats": {
            "get": {
                "tags": [
                    "Reportings"
                ],
                "summary": "Get statistics for customers",
                "description": "Retrieve statistics based on the specified type.",
                "operationId": "getCustomersStats",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of statistics to retrieve. Options: total-customers, customers-traffic, customers-with-most-sales, customers-with-most-orders, customers-with-most-reviews, top-customer-groups",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "customers-with-most-sales",
                                "total-customers",
                                "customers-traffic",
                                "customers-with-most-orders",
                                "customers-with-most-reviews",
                                "top-customer-groups"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CustomerReporting"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/reporting/products/stats": {
            "get": {
                "tags": [
                    "Reportings"
                ],
                "summary": "Get statistics for products",
                "description": "Retrieve statistics based on the specified type.",
                "operationId": "getProductsStats",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of statistics to retrieve. Options: total-sold-quantities, total-products-added-to-wishlist, top-selling-products-by-revenue, top-selling-products-by-quantity, products-with-most-reviews, products-with-most-visits, last-search-terms, top-search-terms",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "total-sold-quantities",
                                "total-products-added-to-wishlist",
                                "top-selling-products-by-revenue",
                                "top-selling-products-by-quantity",
                                "products-with-most-reviews",
                                "products-with-most-visits",
                                "last-search-terms",
                                "top-search-terms"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Product statistics data",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProductReporting"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/reporting/sales/stats": {
            "get": {
                "tags": [
                    "Reportings"
                ],
                "summary": "Get statistics for sales",
                "description": "Retrieve statistics based on the specified type.",
                "operationId": "getSalesStats",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of statistics to retrieve. Options: total-sales, average-sales, total-orders, purchase-funnel, abandoned-carts, refunds, tax-collected, shipping-collected, top-payment-methods",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "total-sales",
                                "average-sales",
                                "total-orders",
                                "purchase-funnel",
                                "abandoned-carts",
                                "refunds",
                                "tax-collected",
                                "shipping-collected",
                                "top-payment-methods"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SaleReporting"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/invoices": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get order's invoices list",
                "description": "Returns order's invoices list, if you want to retrieve all invoices at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getOrderInvoices",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Invoice id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "Order id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Invoice"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/invoices/{id}": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get invoice detail",
                "description": "Returns order's invoice detail",
                "operationId": "getOrderInvoiceDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Invoice"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/invoices/{order_id}": {
            "post": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Create invoice for an order",
                "description": "Create invoice for an order",
                "operationId": "storeOrderInvoice",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "invoice"
                                ],
                                "properties": {
                                    "invoice": {
                                        "properties": {
                                            "items": {
                                                "description": "Provide the Order item id as key and quantity to invoice as value (Key:value i.e. order_item_id:quantity_to_invoice)",
                                                "properties": {
                                                    "1": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "can_create_transaction": {
                                        "description": "User for create invoice transaction",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Invoice"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order invoice creation is not allowed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The invoice.items.0 must be a number."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order list",
                "description": "Returns order list, if you want to retrieve all orders at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getSalesOrders",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Order id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order detail",
                "description": "Returns order detail",
                "operationId": "getSalesOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/orders/{id}/cancel": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Cancel order",
                "description": "Cancel order by admin",
                "operationId": "cancelAdminOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order canceled successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Error: Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order can not be canceled."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/orders/{id}/comments": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Store the comment for an Order",
                "description": "Store the comment for an Order",
                "operationId": "storeOrderComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "comment"
                                ],
                                "properties": {
                                    "comment": {
                                        "type": "string",
                                        "example": "What is Lorem Ipsum? Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                                    },
                                    "customer_notified": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment added successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Comment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The comment field is required."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/re-orders/{id}": {
            "post": {
                "tags": [
                    "ReOrders"
                ],
                "summary": "Create re-order",
                "description": "Re-order previous orders without manually adding all products again.",
                "operationId": "createProductReOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/re-orders/{id}/save-address": {
            "post": {
                "tags": [
                    "ReOrders"
                ],
                "summary": "Save addresses at the checkout",
                "description": "Save addresses at the checkout",
                "operationId": "saveCheckoutAddress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cart id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "billing"
                                ],
                                "properties": {
                                    "billing": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "address": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "save_as_address": {
                                                    "type": "boolean"
                                                },
                                                "use_for_shipping": {
                                                    "type": "boolean"
                                                },
                                                "first_name": {
                                                    "type": "string"
                                                },
                                                "last_name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "company_name": {
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "type": "string"
                                                },
                                                "state": {
                                                    "type": "string"
                                                },
                                                "country": {
                                                    "type": "string"
                                                },
                                                "postcode": {
                                                    "type": "integer"
                                                },
                                                "phone": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": {
                                            "id": 14,
                                            "address": [
                                                "70 Winchester Rd"
                                            ],
                                            "save_as_address": false,
                                            "use_for_shipping": false,
                                            "first_name": "John",
                                            "last_name": "Doe",
                                            "email": "john@example.com",
                                            "company_name": "Bagisto",
                                            "city": "Marrero",
                                            "state": "LA",
                                            "country": "US",
                                            "postcode": 70072,
                                            "phone": 9871234560
                                        }
                                    },
                                    "shipping": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "address": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "save_as_address": {
                                                    "type": "boolean"
                                                },
                                                "first_name": {
                                                    "type": "string"
                                                },
                                                "last_name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "company_name": {
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "type": "string"
                                                },
                                                "state": {
                                                    "type": "string"
                                                },
                                                "country": {
                                                    "type": "string"
                                                },
                                                "postcode": {
                                                    "type": "integer"
                                                },
                                                "phone": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": {
                                            "id": null,
                                            "address": [
                                                "819  Farnum Road"
                                            ],
                                            "save_as_address": false,
                                            "first_name": "John",
                                            "last_name": "Doe",
                                            "email": "john@example.com",
                                            "company_name": "Bagisto",
                                            "city": "Mansfield",
                                            "state": "OH",
                                            "country": "US",
                                            "postcode": 44907,
                                            "phone": 987654321
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Address saved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "cart": {
                                                        "type": "object"
                                                    },
                                                    "rates": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "carrier_title": {
                                                                    "type": "string",
                                                                    "example": "Flat Rate"
                                                                },
                                                                "rates": {
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Quantity cannot be lesser than one."
                    },
                    "404": {
                        "description": "Something went wrong!"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/re-orders/{id}/save-shipping": {
            "post": {
                "tags": [
                    "ReOrders"
                ],
                "summary": "Save shipping method at the checkout",
                "description": "Save shipping method at the checkout",
                "operationId": "saveCheckoutShipping",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cart id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "shipping_method"
                                ],
                                "properties": {
                                    "shipping_method": {
                                        "type": "string",
                                        "example": "flatrate_flatrate"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Shipping method saved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "cart": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong!"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/re-orders/{id}/save-payment": {
            "post": {
                "tags": [
                    "ReOrders"
                ],
                "summary": "Save payment method at the checkout",
                "description": "Save payment method at the checkout",
                "operationId": "saveCheckoutPayment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cart id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payment"
                                ],
                                "properties": {
                                    "payment": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "method": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": {
                                            "method": "cashondelivery"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment method saved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "cart": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong!"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/re-orders/{id}/save-order": {
            "post": {
                "tags": [
                    "ReOrders"
                ],
                "summary": "Save order at the checkout",
                "description": "Save order at the checkout",
                "operationId": "saveCheckoutOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cart id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order was successfully placed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong!"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/refunds": {
            "get": {
                "tags": [
                    "Refunds"
                ],
                "summary": "Get order's refunds list",
                "description": "Returns order's refunds list, if you want to retrieve all refunds at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getOrderRefunds",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Refund id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "Order id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Refund"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/refunds/{id}": {
            "get": {
                "tags": [
                    "Refunds"
                ],
                "summary": "Get refund detail",
                "description": "Returns order's refund detail",
                "operationId": "getOrderRefundDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Refund id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Refund"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/refunds/{order_id}": {
            "post": {
                "tags": [
                    "Refunds"
                ],
                "summary": "Create refund for an order",
                "description": "Create refund for an order",
                "operationId": "storeOrderRefund",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "refund"
                                ],
                                "properties": {
                                    "refund": {
                                        "properties": {
                                            "items": {
                                                "description": "Provide the Order item id as key and quantity to invoice as value (Key:value i.e. order_item_id:quantity_to_refund)",
                                                "properties": {
                                                    "1": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "shipping": {
                                                "description": "Provide the shipping change, If you want to refund the shipping charges.",
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "adjustment_refund": {
                                                "description": "Provide the adjustment refund amount, If any.",
                                                "type": "integer",
                                                "example": 3
                                            },
                                            "adjustment_fee": {
                                                "description": "Provide the adjustment fee amount, If any.",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Refund created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Refund"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order refund creation is not allowed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The refund.items.0 must be a number."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/shipments": {
            "get": {
                "tags": [
                    "Shipments"
                ],
                "summary": "Get order's shipments list",
                "description": "Returns order's shipments list, if you want to retrieve all shipments at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getOrderShipments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Shipment id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "Order id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Shipment"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/shipments/{id}": {
            "get": {
                "tags": [
                    "Shipments"
                ],
                "summary": "Get order's Shipment detail",
                "description": "Returns order's Shipment detail",
                "operationId": "getOrderShipmentDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Shipment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Shipment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/shipments/{order_id}": {
            "post": {
                "tags": [
                    "Shipments"
                ],
                "summary": "Create shipment for an order",
                "description": "Create shipment for an order",
                "operationId": "storeOrderShipment",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "shipment"
                                ],
                                "properties": {
                                    "shipment": {
                                        "properties": {
                                            "carrier_title": {
                                                "description": "Provide the carrier title for the shipment",
                                                "type": "string",
                                                "example": "DHL Shipment"
                                            },
                                            "track_number": {
                                                "description": "Provide the track number for the shipment",
                                                "type": "string",
                                                "example": "12345"
                                            },
                                            "source": {
                                                "description": "Provide the inventory source id, from which inventory you want to ship the product.",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "total_qty": {
                                                "description": "Total qty",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "items": {
                                                "description": "Provide the Order item id as key)",
                                                "properties": {
                                                    "8": {
                                                        "properties": {
                                                            "1": {
                                                                "description": "Provide the inventory source id as key and quantity to shipment as value (Key:value i.e. inventory_source_id:quantity_to_ship)",
                                                                "type": "integer",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Shipment created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Shipment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order shipment creation is not allowed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The shipment.items.0 must be a number."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/transactions": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get order's transactions list",
                "description": "Returns order's transactions list, if you want to retrieve all transactions at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getOrderTransactions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Transaction id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "transaction_id",
                        "in": "query",
                        "description": "Payment Transaction id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "Order id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Transaction"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Create transaction for an order",
                "description": "Create transaction for an order",
                "operationId": "storeOrderTransaction",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "invoice_id",
                                    "payment_method",
                                    "amount"
                                ],
                                "properties": {
                                    "invoice_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "payment_method": {
                                        "description": "options:\n     *                       - `moneytransfer`: Money Transfer\n     *                       - `paypal_standard`: PayPal Standard\n     *                       - `paypal_smart_button`: PayPal Smart Button",
                                        "type": "string",
                                        "enum": [
                                            "moneytransfer",
                                            "paypal_standard",
                                            "paypal_smart_button"
                                        ],
                                        "example": "paypal_standard"
                                    },
                                    "amount": {
                                        "type": "integer",
                                        "example": 14
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The transaction has been saved."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Transaction"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The specified amount of this transaction exceeds the total amount of the invoice."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The invoice_id field is required."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/sales/transactions/{id}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction detail",
                "description": "Returns order's transaction detail",
                "operationId": "getOrderTransactionDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Transaction"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/channels": {
            "get": {
                "tags": [
                    "Channels"
                ],
                "summary": "Get channels",
                "description": "Returns channel list, if you want to retrieve all channels at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getChannels",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Channel ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Channel"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Channels"
                ],
                "summary": "Store the channel",
                "description": "Store the channel",
                "operationId": "storeChannel",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name",
                                    "inventory_sources",
                                    "root_category_id",
                                    "locales",
                                    "default_locale_id",
                                    "currencies",
                                    "base_currency_id"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "ncr"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "NCR Region"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "inventory_sources": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "root_category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "hostname": {
                                        "type": "string",
                                        "example": "example.com"
                                    },
                                    "locales": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "default_locale_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "currencies": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "base_currency_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "theme": {
                                        "type": "string",
                                        "enum": [
                                            "default",
                                            "bliss"
                                        ],
                                        "example": "default"
                                    },
                                    "is_maintenance_on": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "maintenance_mode_text": {
                                        "type": "string",
                                        "example": "This site is under maintenance mode now, visit again after some time."
                                    },
                                    "allowed_ips": {
                                        "type": "string",
                                        "example": "144.127.233.247,206.176.12.230,165.173.215.218"
                                    },
                                    "logo": {
                                        "type": "file",
                                        "format": "byte"
                                    },
                                    "favicon": {
                                        "type": "file",
                                        "format": "byte"
                                    },
                                    "seo_title": {
                                        "type": "string",
                                        "example": "NCR Region Store"
                                    },
                                    "seo_description": {
                                        "type": "string",
                                        "example": "NCR Region Description"
                                    },
                                    "seo_keywords": {
                                        "type": "string",
                                        "example": "NCR Region Keywords"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Channel created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Channel"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The target currency has already been taken."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/channels/{id}": {
            "get": {
                "tags": [
                    "Channels"
                ],
                "summary": "Get channel detail",
                "description": "Returns channel detail",
                "operationId": "getChannel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Channel ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Channel"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Channels"
                ],
                "summary": "Update channel",
                "description": "Update channel",
                "operationId": "updateChannel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Channel ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "inventory_sources",
                                    "root_category_id",
                                    "locales",
                                    "default_locale_id",
                                    "currencies",
                                    "base_currency_id"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "ncr"
                                    },
                                    "en": {
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "NCR Region"
                                            },
                                            "maintenance_mode_text": {
                                                "type": "string",
                                                "example": "This site is under maintenance mode now, visit again after some time."
                                            },
                                            "seo_title": {
                                                "type": "string",
                                                "example": "NCR Region Store"
                                            },
                                            "seo_description": {
                                                "type": "string",
                                                "example": "NCR Region Description"
                                            },
                                            "seo_keywords": {
                                                "type": "string",
                                                "example": "NCR Region Keywords"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "NCR Region NCR Region NCR Region"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "inventory_sources": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "root_category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "hostname": {
                                        "type": "string",
                                        "example": "example.com"
                                    },
                                    "locales": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "default_locale_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "currencies": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "base_currency_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "theme": {
                                        "type": "string",
                                        "enum": [
                                            "default",
                                            "bliss"
                                        ],
                                        "example": "default"
                                    },
                                    "is_maintenance_on": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "allowed_ips": {
                                        "type": "string",
                                        "example": "144.127.233.247,206.176.12.230,165.173.215.218"
                                    },
                                    "logo[]": {
                                        "type": "file"
                                    },
                                    "favicon[]": {
                                        "type": "file"
                                    },
                                    "locale": {
                                        "type": "string",
                                        "example": "en"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Channel updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Channel"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The code has already been taken."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Channels"
                ],
                "summary": "Delete channel by id",
                "description": "Delete channel by id",
                "operationId": "deleteChannel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Channel id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Channel deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/currencies": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Get currencies",
                "description": "Returns currency list, if you want to retrieve all currencies at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getSettingCurrencies",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Currency id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Currency"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Store the currency",
                "description": "Store the currency",
                "operationId": "storeSettingCurrency",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Currency code",
                                        "type": "string",
                                        "maxLength": 3,
                                        "minLength": 3,
                                        "example": "INR"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Rupee"
                                    },
                                    "symbol": {
                                        "type": "string",
                                        "example": "₹"
                                    },
                                    "decimal": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "group_separator": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "decimal_separator": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "currency_position": {
                                        "type": "string",
                                        "enum": [
                                            "left",
                                            "left_with_space",
                                            "right",
                                            "right_with_space"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Currency created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Currency"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The code may not be greater than 3 characters."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/currencies/{id}": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Get currency detail",
                "description": "Returns currency detail",
                "operationId": "getSalesCurrency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Currency"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Update currency",
                "description": "Update currency",
                "operationId": "updateSettingCurrency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name",
                                    "symbol"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "INR"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Rupee"
                                    },
                                    "symbol": {
                                        "type": "string",
                                        "example": "₹"
                                    },
                                    "decimal": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "group_separator": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "decimal_separator": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "currency_position": {
                                        "type": "string",
                                        "enum": [
                                            "left",
                                            "left_with_space",
                                            "right",
                                            "right_with_space"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Currency updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Currency"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The code has already been taken."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Delete currency by id",
                "description": "Delete currency by id",
                "operationId": "deleteCurrency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Currency Deleted Successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/exchange-rates": {
            "get": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Get exchange rate list",
                "description": "Returns exchange rate list, if you want to retrieve all exchange rates at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getSettingExchangeRates",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Exchange Rate id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ExchangeRate"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Store the exchange rate",
                "description": "Store the exchange rate",
                "operationId": "storeSettingExchangeRate",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "target_currency",
                                    "rate"
                                ],
                                "properties": {
                                    "target_currency": {
                                        "description": "Target Currency ID",
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0.856
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exchange rate created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ExchangeRate"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The target currency has already been taken."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/exchange-rates/{id}": {
            "get": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Get exchange rate detail",
                "description": "Returns exchange rate detail",
                "operationId": "getSalesExchangeRates",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Exchange Rate ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ExchangeRate"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Update exchange rate",
                "description": "Update exchange rate",
                "operationId": "updateSettingExchangeRate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Exchange Rate ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "target_currency",
                                    "rate"
                                ],
                                "properties": {
                                    "target_currency": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0.8
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exchange rate updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ExchangeRate"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The target currency has already been taken."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Delete exchange rate by id",
                "description": "Delete exchange rate by id",
                "operationId": "deleteExchangeRate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Exchange Rate id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exchange rate deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/inventory-sources": {
            "get": {
                "tags": [
                    "Inventory Sources"
                ],
                "summary": "Get inventory sources",
                "description": "Returns inventory sources, if you want to retrieve all inventory sources at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getSettingInventorySources",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Inventory Source ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/InventorySource"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Inventory Sources"
                ],
                "summary": "Store the inventory source",
                "description": "Store the inventory source",
                "operationId": "storeSettingInventorySource",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name",
                                    "contact_name",
                                    "contact_email",
                                    "contact_number",
                                    "street",
                                    "country",
                                    "state",
                                    "city",
                                    "postcode"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "ncr"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "NCR Region"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0.8561254
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0.78655432
                                    },
                                    "priority": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "contact_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_email": {
                                        "type": "email",
                                        "example": "john@example.com"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "1325469780"
                                    },
                                    "street": {
                                        "type": "string",
                                        "example": "4305 Torrance Blvd"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "US"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "CA"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Torrance"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "example": "90503"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Inventory source created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/InventorySource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The target currency has already been taken."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/inventory-sources/{id}": {
            "get": {
                "tags": [
                    "Inventory Sources"
                ],
                "summary": "Get inventory source detail",
                "description": "Returns inventory source detail",
                "operationId": "getSalesInventorySource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory Source ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/InventorySource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Inventory Sources"
                ],
                "summary": "Update inventory source",
                "description": "Update inventory source",
                "operationId": "updateSettingInventorySource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory Source ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name",
                                    "contact_name",
                                    "contact_email",
                                    "contact_number",
                                    "street",
                                    "country",
                                    "state",
                                    "city",
                                    "postcode"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "ncr"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "NCR Region"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0.8561254
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0.78655432
                                    },
                                    "priority": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "contact_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_email": {
                                        "type": "email",
                                        "example": "john@example.com"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "1325469780"
                                    },
                                    "street": {
                                        "type": "string",
                                        "example": "4305 Torrance Blvd"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "US"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "CA"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Torrance"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "example": "90503"
                                    },
                                    "status": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Inventory source updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/InventorySource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The code has already been taken."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Inventory Sources"
                ],
                "summary": "Delete inventory source by id",
                "description": "Delete inventory source by id",
                "operationId": "deleteInventorySource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory source id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Inventory source deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/locales": {
            "get": {
                "tags": [
                    "Locales"
                ],
                "summary": "Get locales list ",
                "description": "Returns locales list, if you want to retrieve all locales at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getSettingLocales",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Locale id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Locale"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Locales"
                ],
                "summary": "Store the locale",
                "description": "Store the locale",
                "operationId": "storeSettingLocale",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name",
                                    "direction"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Language code",
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "English"
                                    },
                                    "direction": {
                                        "type": "string",
                                        "enum": [
                                            "ltr",
                                            "rtl"
                                        ],
                                        "example": "ltr"
                                    },
                                    "logo_path[]": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Locale added successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Locale"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The code has already been taken."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/locales/{id}": {
            "get": {
                "tags": [
                    "Locales"
                ],
                "summary": "Get locale detail",
                "description": "Returns locale detail",
                "operationId": "getSalesLocale",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Locale id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Locale"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Locales"
                ],
                "summary": "Update locale",
                "description": "Update locale",
                "operationId": "updateSettingLocale",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Locale id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name",
                                    "direction"
                                ],
                                "properties": {
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "English"
                                    },
                                    "direction": {
                                        "type": "string",
                                        "enum": [
                                            "ltr",
                                            "rtl"
                                        ],
                                        "example": "ltr"
                                    },
                                    "logo_path[]": {
                                        "type": "file",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Locale updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Locale"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The code has already been taken."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Locales"
                ],
                "summary": "Delete locale by id",
                "description": "Delete locale by id",
                "operationId": "deleteLocale",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Locale id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Locale Deleted Successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role's",
                "description": "Returns role's, if you want to retrieve all roles at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getRoles",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Role id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Role"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Store the role",
                "description": "Store the role",
                "operationId": "storeRole",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "permission_type"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Role name",
                                        "type": "string",
                                        "example": "Sales Access Roles"
                                    },
                                    "description": {
                                        "description": "Role description",
                                        "type": "string",
                                        "example": "Test Description"
                                    },
                                    "permission_type": {
                                        "type": "string",
                                        "enum": [
                                            "all",
                                            "custom"
                                        ],
                                        "example": "custom"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "sales.orders.view"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role detail",
                "description": "Returns role detail",
                "operationId": "getRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update role",
                "description": "Update role",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "permission_type"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Role name",
                                        "type": "string",
                                        "example": "Sales Access Roles"
                                    },
                                    "description": {
                                        "description": "Role description",
                                        "type": "string",
                                        "example": "<h2>What is Lorem Ipsum?</h2><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</p>"
                                    },
                                    "permission_type": {
                                        "type": "string",
                                        "enum": [
                                            "all",
                                            "custom"
                                        ],
                                        "example": "custom"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "sales.orders.cancel"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete role by id",
                "description": "Delete role by id",
                "operationId": "deleteRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/tax-categories": {
            "get": {
                "tags": [
                    "Tax Categories"
                ],
                "summary": "Get tax categories",
                "description": "Returns tax categories, if you want to retrieve all tax categories at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getTaxCategories",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Tax Category id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TaxCategory"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tax Categories"
                ],
                "summary": "Store the tax category",
                "description": "Store the tax category",
                "operationId": "storeTaxCategory",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name",
                                    "description",
                                    "taxrates"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Tax category's code",
                                        "type": "string",
                                        "example": "service-tax"
                                    },
                                    "name": {
                                        "description": "Tax category's name",
                                        "type": "string",
                                        "example": "Service Tax"
                                    },
                                    "description": {
                                        "description": "Tax category's description",
                                        "type": "string",
                                        "example": "This tax category will apply to all states of a country."
                                    },
                                    "taxrates": {
                                        "description": "Tax category's rates",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tax Category created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TaxCategory"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/tax-categories/{id}": {
            "get": {
                "tags": [
                    "Tax Categories"
                ],
                "summary": "Get tax category detail",
                "description": "Returns tax category detail",
                "operationId": "getTaxCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TaxCategory"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tax Categories"
                ],
                "summary": "Update tax category",
                "description": "Update tax category",
                "operationId": "updateTaxCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name",
                                    "description",
                                    "taxrates"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Tax category's code",
                                        "type": "string",
                                        "example": "service-tax"
                                    },
                                    "name": {
                                        "description": "Tax category's name",
                                        "type": "string",
                                        "example": "Service Tax"
                                    },
                                    "description": {
                                        "description": "Tax category's description",
                                        "type": "string",
                                        "example": "This tax category will apply to all states of a country."
                                    },
                                    "taxrates": {
                                        "description": "Tax category's rates",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tax Category updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TaxCategory"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tax Categories"
                ],
                "summary": "Delete tax category by id",
                "description": "Delete tax category by id",
                "operationId": "deleteTaxCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tax Category deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/tax-rates": {
            "get": {
                "tags": [
                    "Tax Rates"
                ],
                "summary": "Get list of tax rate",
                "description": "Returns list of tax rate, if you want to retrieve all tax rates at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getTaxRates",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Tax Rate id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TaxRate"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tax Rates"
                ],
                "summary": "Store the tax rate",
                "description": "Store the tax rate",
                "operationId": "storeTaxRate",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "identifier",
                                    "country",
                                    "tax_rate"
                                ],
                                "properties": {
                                    "identifier": {
                                        "description": "Tax rate's identifier",
                                        "type": "string",
                                        "example": "gst-rate"
                                    },
                                    "country": {
                                        "description": "Tax rate's country code",
                                        "type": "string",
                                        "example": "IN"
                                    },
                                    "state": {
                                        "description": "Tax rate's state, If want to use all state then left it blank, else provide state code.",
                                        "type": "string",
                                        "example": "MP"
                                    },
                                    "is_zip": {
                                        "description": "Is zip uses for zip range or fix zip code i.e. `1` is for zip_range and `empty value` is for fix zip code",
                                        "type": "integer",
                                        "enum": [
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "zip_code": {
                                        "description": "Only use if `is_zip` set to `empty value`",
                                        "type": "string",
                                        "example": "200000"
                                    },
                                    "zip_from": {
                                        "description": "Provide zip from range, Only use if `is_zip` set to `1`",
                                        "type": "string",
                                        "example": "201100"
                                    },
                                    "zip_to": {
                                        "description": "Provide zip to range, Only use if `is_zip` set to `1`",
                                        "type": "string",
                                        "example": "202000"
                                    },
                                    "tax_rate": {
                                        "description": "Provide zip rate",
                                        "type": "number",
                                        "format": "float",
                                        "example": 2.1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tax Rate created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TaxRate"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/tax-rates/{id}": {
            "get": {
                "tags": [
                    "Tax Rates"
                ],
                "summary": "Get tax rate detail",
                "description": "Returns tax rate detail",
                "operationId": "getTaxRate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax Rate id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TaxRate"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tax Rates"
                ],
                "summary": "Update tax rate",
                "description": "Update tax rate",
                "operationId": "updateTaxRates",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax Rate id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "identifier",
                                    "country",
                                    "tax_rate"
                                ],
                                "properties": {
                                    "identifier": {
                                        "description": "Tax rate's identifier",
                                        "type": "string",
                                        "example": "gst-rate"
                                    },
                                    "country": {
                                        "description": "Tax rate's country code",
                                        "type": "string",
                                        "example": "IN"
                                    },
                                    "state": {
                                        "description": "Tax rate's state, If want to use all state then left it blank, else provide state code.",
                                        "type": "string",
                                        "example": "MP"
                                    },
                                    "is_zip": {
                                        "description": "Is zip uses for zip range or fix zip code i.e. `1` is for zip_range and `empty value` is for fix zip code",
                                        "type": "integer",
                                        "enum": [
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "zip_code": {
                                        "description": "Only use if `is_zip` set to `empty value`",
                                        "type": "string",
                                        "example": "200000"
                                    },
                                    "zip_from": {
                                        "description": "Provide zip from range, Only use if `is_zip` set to `1`",
                                        "type": "string",
                                        "example": "201100"
                                    },
                                    "zip_to": {
                                        "description": "Provide zip to range, Only use if `is_zip` set to `1`",
                                        "type": "string",
                                        "example": "202000"
                                    },
                                    "tax_rate": {
                                        "description": "Provide zip rate",
                                        "type": "number",
                                        "format": "float",
                                        "example": 2.1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tax Rate updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TaxRate"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tax Rates"
                ],
                "summary": "Delete tax rate by id",
                "description": "Delete tax rate by id",
                "operationId": "deleteTaxRate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax Rate id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tax Rate deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/theme/customizations": {
            "get": {
                "tags": [
                    "Themes"
                ],
                "summary": "Get themes",
                "description": "Returns themes, if you want to retrieve all themes at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getSettingThemes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Theme id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Theme"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Themes"
                ],
                "summary": "Store the theme",
                "description": "Store the theme",
                "operationId": "storeSettingThemes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "channel_id": {
                                        "description": "Channel Id",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "theme_code": {
                                        "description": "Theme code",
                                        "type": "string",
                                        "example": "default"
                                    },
                                    "name": {
                                        "description": "Theme name",
                                        "type": "string",
                                        "example": "Image Carousel"
                                    },
                                    "sort_order": {
                                        "description": "Sort Order",
                                        "type": "integer",
                                        "example": "13"
                                    },
                                    "type": {
                                        "description": "Theme Type",
                                        "example": "image_carousel"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Theme created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Theme"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/theme/customizations/{id}": {
            "get": {
                "tags": [
                    "Themes"
                ],
                "summary": "Get Theme detail",
                "description": "Returns Theme detail",
                "operationId": "getSettingTheme",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Theme id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Theme"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Themes"
                ],
                "summary": "Update Theme",
                "description": "Update Theme",
                "operationId": "updateSettingsTheme",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Theme ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "locale": {
                                        "description": "Locale code",
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "en": {
                                        "description": "English locale options",
                                        "properties": {
                                            "options": {
                                                "description": "Theme options",
                                                "properties": {
                                                    "images": {
                                                        "description": "Image carousel images",
                                                        "properties": {
                                                            "link": {
                                                                "description": "Image link",
                                                                "type": "string",
                                                                "example": "test1"
                                                            },
                                                            "image": {
                                                                "description": "Image path",
                                                                "type": "string",
                                                                "example": "storage/theme/1/1.webp"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": {
                                        "description": "Theme type",
                                        "type": "string",
                                        "example": "image_carousel"
                                    },
                                    "name": {
                                        "description": "Theme name",
                                        "type": "string",
                                        "example": "Image Carousel"
                                    },
                                    "sort_order": {
                                        "description": "Sort order",
                                        "type": "integer",
                                        "example": "12"
                                    },
                                    "channel_id": {
                                        "description": "Channel ID",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "theme_code": {
                                        "description": "Theme code",
                                        "type": "string",
                                        "example": "default"
                                    },
                                    "status": {
                                        "description": "Status",
                                        "type": "string",
                                        "example": "on"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Theme updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Theme"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Themes"
                ],
                "summary": "Delete Theme options by id",
                "description": "Delete Theme options by id",
                "operationId": "deleteTheme",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Theme option id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Theme deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get users list",
                "description": "Returns users list, if you want to retrieve all users at once pass pagination=0 otherwise ignore this parameter",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "User id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "desc",
                                "asc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Store the user",
                "description": "Store the user",
                "operationId": "storeUsers",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "role_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User Full Name",
                                        "type": "string",
                                        "example": "Peter Doe"
                                    },
                                    "email": {
                                        "type": "email",
                                        "example": "peter@example.com"
                                    },
                                    "password": {
                                        "type": "password",
                                        "example": "admin123"
                                    },
                                    "password_confirmation": {
                                        "type": "password",
                                        "example": "admin123"
                                    },
                                    "status": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "role_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "examples": {
                                    "result": {
                                        "summary": "An result object.",
                                        "value": {
                                            "message": "The code may not be greater than 3 characters."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        },
        "/api/v1/admin/settings/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user detail",
                "description": "Returns user detail",
                "operationId": "getUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "description": "Update user",
                "operationId": "updateUsers",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "role_id"
                                ],
                                "properties": {
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    },
                                    "name": {
                                        "description": "User Full Name",
                                        "type": "string",
                                        "example": "Peter Doe"
                                    },
                                    "email": {
                                        "type": "email",
                                        "example": "peter@example.com"
                                    },
                                    "password": {
                                        "type": "password",
                                        "example": "admin123"
                                    },
                                    "password_confirmation": {
                                        "type": "password",
                                        "example": "admin123"
                                    },
                                    "status": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 1
                                    },
                                    "role_id": {
                                        "type": "integer",
                                        "format": "id",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user by id",
                "description": "Delete user by id",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Admin deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_admin": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Attribute": {
                "title": "Attribute",
                "description": "Attribute model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Attribute name, based on locale",
                        "type": "string",
                        "example": "Color"
                    },
                    "admin_name": {
                        "title": "Admin Name",
                        "description": "Attribute default admin name",
                        "type": "string",
                        "example": "Color"
                    },
                    "code": {
                        "title": "Code",
                        "description": "Attribute unique code",
                        "type": "string",
                        "example": "color"
                    },
                    "type": {
                        "title": "Type",
                        "description": "Attribute type",
                        "type": "string",
                        "enum": [
                            "text",
                            "textarea",
                            "price",
                            "boolean",
                            "select",
                            "multiselect",
                            "datetime",
                            "date",
                            "image",
                            "file",
                            "checkbox"
                        ],
                        "example": "select"
                    },
                    "swatch_type": {
                        "title": "Swatch Type",
                        "description": "Attribute swatch type, only use with select type attribute",
                        "type": "string",
                        "enum": [
                            "dropdown",
                            "color",
                            "image",
                            "text"
                        ],
                        "example": "dropdown"
                    },
                    "options": {
                        "title": "Options",
                        "description": "Attribute's options",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AttributeOption"
                        }
                    },
                    "validation": {
                        "title": "Validation",
                        "description": "Attribute validation, only use with text type attribute",
                        "type": "string",
                        "enum": [
                            "numeric",
                            "email",
                            "decimal",
                            "url"
                        ],
                        "example": "email"
                    },
                    "position": {
                        "title": "Position",
                        "description": "Attribute's position",
                        "type": "integer",
                        "example": 1
                    },
                    "is_comparable": {
                        "title": "Is Comparable",
                        "description": "Can use this attribute as comparable or not",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "is_configurable": {
                        "title": "Is Configurable",
                        "description": "Can use this attribute as configurable or not",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "is_required": {
                        "title": "Is Required",
                        "description": "This attribute will be use as required or not",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "is_unique": {
                        "title": "Is Unique",
                        "description": "This attribute will be use as unique or not",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "is_filterable": {
                        "title": "Is Filterable",
                        "description": "This attribute will be use in category's filter or not",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "is_user_defined": {
                        "title": "Is User Define",
                        "description": "This attribute is user define or system define",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "is_visible_on_front": {
                        "title": "Is Visible On Front",
                        "description": "This attribute will visible on product view page or not",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "use_in_flat": {
                        "title": "Use In Flat",
                        "description": "Entry of this attribute will record in Flat table or not",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "value_per_locale": {
                        "title": "Value Per Locale",
                        "description": "This attribute will use with multi-locale or not",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "value_per_channel": {
                        "title": "Value Per Channel",
                        "description": "This attribute will use with multi-channel or not",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "AttributeFamily": {
                "title": "AttributeFamily",
                "description": "AttributeFamily model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "code": {
                        "title": "Code",
                        "description": "Attribute family's code",
                        "type": "string",
                        "example": "default"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Attribute family's name",
                        "type": "string",
                        "example": "Default"
                    },
                    "status": {
                        "title": "Status",
                        "description": "Attribute family's status",
                        "type": "integer",
                        "enum": [
                            "0",
                            "1"
                        ],
                        "example": 0
                    },
                    "groups": {
                        "title": "Groups",
                        "description": "Attribute's groups",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AttributeGroup"
                        }
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "AttributeGroup": {
                "title": "AttributeGroup",
                "description": "AttributeGroup model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "code": {
                        "title": "Code",
                        "description": "Attribute group's code",
                        "type": "string",
                        "example": null
                    },
                    "name": {
                        "title": "Name",
                        "description": "Attribute group's name",
                        "type": "string",
                        "example": "General"
                    },
                    "swatch_type": {
                        "title": "Swatch Type",
                        "description": "Attribute group's swatch type",
                        "type": "integer",
                        "example": null
                    },
                    "attributes": {
                        "title": "Attributes",
                        "description": "Attributes",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attribute"
                        }
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "AttributeOption": {
                "title": "AttributeOption",
                "description": "AttributeOption model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "admin_name": {
                        "title": "Admin Name",
                        "description": "Option default admin name",
                        "type": "string",
                        "example": "Red"
                    },
                    "label": {
                        "title": "Label",
                        "description": "Option label, based on locale",
                        "type": "string",
                        "example": "Red"
                    },
                    "swatch_value": {
                        "title": "Swatch Value",
                        "description": "Option's swatch type value",
                        "type": "string",
                        "example": null
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Category model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Category's name",
                        "type": "string",
                        "example": "Women Apparel"
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "Category's slug",
                        "type": "string",
                        "example": "women-apparel"
                    },
                    "display_mode": {
                        "title": "Display Mode",
                        "description": "Category's content display mode",
                        "type": "string",
                        "enum": [
                            "products_and_description",
                            "products_only",
                            "description_only"
                        ],
                        "example": "products_and_description"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Category's description",
                        "type": "string",
                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                    },
                    "meta_title": {
                        "title": "Meta Title",
                        "description": "Category's meta title",
                        "type": "string",
                        "example": "Women Apparel"
                    },
                    "meta_description": {
                        "title": "Meta Description",
                        "description": "Category's meta description",
                        "type": "string",
                        "example": "Women Apparel"
                    },
                    "meta_keywords": {
                        "title": "Meta Keywords",
                        "description": "Category's meta keywords",
                        "type": "string",
                        "example": "Women Apparel"
                    },
                    "status": {
                        "title": "Status",
                        "description": "Category's status",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "banner_path": {
                        "title": "Banner URL",
                        "description": "Category's Banner URL",
                        "type": "string",
                        "example": "http://localhost/private/storage/category/{category_id}/{image_name}.jpg"
                    },
                    "logo_path": {
                        "title": "Category Logo Path",
                        "description": "Category's Logo path",
                        "type": "string",
                        "example": "http://localhost/private/storage/velocity/logo_path/{category_id}/{image_name}.png"
                    },
                    "additional": {
                        "title": "Additional",
                        "description": "Category's additional information",
                        "type": "object",
                        "example": null
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "sku": {
                        "title": "SKU",
                        "description": "Product SKU",
                        "type": "string",
                        "example": "men-t-shirt"
                    },
                    "type": {
                        "title": "Type",
                        "description": "Product type",
                        "type": "string",
                        "enum": [
                            "simple",
                            "configurable",
                            "virtual",
                            "grouped",
                            "downloadable",
                            "bundle"
                        ]
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "parent_id": {
                        "title": "Parent ID",
                        "description": "Parent ID, Use in case of child product",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "attribute_family_id": {
                        "title": "Attribute Family ID",
                        "description": "Attribute family ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "additional": {
                        "title": "Additional",
                        "description": "Additional",
                        "type": "string",
                        "example": null
                    },
                    "attribute_family": {
                        "$ref": "#/components/schemas/AttributeFamily"
                    },
                    "attribute_values": {
                        "title": "Attribute Values",
                        "description": "Product's attribute values",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductAttributeValue"
                        }
                    },
                    "customer_group_prices": {
                        "title": "Customer Group Prices",
                        "description": "Customer group price discount",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductCustomerGroupPrice"
                        }
                    },
                    "images": {
                        "title": "Images",
                        "description": "Product's images",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductImage"
                        }
                    },
                    "videos": {
                        "title": "Videos",
                        "description": "Product's videos",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductVideo"
                        }
                    }
                },
                "type": "object"
            },
            "ProductAttributeValue": {
                "title": "ProductAttributeValue",
                "description": "ProductAttributeValue model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "locale": {
                        "title": "Locale",
                        "description": "Locale code",
                        "type": "string",
                        "example": "en"
                    },
                    "channel": {
                        "title": "Channel",
                        "description": "Channel code",
                        "type": "string",
                        "example": "default"
                    },
                    "text_value": {
                        "title": "Text Value",
                        "description": "Text type attribute value i.e. Name",
                        "type": "string",
                        "example": "Black-L"
                    },
                    "boolean_value": {
                        "title": "Boolean Value",
                        "description": "Boolean type attribute value i.e. Guest Checkout",
                        "type": "boolean",
                        "example": false
                    },
                    "integer_value": {
                        "title": "Integer Value",
                        "description": "Integer type attribute value i.e. Custom attribute Age",
                        "type": "integer",
                        "example": 30
                    },
                    "float_value": {
                        "title": "Float Value",
                        "description": "Float type attribute value i.e. Price",
                        "type": "integer",
                        "example": 30.2
                    },
                    "datetime_value": {
                        "title": "Datetime Value",
                        "description": "Datetime type attribute value",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-11-24 10:20:00"
                    },
                    "date_value": {
                        "title": "Date Value",
                        "description": "Date type attribute value i.e. Special Price From",
                        "example": "2023-11-16"
                    },
                    "json_value": {
                        "title": "Json Value",
                        "description": "Json type attribute value i.e. Additional Info",
                        "type": "object",
                        "example": {
                            "key": "value"
                        }
                    },
                    "product_id": {
                        "title": "Product ID",
                        "description": "Inventry belongs to which product ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 4
                    },
                    "attribute_id": {
                        "title": "Attribute ID",
                        "description": "Attribute ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "ProductCustomerGroupPrice": {
                "title": "ProductCustomerGroupPrice",
                "description": "ProductCustomerGroupPrice model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "qty": {
                        "title": "Qty",
                        "description": "Product quantity",
                        "type": "integer",
                        "format": "int64",
                        "example": 150
                    },
                    "value_type": {
                        "title": "Value Type",
                        "description": "Discount type unit",
                        "type": "string",
                        "enum": [
                            "fixed",
                            "discount"
                        ]
                    },
                    "value": {
                        "title": "value",
                        "description": "Discount amount",
                        "type": "number",
                        "format": "int64",
                        "example": 5.2
                    },
                    "product_id": {
                        "title": "Product ID",
                        "description": "Product's ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "customer_group_id": {
                        "title": "Customer Group ID",
                        "description": "Entry belongs to which customer group ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "ProductFlat": {
                "title": "ProductFlat",
                "description": "ProductFlat model",
                "properties": {
                    "short_description": {
                        "title": "Short Description",
                        "description": "Product's short description",
                        "type": "string",
                        "example": "What is Lorem Ipsum?"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Product's description",
                        "type": "string",
                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                    },
                    "name": {
                        "title": "Name",
                        "description": "Product name",
                        "type": "string",
                        "example": "Men T-Shirt"
                    },
                    "url_key": {
                        "title": "URL Key",
                        "description": "Product URL key",
                        "type": "string",
                        "example": "men-t-shirt"
                    },
                    "tax_category_id": {
                        "title": "Tax Category ID",
                        "description": "Product's tax category ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "new": {
                        "title": "New",
                        "description": "Product's new status",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "featured": {
                        "title": "Featured",
                        "description": "Product's featured status",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "visible_individually": {
                        "title": "Visible Individually",
                        "description": "Product will show individually at store or not status",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "status": {
                        "title": "Status",
                        "description": "Product's status",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "color": {
                        "title": "Color",
                        "description": "Color i.e. product's attribute(s) code",
                        "type": "integer",
                        "format": "int64",
                        "example": 4
                    },
                    "size": {
                        "title": "Size",
                        "description": "Size i.e. product's attribute(s) code",
                        "type": "integer",
                        "format": "int64",
                        "example": 8
                    },
                    "brand": {
                        "title": "Brand",
                        "description": "Brand i.e. product's attribute(s) code",
                        "type": "integer",
                        "format": "int64",
                        "example": null
                    },
                    "guest_checkout": {
                        "title": "Guest Checkout",
                        "description": "Guest can checkout with this product or not status",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "product_number": {
                        "title": "Product Number",
                        "description": "Product number",
                        "type": "string",
                        "example": "wfv-48"
                    },
                    "meta_title": {
                        "title": "Meta Title",
                        "description": "Product's meta title",
                        "type": "string",
                        "example": "Lorem Ipsum"
                    },
                    "meta_keywords": {
                        "title": "Meta Keywords",
                        "description": "Product's meta keyword which helps in SEO",
                        "type": "string",
                        "example": "Lorem Ipsum"
                    },
                    "meta_description": {
                        "title": "Meta Description",
                        "description": "Product's meta description",
                        "type": "string",
                        "example": "Lorem Ipsum is simply dummy"
                    },
                    "price": {
                        "title": "Price",
                        "description": "Product's price",
                        "type": "number",
                        "format": "float",
                        "example": 12.2
                    },
                    "cost": {
                        "title": "Cost",
                        "description": "Product's cost price",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "special_price": {
                        "title": "Special Price",
                        "description": "Product's special price",
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "special_price_from": {
                        "title": "Special Price From",
                        "description": "Special price will start from which date",
                        "type": "string",
                        "format": "date",
                        "example": "2023-05-16"
                    },
                    "special_price_to": {
                        "title": "Special Price To",
                        "description": "Special price will end on which date",
                        "type": "string",
                        "format": "date",
                        "example": "2023-11-24"
                    },
                    "length": {
                        "title": "Length",
                        "description": "Product's length",
                        "type": "number",
                        "format": "float",
                        "example": 2
                    },
                    "width": {
                        "title": "Width",
                        "description": "Product's width",
                        "type": "number",
                        "format": "float",
                        "example": 5.25
                    },
                    "height": {
                        "title": "Height",
                        "description": "Product's height",
                        "type": "number",
                        "format": "float",
                        "example": 1.2
                    },
                    "weight": {
                        "title": "Weight",
                        "description": "Product's weight to calculate shipping charges",
                        "type": "number",
                        "format": "float",
                        "example": 3
                    }
                },
                "type": "object"
            },
            "ProductImage": {
                "title": "ProductImage",
                "description": "ProductImage model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "type": {
                        "title": "Type",
                        "description": "Image type",
                        "type": "string",
                        "enum": [
                            "images"
                        ]
                    },
                    "path": {
                        "title": "Path",
                        "description": "Image path",
                        "type": "string",
                        "example": "product/{product_id}/{image_name.jpg}"
                    },
                    "url": {
                        "title": "URL",
                        "description": "Image URL",
                        "type": "string",
                        "example": "http://localhost/public/storage/product/{product_id}/{image_name.jpg}"
                    },
                    "original_image_url": {
                        "title": "original_image_url",
                        "description": "Original image URL",
                        "type": "string",
                        "example": "http://localhost/public/storage/product/{product_id}/{image_name.jpg}"
                    },
                    "small_image_url": {
                        "title": "small_image_url",
                        "description": "Small image URL",
                        "type": "string",
                        "example": "http://localhost/public/cache/small/product/{product_id}/{image_name.jpg}"
                    },
                    "medium_image_url": {
                        "title": "medium_image_url",
                        "description": "Medium image URL",
                        "type": "string",
                        "example": "http://localhost/public/cache/medium/product/{product_id}/{image_name.jpg}"
                    },
                    "large_image_url": {
                        "title": "large_image_url",
                        "description": "Original image URL",
                        "type": "string",
                        "example": "http://localhost/public/cache/large/product/{product_id}/{image_name.jpg}"
                    },
                    "product_id": {
                        "title": "Product ID",
                        "description": "Product ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "position": {
                        "title": "Position",
                        "description": "Image position",
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    }
                },
                "type": "object"
            },
            "ProductVideo": {
                "title": "ProductVideo",
                "description": "ProductVideo model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "type": {
                        "title": "Type",
                        "description": "Video type",
                        "type": "string",
                        "enum": [
                            "videos"
                        ]
                    },
                    "path": {
                        "title": "Path",
                        "description": "Video path",
                        "type": "string",
                        "example": "product/{product_id}/{video_name.jpg}"
                    },
                    "url": {
                        "title": "URL",
                        "description": "Video URL",
                        "type": "string",
                        "example": "http://localhost/public/storage/product/{product_id}/{video_name.jpg}"
                    }
                },
                "type": "object"
            },
            "CmsPage": {
                "title": "CmsPage",
                "description": "CmsPage model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "layout": {
                        "title": "Layout",
                        "description": "Cms Page's layout",
                        "type": "string",
                        "example": null
                    },
                    "content": {
                        "title": "Content",
                        "description": "Cms Page's content",
                        "type": "string",
                        "example": null
                    },
                    "url_key": {
                        "title": "Url Key",
                        "description": "Cms Page's unique url key",
                        "type": "string",
                        "example": "about-us"
                    },
                    "page_title": {
                        "title": "Page Title",
                        "description": "Cms Page's title",
                        "type": "string",
                        "example": "about-us"
                    },
                    "html_content": {
                        "title": "Html Content",
                        "description": "Cms Page's main html content",
                        "type": "string",
                        "example": "<div class=\\'static-container\\'>\\r\\n<div class=\\'mb-5\\'>\\r\\n<h2 style=\\'margin: 0px 0px 10px; padding: 0px; font-weight: 400; font-family: DauphinPlain; font-size: 24px; line-height: 24px;\\'>What is Lorem Ipsum?</h2>\\r\\n<p style=\\'margin: 0px 0px 15px; padding: 0px; text-align: justify; font-family: 'Open Sans', Arial, sans-serif;\\'><strong style=\\'margin: 0px; padding: 0px;\\'>Lorem Ipsum</strong>&nbsp;is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\\r\\n<p style=\\'margin: 0px 0px 15px; padding: 0px; text-align: justify; font-family: 'Open Sans', Arial, sans-serif;\\'></p>\\r\\n<h2 style=\\'margin: 0px 0px 10px; padding: 0px; font-weight: 400; font-family: DauphinPlain; font-size: 24px; line-height: 24px;\\'>Why do we use it?</h2>\\r\\n<p style=\\'margin: 0px 0px 15px; padding: 0px; text-align: justify; font-family: 'Open Sans', Arial, sans-serif;\\'>It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).</p>\\r\\n</div>\\r\\n</div>"
                    },
                    "meta_title": {
                        "title": "Meta Title",
                        "description": "Cms Page's meta title",
                        "type": "string",
                        "example": "about-us"
                    },
                    "meta_description": {
                        "title": "Meta Description",
                        "description": "Cms Page's meta description",
                        "type": "string",
                        "example": "about-us"
                    },
                    "meta_keywords": {
                        "title": "Meta Keywords",
                        "description": "Cms Page's meta keywords",
                        "type": "string",
                        "example": "about-us"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "Configuration": {
                "title": "Configuration",
                "description": "Configuration model",
                "properties": {
                    "items": {
                        "title": "items",
                        "description": "Configuration's fields object",
                        "properties": {
                            "items": {
                                "properties": {
                                    "general": {
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "example": "general"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "admin::app.admin.system.catalog"
                                            },
                                            "sort": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "children": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "content": {
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string",
                                                                    "example": "general.footer"
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "admin::app.admin.system.footer"
                                                                },
                                                                "sort": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "fields": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string",
                                                                                "example": "footer_content"
                                                                            },
                                                                            "title": {
                                                                                "type": "string",
                                                                                "example": "admin::app.admin.system.footer-content"
                                                                            },
                                                                            "type": {
                                                                                "type": "string",
                                                                                "example": "text"
                                                                            },
                                                                            "channel_based": {
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    true,
                                                                                    false
                                                                                ],
                                                                                "example": true
                                                                            },
                                                                            "locale_based": {
                                                                                "type": "boolean",
                                                                                "enum": [
                                                                                    true,
                                                                                    false
                                                                                ],
                                                                                "example": true
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "catalog": {
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "example": "catalog"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "admin::app.admin.system.general"
                                            },
                                            "sort": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "children": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "products": {
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string",
                                                                    "example": "catalog.products"
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "admin::app.admin.system.products"
                                                                },
                                                                "sort": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "content": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string",
                                                                                "example": "allow-guest-checkout"
                                                                            },
                                                                            "title": {
                                                                                "type": "string",
                                                                                "example": "admin::app.admin.system.allow-guest-checkout"
                                                                            },
                                                                            "type": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "text",
                                                                                    "textarea",
                                                                                    "boolean",
                                                                                    "select"
                                                                                ],
                                                                                "example": "boolean"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object",
                        "example": {
                            "items": {
                                "general": {
                                    "key": "general",
                                    "name": "admin::app.admin.system.general",
                                    "sort": 1,
                                    "children": [
                                        {
                                            "content": {
                                                "key": "general.footer",
                                                "name": "admin::app.admin.system.footer",
                                                "sort": 1,
                                                "fields": [
                                                    {
                                                        "name": "footer_content",
                                                        "title": "admin::app.admin.system.footer-content",
                                                        "type": "text",
                                                        "channel_based": true,
                                                        "locale_based": true
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "catalog": {
                                    "key": "catalog",
                                    "name": "admin::app.admin.system.catalog",
                                    "sort": 2,
                                    "children": {
                                        "products": {
                                            "key": "catalog.products",
                                            "name": "admin::app.admin.system.products",
                                            "sort": 2,
                                            "fields": [
                                                {
                                                    "name": "allow-guest-checkout",
                                                    "title": "admin::app.admin.system.allow-guest-checkout",
                                                    "type": "boolean"
                                                }
                                            ],
                                            "children": []
                                        }
                                    }
                                },
                                "customer": {
                                    "key": "customer",
                                    "name": "admin::app.admin.system.customer",
                                    "sort": 3,
                                    "children": []
                                }
                            }
                        }
                    },
                    "roles": {
                        "title": "roles",
                        "description": "Configuration's fields object",
                        "type": "object",
                        "example": []
                    },
                    "current": {
                        "title": "current",
                        "description": "Configuration's current URL",
                        "type": "string",
                        "example": "http://localhost/public/api/v1/admin/configuration"
                    },
                    "currentKey": {
                        "title": "currentKey",
                        "description": "Configuration's url params",
                        "type": "string",
                        "example": "general/general"
                    }
                },
                "type": "object"
            },
            "Address": {
                "title": "Address",
                "description": "Address model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "first_name": {
                        "title": "First Name",
                        "description": "Customer's First Name",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "description": "Customer's Last Name",
                        "type": "string",
                        "example": "Doe"
                    },
                    "company_name": {
                        "title": "Company Name",
                        "description": "Customer's Company Name",
                        "type": "string",
                        "example": "Bagisto-Laravel"
                    },
                    "vat_id": {
                        "title": "VAT ID",
                        "description": "Customer's VAT ID",
                        "type": "string",
                        "example": "INV01234567891"
                    },
                    "address": {
                        "title": "Customer's Address",
                        "description": "Customer's address detail",
                        "type": "array",
                        "items": {
                            "properties": {
                                "address": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "address": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "example": [
                            "819, Farnum Road"
                        ]
                    },
                    "email": {
                        "title": "Email",
                        "description": "Customer's Email",
                        "type": "string",
                        "example": "admin@example.com"
                    },
                    "country": {
                        "title": "Country",
                        "description": "Address Country, contains only country code US (e.g. United States)",
                        "type": "string",
                        "example": "US"
                    },
                    "country_name": {
                        "title": "Country Name",
                        "description": "Address Country Name, contains complete country name (e.g. United States)",
                        "type": "string",
                        "example": "United States"
                    },
                    "state": {
                        "title": "State",
                        "description": "Address State, contains only state code MD (e.g. Maryland)",
                        "type": "string",
                        "example": "MD"
                    },
                    "city": {
                        "title": "City",
                        "description": "Address City",
                        "type": "string",
                        "example": "Woodbine"
                    },
                    "postcode": {
                        "title": "Postcode",
                        "description": "Address Postcode",
                        "type": "integer",
                        "format": "int64",
                        "example": 21797
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Customer's Phone Number",
                        "type": "string",
                        "example": "1234567890"
                    },
                    "is_default": {
                        "title": "Is Default Address or Not",
                        "description": "Customer's Default Address",
                        "type": "boolean",
                        "enum": [
                            "1",
                            "0"
                        ]
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "Customer": {
                "title": "Customer",
                "description": "Customer model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "email": {
                        "title": "Email",
                        "description": "Customer's Email",
                        "type": "string",
                        "example": "example@example.com"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Customer's full name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "first_name": {
                        "title": "First Name",
                        "description": "Customer's First Name",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "description": "Customer's Last Name",
                        "type": "string",
                        "example": "Doe"
                    },
                    "gender": {
                        "title": "Gender",
                        "description": "Customer's Gender",
                        "type": "string",
                        "enum": [
                            "Male",
                            "Female",
                            "Other"
                        ],
                        "example": "Male"
                    },
                    "date_of_birth": {
                        "title": "Date of Birth",
                        "description": "Customer's date of birth",
                        "type": "string",
                        "example": "1991-05-15"
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Customer's phone number",
                        "type": "string",
                        "example": "1234567890"
                    },
                    "status": {
                        "title": "Status",
                        "description": "Customer's status",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "notes": {
                        "title": "Notes",
                        "description": "Customer's notes",
                        "type": "string",
                        "example": "This is a first note for this customer"
                    },
                    "group": {
                        "$ref": "#/components/schemas/Group"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "GDPR": {
                "title": "GDPR",
                "description": "GDPR Data Request Model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "Unique identifier of the GDPR request",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "customer_id": {
                        "title": "Customer ID",
                        "description": "ID of the customer who created the request",
                        "type": "integer",
                        "format": "int64",
                        "example": 42
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email address of the customer",
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "message": {
                        "title": "Message",
                        "description": "Optional message or note from the customer",
                        "type": "string",
                        "example": "Please delete all my personal data."
                    },
                    "status": {
                        "title": "Status",
                        "description": "Current status of the GDPR request (e.g., pending, approved, rejected, revoked)",
                        "type": "string",
                        "example": "pending"
                    },
                    "revoked_at": {
                        "title": "Revoked At",
                        "description": "Datetime when the request was revoked (if applicable)",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-04-27 17:50:45"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Datetime when the GDPR request was created",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-04-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "description": "Datetime when the GDPR request was last updated",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-04-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "Group": {
                "title": "Group",
                "description": "Group model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Customer group name",
                        "type": "string",
                        "example": "Guest"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "Review": {
                "title": "Review",
                "description": "Review model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "title": "Title",
                        "description": "Review title",
                        "type": "string",
                        "example": "Good Product & Fast Service"
                    },
                    "rating": {
                        "title": "Rating",
                        "description": "Review rating",
                        "type": "integer",
                        "format": "int64",
                        "enum": [
                            "5",
                            "4",
                            "3",
                            "2",
                            "1"
                        ],
                        "example": 4
                    },
                    "comment": {
                        "title": "Comment",
                        "description": "Review comment",
                        "type": "string",
                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                    },
                    "name": {
                        "title": "Name",
                        "description": "Customer Name",
                        "type": "string",
                        "example": "Peter Doe"
                    },
                    "status": {
                        "title": "Status",
                        "description": "Review status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "approved",
                            "disapproved"
                        ]
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "product_id": {
                        "title": "Product ID",
                        "description": "Product ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "product": {
                        "title": "Product",
                        "description": "Reviewed Product"
                    },
                    "customer_id": {
                        "title": "Customer ID",
                        "description": "Customer ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "customer": {
                        "$ref": "#/components/schemas/Customer"
                    }
                },
                "type": "object"
            },
            "Campaign": {
                "title": "Campaign",
                "description": "Campaign model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Campaign's name",
                        "type": "string",
                        "example": "News Campaign"
                    },
                    "subject": {
                        "title": "Subject",
                        "description": "Campaign's subject",
                        "type": "string",
                        "example": "Event Offer"
                    },
                    "status": {
                        "title": "Status",
                        "description": "Campaign's status",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "type": {
                        "title": "Type",
                        "description": "Campaign's type",
                        "type": "string",
                        "example": ""
                    },
                    "mail_to": {
                        "title": "Mail To",
                        "description": "Mail To",
                        "type": "string",
                        "example": ""
                    },
                    "spooling": {
                        "title": "Spooling",
                        "description": "Spooling",
                        "type": "string",
                        "example": null
                    },
                    "channel_id": {
                        "title": "Channel ID",
                        "description": "Channel ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "customer_group": {
                        "$ref": "#/components/schemas/Group"
                    },
                    "template": {
                        "$ref": "#/components/schemas/EmailTemplate"
                    },
                    "event": {
                        "$ref": "#/components/schemas/Event"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "CartRule": {
                "title": "CartRule",
                "description": "CartRule model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Cart rule name",
                        "type": "string",
                        "example": "Off 10%"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Cart rule description",
                        "type": "string",
                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                    },
                    "starts_from": {
                        "title": "Starts From",
                        "description": "Cart rule will valid from this date",
                        "type": "string",
                        "format": "date",
                        "example": "2023-04-15"
                    },
                    "ends_till": {
                        "title": "Ends Till",
                        "description": "Cart rule will valid till this date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-30"
                    },
                    "status": {
                        "title": "Status",
                        "description": "Cart rule status",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "coupon_type": {
                        "title": "Coupon Type",
                        "description": "Cart rule coupon type, i.e. `0` is used for `No Coupon` and `1` is for `Specific Coupon`",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "use_auto_generation": {
                        "title": "Use Auto Generation",
                        "description": "Want to generate coupon auto or manual. Only use if `coupon_type` is set `1` (i.e. `0` is used for `No` and `1` is for `Yes`)",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "coupon_code": {
                        "title": "Coupon Code",
                        "description": "Provide coupon code manually.  Only use if `coupon_type` is set `1` and `use_auto_generation` is set to `0`",
                        "type": "string",
                        "example": "FLAT10"
                    },
                    "uses_per_coupon": {
                        "title": "Uses Per Coupon",
                        "description": "Provide coupon use count. Only use if `coupon_type` is set `1`",
                        "type": "integer",
                        "example": 1
                    },
                    "usage_per_customer": {
                        "title": "Uses Per Customer",
                        "description": "Provide use count for a customer.",
                        "type": "integer",
                        "example": 1
                    },
                    "times_used": {
                        "title": "Times Used",
                        "description": "How many times the customer used this coupon",
                        "type": "integer",
                        "example": 0
                    },
                    "condition_type": {
                        "title": "Condition Type",
                        "description": "Cart rule condition type, i.e. `1` is used for `All Conditions are True` and `2` is for `Any Condition is True`",
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ],
                        "example": 1
                    },
                    "conditions": {
                        "title": "Conditions",
                        "description": "Cart rule conditions",
                        "type": "array",
                        "items": {
                            "properties": {
                                "value": {
                                    "type": "string",
                                    "example": "2"
                                },
                                "operator": {
                                    "type": "string",
                                    "example": ">="
                                },
                                "attribute": {
                                    "type": "string",
                                    "example": "cart|items_qty"
                                },
                                "attribute_type": {
                                    "type": "string",
                                    "example": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "example": [
                            {
                                "value": "2",
                                "operator": ">=",
                                "attribute": "cart|items_qty",
                                "attribute_type": "integer"
                            }
                        ]
                    },
                    "end_other_rules": {
                        "title": "End Other Rules",
                        "description": "End other rules for this rule",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "action_type": {
                        "title": "Action Type",
                        "description": "Action type i.e. `by_fixed` & `by_percent`",
                        "type": "string",
                        "enum": [
                            "by_fixed",
                            "by_percent"
                        ],
                        "example": "by_percent"
                    },
                    "discount_amount": {
                        "title": "Discount Amount",
                        "description": "Cart rule discount amount",
                        "type": "number",
                        "format": "float",
                        "example": 10.5
                    },
                    "discount_quantity": {
                        "title": "Discount Quantity",
                        "description": "Discount will apply on how many quantity (Maximum Quantity Allowed to be Discounted)",
                        "type": "integer",
                        "example": 2
                    },
                    "discount_step": {
                        "title": "Discount Step",
                        "description": "Buy X Quantity",
                        "type": "integer",
                        "example": 1
                    },
                    "apply_to_shipping": {
                        "title": "Apply To Shipping",
                        "description": "Discount will apply on shipping or not. i.e. `0` is for `No` & `1` is for `Yes`",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "free_shipping": {
                        "title": "Free Shipping",
                        "description": "Free Shipping",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "sort_order": {
                        "title": "Sort Order",
                        "description": "Priority for this rule",
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "CartRuleCoupon": {
                "title": "CartRuleCoupon",
                "description": "CartRuleCoupon model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "code": {
                        "title": "Code",
                        "description": "Coupon code",
                        "type": "string",
                        "example": "342J1OHFAQDZ"
                    },
                    "usage_limit": {
                        "title": "Usage Limit",
                        "description": "Coupon code usage limit",
                        "type": "integer",
                        "example": 1
                    },
                    "usage_per_customer": {
                        "title": "Usage Per Customer",
                        "description": "Coupon code usage per customer",
                        "type": "integer",
                        "example": 1
                    },
                    "times_used": {
                        "title": "Times Used",
                        "description": "How many times this code used",
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "title": "Type",
                        "description": "Coupon type",
                        "type": "integer",
                        "example": 0
                    },
                    "is_primary": {
                        "title": "Is Primary",
                        "description": "Is primary",
                        "type": "integer",
                        "example": 0
                    },
                    "cart_rule_id": {
                        "title": "Cart Rule ID",
                        "description": "Cart rule ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "expired_at": {
                        "title": "Expired at",
                        "description": "Expired at",
                        "type": "string",
                        "format": "date",
                        "example": "2020-01-27"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "CatalogRule": {
                "title": "CatalogRule",
                "description": "CatalogRule model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Catalog rule name",
                        "type": "string",
                        "example": "Off 10%"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Catalog rule description",
                        "type": "string",
                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                    },
                    "starts_from": {
                        "title": "Starts From",
                        "description": "Catalog rule will valid from this date",
                        "type": "string",
                        "format": "date",
                        "example": "2023-04-15"
                    },
                    "ends_till": {
                        "title": "Ends Till",
                        "description": "Catalog rule will valid till this date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-30"
                    },
                    "status": {
                        "title": "Status",
                        "description": "Catalog rule status",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "condition_type": {
                        "title": "Condition Type",
                        "description": "Catalog rule condition type, i.e. `1` is used for `All Conditions are True` and `2` is for `Any Condition is True`",
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ],
                        "example": 1
                    },
                    "conditions": {
                        "title": "Conditions",
                        "description": "Catalog rule conditions",
                        "type": "array",
                        "items": {
                            "properties": {
                                "value": {
                                    "type": "string",
                                    "example": "1"
                                },
                                "operator": {
                                    "type": "string",
                                    "example": "<="
                                },
                                "attribute": {
                                    "type": "string",
                                    "example": "product|price"
                                },
                                "attribute_type": {
                                    "type": "string",
                                    "example": "price"
                                }
                            },
                            "type": "object"
                        },
                        "example": [
                            {
                                "value": "1",
                                "operator": "<=",
                                "attribute": "product|price",
                                "attribute_type": "price"
                            }
                        ]
                    },
                    "end_other_rules": {
                        "title": "End Other Rules",
                        "description": "End other rules for this rule",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "action_type": {
                        "title": "Action Type",
                        "description": "Action type i.e. `by_fixed` & `by_percent`",
                        "type": "string",
                        "enum": [
                            "by_fixed",
                            "by_percent"
                        ],
                        "example": "by_percent"
                    },
                    "discount_amount": {
                        "title": "Discount Amount",
                        "description": "Catalog rule discount amount",
                        "type": "number",
                        "format": "float",
                        "example": 10.5
                    },
                    "sort_order": {
                        "title": "Sort Order",
                        "description": "Priority for this rule",
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "EmailTemplate": {
                "title": "EmailTemplate",
                "description": "EmailTemplate model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Email template name",
                        "type": "string",
                        "example": "Birthday Theme"
                    },
                    "status": {
                        "title": "Status",
                        "description": "Email template status",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "content": {
                        "title": "Content",
                        "description": "Email template content",
                        "type": "string",
                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "Event": {
                "title": "Event",
                "description": "Event model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Event name",
                        "type": "string",
                        "example": "Anniversary Event"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Event description",
                        "type": "string",
                        "example": "What is Lorem Ipsum? Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."
                    },
                    "date": {
                        "title": "Date",
                        "description": "Event date",
                        "type": "string",
                        "format": "date",
                        "example": "2020-01-27"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "SearchSynonym": {
                "title": "SearchSynonym",
                "description": "SearchSynonym model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "SearchSynonym's name",
                        "type": "string",
                        "example": "Shoes"
                    },
                    "terms": {
                        "title": "Terms",
                        "description": "SearchSynonym's terms",
                        "type": "string",
                        "example": "Shoes, Boots"
                    }
                },
                "type": "object"
            },
            "SearchTerm": {
                "title": "SearchTerm",
                "description": "SearchTerm model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "term": {
                        "title": "Term",
                        "description": "SearchTerm's Term",
                        "type": "string",
                        "example": "Adorable"
                    },
                    "redirect_url": {
                        "title": "Redirect URL",
                        "description": "SearchTerm Redirect URL",
                        "type": "string",
                        "example": "http://localhost/bagisto_2.x/public"
                    },
                    "channel_id": {
                        "title": "Channel ID",
                        "description": "SearchTerm Channel ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "locale": {
                        "title": "Locale",
                        "description": "SearchTerm Locale",
                        "type": "string",
                        "example": "ar"
                    }
                },
                "type": "object"
            },
            "Sitemaps": {
                "title": "SearchSynonym",
                "description": "SearchSynonym model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "file_name": {
                        "title": "FileName",
                        "description": "Sitemaps's File Name",
                        "type": "string",
                        "example": "site.xml"
                    },
                    "path": {
                        "title": "Path",
                        "description": "Sitemaps Path",
                        "type": "string",
                        "example": "/sitemap/"
                    }
                },
                "type": "object"
            },
            "URLRewrite": {
                "title": "URLRewrite",
                "description": "URLRewrite model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "entity_type": {
                        "title": "For",
                        "description": "URLRewrite's For",
                        "type": "string",
                        "example": "category"
                    },
                    "request_path": {
                        "title": "Requested Path",
                        "description": "URLRewrite Requested Path",
                        "type": "string",
                        "example": "new-requested-path"
                    },
                    "target_path": {
                        "title": "Target Path",
                        "description": "URLRewrite Target Path",
                        "type": "string",
                        "example": "target-path"
                    },
                    "redirect_type": {
                        "title": "Redirect Type",
                        "description": "URLRewrite Redirect Type",
                        "type": "integer",
                        "enum": [
                            302,
                            301
                        ],
                        "example": "302"
                    },
                    "locale": {
                        "title": "Locale",
                        "description": "URLRewrite Locale",
                        "type": "string",
                        "example": "ar"
                    }
                },
                "type": "object"
            },
            "Subscription": {
                "title": "Subscription",
                "description": "Subscription model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "isSubscribed": {
                        "title": "Status",
                        "description": "Subscription status",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email",
                        "type": "string",
                        "example": "admin@example.com"
                    }
                },
                "type": "object"
            },
            "CustomerReporting": {
                "title": "CustomerReporting",
                "description": "Customer Reporting",
                "properties": {
                    "statistics": {
                        "title": "Statistics",
                        "description": "Statistics of the customer report",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": null
                                },
                                "email": {
                                    "type": "string",
                                    "example": "admin@example.com"
                                },
                                "full_name": {
                                    "type": "string",
                                    "example": "John Doe"
                                },
                                "total": {
                                    "type": "string",
                                    "example": "100.0000"
                                },
                                "orders": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "progress": {
                                    "type": "integer",
                                    "example": 100
                                },
                                "formatted_total": {
                                    "type": "string",
                                    "example": "$100.00"
                                },
                                "datetime": {
                                    "type": "string",
                                    "example": null
                                }
                            },
                            "type": "object"
                        }
                    },
                    "date_range": {
                        "title": "Date Range",
                        "description": "Date range of the customer report",
                        "properties": {
                            "previous": {
                                "type": "string",
                                "example": "18 Jan 2024 - 17 Feb 2024"
                            },
                            "current": {
                                "type": "string",
                                "example": "17 Feb 2024 - 18 Mar 2024"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ProductReporting": {
                "title": "ProductReporting",
                "description": "Product Reporting",
                "properties": {
                    "statistics": {
                        "title": "Statistics",
                        "description": "Statistics of the product report",
                        "properties": {
                            "quantities": {
                                "description": "Quantities statistics",
                                "properties": {
                                    "previous": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "current": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "progress": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            },
                            "over_time": {
                                "description": "Statistics over time",
                                "properties": {
                                    "previous": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "label": {
                                                    "type": "string",
                                                    "example": "18 Jan"
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "current": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "label": {
                                                    "type": "string",
                                                    "example": "17 Mar"
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "date_range": {
                        "title": "Date Range",
                        "description": "Date range of the product report",
                        "properties": {
                            "previous": {
                                "type": "string",
                                "example": "18 Jan 2024 - 17 Feb 2024"
                            },
                            "current": {
                                "type": "string",
                                "example": "17 Feb 2024 - 18 Mar 2024"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "SaleReporting": {
                "title": "SaleReporting",
                "description": "Sale Reporting",
                "properties": {
                    "statistics": {
                        "title": "Statistics",
                        "description": "Statistics of the sales report",
                        "properties": {
                            "sales": {
                                "description": "Sales statistics",
                                "properties": {
                                    "previous": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "current": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "formatted_total": {
                                        "type": "string",
                                        "example": "$100.00"
                                    },
                                    "progress": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            },
                            "over_time": {
                                "description": "Sales over time statistics",
                                "properties": {
                                    "previous": {
                                        "description": "Sales statistics for previous period",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "label": {
                                                    "type": "string",
                                                    "example": "18 Jan"
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "current": {
                                        "description": "Sales statistics for current period",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "label": {
                                                    "type": "string",
                                                    "example": "17 Feb"
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "date_range": {
                        "title": "Date Range",
                        "description": "Date range of the sales report",
                        "properties": {
                            "previous": {
                                "type": "string",
                                "example": "18 Jan 2024 - 17 Feb 2024"
                            },
                            "current": {
                                "type": "string",
                                "example": "17 Feb 2024 - 18 Mar 2024"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Comment": {
                "title": "Comment",
                "description": "Comment model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "comment": {
                        "title": "comment",
                        "description": "Order's comment",
                        "type": "string",
                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                    },
                    "customer_notified": {
                        "title": "Customer Notified",
                        "description": "Notify customer through email or not.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "order_id": {
                        "title": "Order ID",
                        "description": "Order ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "order": {
                        "$ref": "#/components/schemas/Order"
                    }
                },
                "type": "object"
            },
            "Invoice": {
                "title": "Invoice",
                "description": "Invoice model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "state": {
                        "title": "Invoice's State/Status",
                        "description": "Invoice's State/Status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "paid",
                            "refunded"
                        ],
                        "example": "paid"
                    },
                    "email_sent": {
                        "title": "Invoice Email Sent",
                        "description": "Invoice Email Sent Status",
                        "type": "boolean",
                        "example": true
                    },
                    "total_qty": {
                        "title": "Total Invoiced Quantity",
                        "description": "Total invoiced quantity",
                        "type": "integer",
                        "example": 2
                    },
                    "base_currency_code": {
                        "title": "Store Base Currency Code",
                        "description": "Store base currency code",
                        "type": "string",
                        "example": "USD"
                    },
                    "channel_currency_code": {
                        "title": "Channel/Website Currency Code",
                        "description": "Default Channel/Website Currency Code",
                        "type": "string",
                        "example": "USD"
                    },
                    "order_currency_code": {
                        "title": "Order Currency Code",
                        "description": "Order currency code at the time order placed from store",
                        "type": "string",
                        "example": "USD"
                    },
                    "sub_total": {
                        "title": "Invoice Sub Total",
                        "description": "Invoice Sub Total",
                        "type": "number",
                        "format": "float",
                        "example": 18.22
                    },
                    "formatted_sub_total": {
                        "title": "Formatted Invoice Sub Total",
                        "description": "Formatted invoice sub total",
                        "type": "string",
                        "example": "€18.22"
                    },
                    "base_sub_total": {
                        "title": "Invoice Base Sub Total",
                        "description": "Invoice base sub total",
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "formatted_base_sub_total": {
                        "title": "Formatted Invoice Base Sub Total",
                        "description": "Formatted Invoice base sub total",
                        "type": "string",
                        "example": "$20.00"
                    },
                    "grand_total": {
                        "title": "Invoice Grand Total",
                        "description": "Invoice grand total",
                        "type": "number",
                        "format": "float",
                        "example": 18.22
                    },
                    "formatted_grand_total": {
                        "title": "Formatted Invoice Grand Total",
                        "description": "Formatted invoice grand total",
                        "type": "string",
                        "example": "€18.22"
                    },
                    "base_grand_total": {
                        "title": "Invoice Base Grand Total",
                        "description": "Invoice base grand total",
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "formatted_base_grand_total": {
                        "title": "Formatted Invoice Base Grand Total",
                        "description": "Formatted invoice base grand total",
                        "type": "string",
                        "example": "$20.00"
                    },
                    "shipping_amount": {
                        "title": "Shipping Amount",
                        "description": "Order's shipping amount",
                        "type": "number",
                        "format": "float",
                        "example": 18.22
                    },
                    "formatted_shipping_amount": {
                        "title": "Formatted Shipping Amount",
                        "description": "Formatted shipping amount",
                        "type": "string",
                        "example": "€18.22"
                    },
                    "base_shipping_amount": {
                        "title": "Base Shipping Amount",
                        "description": "Base shipping amount",
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "formatted_base_shipping_amount": {
                        "title": "Formatted Base Shipping Amount",
                        "description": "Formatted base shipping amount",
                        "type": "string",
                        "example": "$20.00"
                    },
                    "tax_amount": {
                        "title": "Tax Amount",
                        "description": "Order's tax amount",
                        "type": "number",
                        "format": "float",
                        "example": 18.22
                    },
                    "formatted_tax_amount": {
                        "title": "Formatted Tax Amount",
                        "description": "Formatted tax amount",
                        "type": "string",
                        "example": "€18.22"
                    },
                    "base_tax_amount": {
                        "title": "Base Tax Amount",
                        "description": "Base tax amount",
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "formatted_base_tax_amount": {
                        "title": "Formatted Base Tax Amount",
                        "description": "Formatted base tax amount",
                        "type": "string",
                        "example": "$20.00"
                    },
                    "discount_amount": {
                        "title": "Discount Amount",
                        "description": "Order's discount amount",
                        "type": "number",
                        "format": "float",
                        "example": 18.22
                    },
                    "formatted_discount_amount": {
                        "title": "Formatted Discount Amount",
                        "description": "Formatted discount amount",
                        "type": "string",
                        "example": "€18.22"
                    },
                    "base_discount_amount": {
                        "title": "Base Discount Amount",
                        "description": "Base discount amount",
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "formatted_base_discount_amount": {
                        "title": "Formatted Base Discount Amount",
                        "description": "Formatted base discount amount",
                        "type": "string",
                        "example": "$20.00"
                    },
                    "order_address": {
                        "title": "Order Address",
                        "description": "Order address"
                    },
                    "items": {
                        "title": "Invoice Items",
                        "description": "Invoice items"
                    },
                    "transaction_id": {
                        "title": "Invoice's Transaction ID",
                        "description": "Invoice's transaction id",
                        "type": "string",
                        "example": "TXNS5845AAEFVF"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "InvoiceItem": {
                "title": "InvoiceItem",
                "description": "InvoiceItem model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Product name for ordered item",
                        "type": "string",
                        "example": "Wooden Chair"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Product description",
                        "type": "string",
                        "example": null
                    },
                    "sku": {
                        "title": "SKU",
                        "description": "Product SKU",
                        "type": "string",
                        "example": "wooden-chair"
                    },
                    "qty": {
                        "title": "Qty",
                        "description": "Invoiced qty",
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "price": {
                        "title": "Price",
                        "description": "Invoice item price",
                        "type": "number",
                        "format": "float",
                        "example": 9.13
                    },
                    "formatted_price": {
                        "title": "Formatted Price",
                        "description": "Formatted price of invoice's item",
                        "type": "string",
                        "example": "€9.13"
                    },
                    "base_price": {
                        "title": "Base Price",
                        "description": "Invoice's item base price",
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "formatted_based_price": {
                        "title": "Formatted Base Price",
                        "description": "Formatted Base Price of the invoice item",
                        "type": "string",
                        "example": "$10.00"
                    },
                    "total": {
                        "title": "Item Total",
                        "description": "Invoice item total",
                        "type": "number",
                        "format": "float",
                        "example": 18.26
                    },
                    "formatted_total": {
                        "title": "Formatted Total",
                        "description": "Formatted total of invoice's item",
                        "type": "number",
                        "format": "float",
                        "example": "€18.26"
                    },
                    "base_total": {
                        "title": "Base Total",
                        "description": "Invoice's item base total",
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "formatted_based_total": {
                        "title": "Formatted Base Total",
                        "description": "Formatted base total of invoice item",
                        "type": "string",
                        "example": "$20.00"
                    },
                    "tax_amount": {
                        "title": "Tax Amount",
                        "description": "Tax Amount calculated at invoice item price",
                        "type": "number",
                        "format": "float",
                        "example": 0.37
                    },
                    "formatted_tax_amount": {
                        "title": "Formatted Tax Amount",
                        "description": "Formatted tax amount calculated at invoice item price",
                        "type": "string",
                        "example": "€0.37"
                    },
                    "base_tax_amount": {
                        "title": "Base Tax Amount",
                        "description": "Base tax amount calculated at invoice item price",
                        "type": "number",
                        "format": "float",
                        "example": 0.41
                    },
                    "formatted_based_tax_amount": {
                        "title": "Formatted Base Tax Amount",
                        "description": "Formatted base tax amount calculated at invoice item price",
                        "type": "string",
                        "example": "$0.41"
                    },
                    "grand_total": {
                        "title": "Grand Total",
                        "description": "Grand total",
                        "type": "number",
                        "format": "float",
                        "example": 0.37
                    },
                    "formatted_grand_total": {
                        "title": "Formatted Grand Total",
                        "description": "Formatted grand total",
                        "type": "string",
                        "example": "€0.37"
                    },
                    "base_grand_total": {
                        "title": "Base Grand Total",
                        "description": "Base grand total",
                        "type": "number",
                        "format": "float",
                        "example": 0.41
                    },
                    "formatted_based_grand_total": {
                        "title": "Formatted Base Grand Total",
                        "description": "Formatted base grand total",
                        "type": "string",
                        "example": "$0.41"
                    },
                    "additional": {
                        "title": "Additional",
                        "description": "selected_configurable_option, super_attribute, and attributes fields will use in case of configurable type product.",
                        "type": "array",
                        "items": {
                            "properties": {
                                "additional": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "locale": {
                                                "type": "string"
                                            },
                                            "quantity": {
                                                "type": "integer"
                                            },
                                            "product_id": {
                                                "type": "integer"
                                            },
                                            "parent_id": {
                                                "type": "integer"
                                            },
                                            "selected_configurable_option": {
                                                "type": "integer"
                                            },
                                            "attributes": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "size": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "option_id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "option_label": {
                                                                        "type": "string"
                                                                    },
                                                                    "attribute_name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "color": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "option_id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "option_label": {
                                                                        "type": "string"
                                                                    },
                                                                    "attribute_name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "super_attribute": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "locale": "en",
                            "quantity": 1,
                            "product_id": 1,
                            "parent_id": null,
                            "selected_configurable_option": 2,
                            "attributes": {
                                "size": {
                                    "option_id": 8,
                                    "option_label": "L",
                                    "attribute_name": "Size"
                                },
                                "color": {
                                    "option_id": 5,
                                    "option_label": "White",
                                    "attribute_name": "Color"
                                }
                            },
                            "super_attribute": [
                                "5",
                                "8"
                            ]
                        }
                    },
                    "child": {
                        "title": "Child",
                        "description": "Child of invoice's item"
                    },
                    "children": {
                        "title": "Children",
                        "description": "Children of invoice's item"
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order",
                "description": "Order model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "increment_id": {
                        "title": "Increment ID",
                        "description": "Increment ID",
                        "type": "string",
                        "example": "OrderPrefix1"
                    },
                    "status": {
                        "title": "Status",
                        "description": "Order Status",
                        "type": "string",
                        "example": "completed"
                    },
                    "status_label": {
                        "title": "Status Label",
                        "description": "Order status label",
                        "type": "string",
                        "example": "Completed"
                    },
                    "channel_name": {
                        "title": "Channel Name",
                        "description": "Channel in which order placed",
                        "type": "string",
                        "example": "Default"
                    },
                    "is_guest": {
                        "title": "Is Guest",
                        "description": "Is guest status",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "customer_email": {
                        "title": "Email",
                        "description": "Customer's Email",
                        "type": "string",
                        "example": "example@example.com"
                    },
                    "customer_first_name": {
                        "title": "First Name",
                        "description": "Customer's First Name",
                        "type": "string",
                        "example": "John"
                    },
                    "customer_last_name": {
                        "title": "Last Name",
                        "description": "Customer's Last Name",
                        "type": "string",
                        "example": "John"
                    },
                    "shipping_method": {
                        "title": "Shipping Method",
                        "description": "Shipping method",
                        "type": "string",
                        "example": "flatrate_flatrate"
                    },
                    "shipping_title": {
                        "title": "Shipping Title",
                        "description": "Shipping Title",
                        "type": "string",
                        "example": "Flat Rate - Flat Rate"
                    },
                    "shipping_description": {
                        "title": "Shipping Description",
                        "description": "Shipping description",
                        "type": "string",
                        "example": "Flat Rate Shipping"
                    },
                    "payment_title": {
                        "title": "Payment Title",
                        "description": "Payment title",
                        "type": "string",
                        "example": "Money Transfer"
                    },
                    "coupon_code": {
                        "title": "Coupon Code",
                        "description": "Applied coupon code for the order",
                        "type": "string",
                        "example": "FLAT10%"
                    },
                    "is_gift": {
                        "title": "Is Gift",
                        "description": "Is gift order or not",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "total_item_count": {
                        "title": "Total Item Count",
                        "description": "Total number of ordered's item",
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "total_qty_ordered": {
                        "title": "Total Qty Ordered",
                        "description": "Total quantity ordered",
                        "type": "integer",
                        "format": "int64",
                        "example": 4
                    },
                    "base_currency_code": {
                        "title": "Base Currency Code",
                        "description": "Base Currency Code",
                        "type": "string",
                        "example": "USD"
                    },
                    "channel_currency_code": {
                        "title": "Channel Currency Code",
                        "description": "Channel/Store Currency Code",
                        "type": "string",
                        "example": "USD"
                    },
                    "order_currency_code": {
                        "title": "Order Currency Code",
                        "description": "Order Currency Code",
                        "type": "string",
                        "example": "USD"
                    },
                    "grand_total": {
                        "title": "Grand Total",
                        "description": "Grand Total of the Order",
                        "type": "number",
                        "format": "float",
                        "example": "10.00"
                    },
                    "formatted_grand_total": {
                        "title": "Formatted Grand Total",
                        "description": "Formatted Grand Total of the Order",
                        "type": "number",
                        "format": "float",
                        "example": "$10.00"
                    },
                    "base_grand_total": {
                        "title": "Base Grand Total",
                        "description": "Base Grand Total of the Order",
                        "type": "number",
                        "format": "float",
                        "example": "10.00"
                    },
                    "formatted_based_grand_total": {
                        "title": "Formatted Base Grand Total",
                        "description": "Formatted Base Grand Total of the Order",
                        "type": "string",
                        "example": "$10.00"
                    },
                    "grand_total_invoiced": {
                        "title": "Grand Total Invoiced",
                        "description": "Grand total invoiced of the Order",
                        "type": "number",
                        "format": "float",
                        "example": "10.00"
                    },
                    "formatted_grand_total_invoiced": {
                        "title": "Formatted Grand Total Invoiced",
                        "description": "Formatted Grand Total Invoiced of the Order",
                        "type": "number",
                        "format": "float",
                        "example": "$10.00"
                    },
                    "base_grand_total_invoiced": {
                        "title": "Base Grand Total Invoiced",
                        "description": "Base Grand Total Invoiced of the Order",
                        "type": "number",
                        "format": "float",
                        "example": "10.00"
                    },
                    "formatted_based_grand_total_invoiced": {
                        "title": "Formatted Base Grand Total Invoiced",
                        "description": "Formatted Base Grand Total Invoiced of the Order",
                        "type": "string",
                        "example": "$10.00"
                    },
                    "grand_total_refunded": {
                        "title": "Grand Total Refunded",
                        "description": "Grand Total Refunded of the Order",
                        "type": "number",
                        "format": "float",
                        "example": "10.00"
                    },
                    "formatted_grand_total_refunded": {
                        "title": "Formatted Grand Total Refunded",
                        "description": "Formatted Grand Total Refunded of the Order",
                        "type": "number",
                        "format": "float",
                        "example": "$10.00"
                    },
                    "base_grand_total_refunded": {
                        "title": "Base Grand Total Refunded",
                        "description": "Base Grand Total Refunded of the Order",
                        "type": "number",
                        "format": "float",
                        "example": "10.00"
                    },
                    "formatted_based_grand_total_refunded": {
                        "title": "Formatted Base Grand Total Refunded",
                        "description": "Formatted Base Grand Total Refunded of the Order",
                        "type": "string",
                        "example": "$10.00"
                    },
                    "sub_total": {
                        "title": "Sub Total",
                        "description": "Sub Total of the order",
                        "type": "number",
                        "format": "float",
                        "example": "10.00"
                    },
                    "formatted_sub_total": {
                        "title": "Formatted Sub Total",
                        "description": "Formatted Sub Total of the order",
                        "type": "number",
                        "format": "float",
                        "example": "$10.00"
                    },
                    "base_sub_total": {
                        "title": "Base Sub Total",
                        "description": "Base Sub Total of the order",
                        "type": "number",
                        "format": "float",
                        "example": "10.00"
                    },
                    "formatted_based_sub_total": {
                        "title": "Formatted Base Sub Total",
                        "description": "Formatted Base Sub Total of the order",
                        "type": "string",
                        "example": "$10.00"
                    },
                    "sub_total_invoiced": {
                        "title": "Sub Total Invoiced",
                        "description": "Sub Total Invoiced of the order",
                        "type": "number",
                        "format": "float",
                        "example": "10.00"
                    },
                    "formatted_sub_total_invoiced": {
                        "title": "Formatted Sub Total Invoiced",
                        "description": "Formatted Sub Total Invoiced of the order",
                        "type": "number",
                        "format": "float",
                        "example": "$10.00"
                    },
                    "base_sub_total_invoiced": {
                        "title": "Base Sub Total Invoiced",
                        "description": "Base Sub Total Invoiced of the order",
                        "type": "number",
                        "format": "float",
                        "example": "10.00"
                    },
                    "formatted_based_sub_total_invoiced": {
                        "title": "Formatted Base Sub Total Invoiced",
                        "description": "Formatted Base Sub Total Invoiced of the order",
                        "type": "string",
                        "example": "$10.00"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/Customer"
                    },
                    "channel": {
                        "title": "Channel",
                        "description": "Order's channel"
                    },
                    "shipping_address": {
                        "title": "Shipping Address",
                        "description": "Order's shipping address"
                    },
                    "billing_address": {
                        "title": "Billing Address",
                        "description": "Order's billing address"
                    },
                    "items": {
                        "title": "Order Items",
                        "description": "Order Items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        }
                    },
                    "invoices": {
                        "title": "Invoices",
                        "description": "Order's invoices'",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Invoice"
                        }
                    },
                    "shipments": {
                        "title": "Shipments",
                        "description": "Order's shipments",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shipment"
                        }
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "OrderAddress": {
                "title": "OrderAddress",
                "description": "OrderAddress model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "email": {
                        "title": "Customer's Email",
                        "description": "Customer's email",
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "first_name": {
                        "title": "First Name",
                        "description": "Customer's First Name",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "description": "Customer's Last Name",
                        "type": "string",
                        "example": "Doe"
                    },
                    "address1": {
                        "title": "Cart Address1",
                        "description": "Cart's address detail",
                        "type": "array",
                        "items": {
                            "properties": {
                                "address1": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "address1": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "example": [
                            "819, Farnum Road"
                        ]
                    },
                    "address2": {
                        "title": "Address2",
                        "description": "Customer's Address2",
                        "type": "string",
                        "example": "St. Elmira"
                    },
                    "country": {
                        "title": "Country",
                        "description": "Address Country, contains only country code US (e.g. United States)",
                        "type": "string",
                        "example": "US"
                    },
                    "country_name": {
                        "title": "Country Name",
                        "description": "Address Country Name, contains complate country name (e.g. United States)",
                        "type": "string",
                        "example": "United States"
                    },
                    "state": {
                        "title": "State",
                        "description": "Address State, contains only state code MD (e.g. Maryland)",
                        "type": "string",
                        "example": "MD"
                    },
                    "city": {
                        "title": "City",
                        "description": "Address City",
                        "type": "string",
                        "example": "Woodbine"
                    },
                    "postcode": {
                        "title": "Postcode",
                        "description": "Address Postcode",
                        "type": "integer",
                        "format": "int64",
                        "example": 21797
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Customer's Phone Number",
                        "type": "string",
                        "example": "1234567890"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "OrderDownloadableLink": {
                "title": "OrderDownloadableLink",
                "description": "OrderDownloadableLink model, Only use with downloadable type product",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "product_name": {
                        "title": "Product Name",
                        "description": "Product name",
                        "type": "string",
                        "example": "Downloadable Product"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Link name",
                        "type": "string",
                        "example": "Link One"
                    },
                    "url": {
                        "title": "URL",
                        "description": "Image URL, only use with type `url`",
                        "type": "string",
                        "example": "https://cdn.pixabay.com/photo/2018/04/26/16/31/marine-3352341_960_720.jpg"
                    },
                    "file": {
                        "title": "File",
                        "description": "File's stored path, only use with type `file`",
                        "type": "string",
                        "example": "product_downloadable_links/{product_id}/{file_name.jpg}"
                    },
                    "file_name": {
                        "title": "File Name",
                        "description": "Stored File's name, only use with type `file`",
                        "type": "string",
                        "example": "{file_name.jpg}"
                    },
                    "type": {
                        "title": "Type",
                        "description": "Link type",
                        "type": "string",
                        "enum": [
                            "file",
                            "url"
                        ],
                        "example": "file"
                    },
                    "download_bought": {
                        "title": "Download Bought",
                        "description": "Allowed total number of link downloads",
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "download_used": {
                        "title": "Download Used",
                        "description": "Link downloaded count by customer",
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "status": {
                        "title": "Status",
                        "description": "Order download status",
                        "type": "string",
                        "example": "pending"
                    },
                    "customer_id": {
                        "title": "Customer ID",
                        "description": "Customer ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "order_id": {
                        "title": "Order ID",
                        "description": "Order ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "order_item_id": {
                        "title": "Order Item ID",
                        "description": "Order item ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "download_canceled": {
                        "title": "Download Canceled",
                        "description": "Download canceled count",
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    }
                },
                "type": "object"
            },
            "OrderItem": {
                "title": "OrderItem",
                "description": "OrderItem model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "sku": {
                        "title": "SKU",
                        "description": "SKU",
                        "type": "string",
                        "example": "men-round-neck-t-shirt"
                    },
                    "type": {
                        "title": "Type",
                        "description": "Product's type",
                        "type": "string",
                        "example": "simple"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Product name of ordered item",
                        "type": "string",
                        "example": "Men Round Neck T-Shirt"
                    },
                    "product_id": {
                        "title": "Product ID",
                        "description": "Product ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "coupon_code": {
                        "title": "Coupon Code",
                        "description": "Cart coupon code",
                        "type": "string",
                        "example": "FLAT10%"
                    },
                    "weight": {
                        "title": "Item's Weight",
                        "description": "Product's weight of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": "10.20"
                    },
                    "qty_ordered": {
                        "title": "Ordered Quantity",
                        "description": "Product ordered quantity",
                        "type": "integer",
                        "format": "int64",
                        "example": 6
                    },
                    "qty_shipped": {
                        "title": "Shipped Quantity",
                        "description": "Total shipped quantity of ordered product",
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "qty_invoiced": {
                        "title": "Invoiced Quantity",
                        "description": "Total invoiced quantity of ordered product",
                        "type": "integer",
                        "format": "int64",
                        "example": 4
                    },
                    "qty_canceled": {
                        "title": "Canceled Quantity",
                        "description": "Total canceled quantity of ordered product",
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "qty_refunded": {
                        "title": "Refunded Quantity",
                        "description": "Total refunded quantity of ordered product",
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "price": {
                        "title": "Ordered Item Price",
                        "description": "Price of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 18.63
                    },
                    "formatted_price": {
                        "title": "Formatted Price",
                        "description": "Formatted Price of the Order Item",
                        "type": "string",
                        "example": "€18.63"
                    },
                    "base_price": {
                        "title": "Base Price",
                        "description": "Base price of the Order Item",
                        "type": "number",
                        "format": "float",
                        "example": 20.45
                    },
                    "formatted_base_price": {
                        "title": "Formatted Base Price",
                        "description": "Formatted Base price of the Order Item",
                        "type": "string",
                        "example": "$20.45"
                    },
                    "total": {
                        "title": "Ordered Item Total",
                        "description": "Total of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 37.26
                    },
                    "formatted_total": {
                        "title": "Formatted Ordered Item Total",
                        "description": "Formatted total of ordered item",
                        "type": "string",
                        "example": "€37.26"
                    },
                    "base_total": {
                        "title": "Base Total",
                        "description": "Base total of the Order Item",
                        "type": "number",
                        "format": "float",
                        "example": 42.95
                    },
                    "formatted_base_total": {
                        "title": "Formatted Base Total",
                        "description": "Formatted base total of the Order Item",
                        "type": "string",
                        "example": "$42.95"
                    },
                    "total_invoiced": {
                        "title": "Total Invoiced of Ordered Item",
                        "description": "Total invoiced amount of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 20.45
                    },
                    "formatted_total_invoiced": {
                        "title": "Formatted Total Invoiced",
                        "description": "Formatted total invoiced of ordered item",
                        "type": "string",
                        "example": "€20.45"
                    },
                    "base_total_invoiced": {
                        "title": "Total Base Invoiced",
                        "description": "Total base invoiced amount of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 42.95
                    },
                    "formatted_base_total_invoiced": {
                        "title": "Formatted Base Total Invoiced",
                        "description": "Formatted base total invoiced of the Order Item",
                        "type": "string",
                        "example": "$42.95"
                    },
                    "amount_refunded": {
                        "title": "Amount Refunded",
                        "description": "Total refunded amount of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_amount_refunded": {
                        "title": "Formatted Amount Refunded",
                        "description": "Formatted amount refunded of ordered item",
                        "type": "string",
                        "example": "€0.00"
                    },
                    "base_amount_refunded": {
                        "title": "Base Amount Refunded",
                        "description": "Base amount refunded of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_base_amount_refunded": {
                        "title": "Formatted Base Amount Refunded",
                        "description": "Formatted base amount refunded of the Order Item",
                        "type": "string",
                        "example": "$42.95"
                    },
                    "discount_percent": {
                        "title": "Discount Percent",
                        "description": "Discount percentage that applied on order item",
                        "type": "number",
                        "format": "float",
                        "example": 10.2
                    },
                    "discount_amount": {
                        "title": "Discount Amount",
                        "description": "Discount amount of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_discount_amount": {
                        "title": "Formatted Discount Amount",
                        "description": "Formatted discount amount of ordered item",
                        "type": "string",
                        "example": "€0.00"
                    },
                    "base_discount_amount": {
                        "title": "Base Discount Amount",
                        "description": "Base discount amount of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_base_discount_amount": {
                        "title": "Formatted Base Discount Amount",
                        "description": "Formatted base discount amount of the Order Item",
                        "type": "string",
                        "example": "$42.95"
                    },
                    "discount_invoiced": {
                        "title": "Discount Invoiced",
                        "description": "Discount invoiced of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_discount_invoiced": {
                        "title": "Formatted Discount Invoiced",
                        "description": "Formatted discount invoiced of ordered item",
                        "type": "string",
                        "example": "€0.00"
                    },
                    "base_discount_invoiced": {
                        "title": "Base Discount Invoiced",
                        "description": "Base discount invoiced of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_base_discount_invoiced": {
                        "title": "Formatted Base Discount Invoiced",
                        "description": "Formatted base discount invoiced of the Order Item",
                        "type": "string",
                        "example": "$42.95"
                    },
                    "discount_refunded": {
                        "title": "Discount Refunded",
                        "description": "Discount refunded of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_discount_refunded": {
                        "title": "Formatted Discount refunded",
                        "description": "Formatted discount refunded of ordered item",
                        "type": "string",
                        "example": "€0.00"
                    },
                    "base_discount_refunded": {
                        "title": "Base Discount Refunded",
                        "description": "Base discount refunded of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_base_discount_refunded": {
                        "title": "Formatted Base Discount Refunded",
                        "description": "Formatted base discount refunded of the Order Item",
                        "type": "string",
                        "example": "$42.95"
                    },
                    "tax_percent": {
                        "title": "Tax Percent",
                        "description": "Tax percentage that applied on order item",
                        "type": "number",
                        "format": "float",
                        "example": 10.2
                    },
                    "tax_amount": {
                        "title": "Tax Amount",
                        "description": "Tax amount of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 2.45
                    },
                    "formatted_tax_amount": {
                        "title": "Formatted Tax Amount",
                        "description": "Formatted tax amount of ordered item",
                        "type": "string",
                        "example": "€0.00"
                    },
                    "base_tax_amount": {
                        "title": "Base Tax Amount",
                        "description": "Base tax amount of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 2.45
                    },
                    "formatted_base_tax_amount": {
                        "title": "Formatted Base Tax Amount",
                        "description": "Formatted base tax amount of the Order Item",
                        "type": "string",
                        "example": "$42.95"
                    },
                    "tax_amount_invoiced": {
                        "title": "Tax Amount Invoiced",
                        "description": "Tax amount invoiced of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 2.45
                    },
                    "formatted_tax_amount_invoiced": {
                        "title": "Formatted Tax Amount Invoiced",
                        "description": "Formatted tax amount invoiced of ordered item",
                        "type": "string",
                        "example": "€0.00"
                    },
                    "base_tax_amount_invoiced": {
                        "title": "Base Tax Amount Invoiced",
                        "description": "Base tax amount invoiced of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 2.45
                    },
                    "formatted_base_tax_amount_invoiced": {
                        "title": "Formatted Base Tax Amount Invoiced",
                        "description": "Formatted base tax amount invoiced of the Order Item",
                        "type": "string",
                        "example": "$42.95"
                    },
                    "tax_amount_refunded": {
                        "title": "Tax Amount Refunded",
                        "description": "Tax amount refunded of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 2.45
                    },
                    "formatted_tax_amount_refunded": {
                        "title": "Formatted Tax Amount Refunded",
                        "description": "Formatted tax amount refunded of ordered item",
                        "type": "string",
                        "example": "€0.00"
                    },
                    "base_tax_amount_refunded": {
                        "title": "Base Tax Amount Refunded",
                        "description": "Base tax amount refunded of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 2.45
                    },
                    "formatted_base_tax_amount_refunded": {
                        "title": "Formatted Base Tax Amount Refunded",
                        "description": "Formatted base tax amount refunded of the Order Item",
                        "type": "string",
                        "example": "$42.95"
                    },
                    "grant_total": {
                        "title": "Grand Total",
                        "description": "Grand total of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 2.45
                    },
                    "formatted_grant_total": {
                        "title": "Formatted Grand Total",
                        "description": "Formatted grand total of ordered item",
                        "type": "string",
                        "example": "€0.00"
                    },
                    "base_grant_total": {
                        "title": "Base Grand Total",
                        "description": "Base grand total of ordered item",
                        "type": "number",
                        "format": "float",
                        "example": 2.45
                    },
                    "formatted_base_grant_total": {
                        "title": "Formatted Base Grand Total",
                        "description": "Formatted base grand total of the Order Item",
                        "type": "string",
                        "example": "$42.95"
                    },
                    "additional": {
                        "title": "Additional",
                        "description": "Additional information",
                        "properties": {
                            "is_buy_now": {
                                "type": "integer",
                                "enum": [
                                    0,
                                    1
                                ],
                                "example": 0
                            },
                            "product_id": {
                                "type": "integer",
                                "example": 1
                            },
                            "quantity": {
                                "type": "integer",
                                "example": 5
                            },
                            "locale": {
                                "type": "string",
                                "example": "en"
                            },
                            "selected_configurable_option": {
                                "description": "Only use with configurable type product",
                                "type": "integer",
                                "example": 4
                            },
                            "attributes": {
                                "description": "Only use with configurable type product",
                                "properties": {
                                    "size": {
                                        "properties": {
                                            "option_id": {
                                                "type": "integer",
                                                "example": "8"
                                            },
                                            "option_label": {
                                                "type": "string",
                                                "example": "L"
                                            },
                                            "attribute_name": {
                                                "type": "string",
                                                "example": "Size"
                                            }
                                        },
                                        "type": "object",
                                        "example": "Only use with configurable type product"
                                    },
                                    "color": {
                                        "properties": {
                                            "option_id": {
                                                "type": "integer",
                                                "example": "4"
                                            },
                                            "option_label": {
                                                "type": "string",
                                                "example": "Black"
                                            },
                                            "attribute_name": {
                                                "type": "string",
                                                "example": "Color"
                                            }
                                        },
                                        "type": "object",
                                        "example": "Only use with configurable type product"
                                    }
                                },
                                "type": "object"
                            },
                            "super_attribute": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            },
                            "bundle_options": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            },
                            "bundle_option_qty": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "object",
                        "example": {
                            "is_buy_now": "0",
                            "product_id": "3",
                            "quantity": 1,
                            "locale": "en",
                            "selected_configurable_option": "4",
                            "attributes": {
                                "size": {
                                    "option_id": 8,
                                    "option_label": "L",
                                    "attribute_name": "Size"
                                },
                                "color": {
                                    "option_id": 4,
                                    "option_label": "Black",
                                    "attribute_name": "Color"
                                },
                                "0": {
                                    "option_id": 0,
                                    "option_label": "Link1, Link3",
                                    "attribute_name": "Downloads"
                                }
                            },
                            "super_attribute": [
                                "4",
                                "8"
                            ],
                            "bundle_options": [
                                [
                                    1
                                ],
                                [
                                    3
                                ],
                                [
                                    5
                                ],
                                [
                                    7,
                                    8
                                ]
                            ],
                            "bundle_option_qty": [
                                "2",
                                "1",
                                1,
                                1
                            ]
                        }
                    },
                    "child": {
                        "title": "Child",
                        "description": "Variant item",
                        "properties": {
                            "child": {
                                "$ref": "#/components/schemas/OrderItem"
                            }
                        },
                        "type": "object"
                    },
                    "children": {
                        "title": "Children",
                        "description": "Variant item",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        }
                    },
                    "downloadable_links": {
                        "title": "Downloadable Links",
                        "description": "Downloadable links related to ordered item i.e. only use with downloadable type product"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "Refund": {
                "title": "Refund",
                "description": "Refund model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "increment_id": {
                        "title": "Increment ID",
                        "description": "Increment ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "state": {
                        "title": "State",
                        "description": "Order's refund status",
                        "type": "string",
                        "enum": [
                            "refunded"
                        ],
                        "example": "refunded"
                    },
                    "email_sent": {
                        "title": "Email Sent",
                        "description": "Refund email sent status",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "total_qty": {
                        "title": "Total Quantity",
                        "description": "Refund total quantity",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "base_currency_code": {
                        "title": "Base Currency Code",
                        "description": "Store base currency code",
                        "type": "string",
                        "example": "USD"
                    },
                    "channel_currency_code": {
                        "title": "Channel/Website Currency Code",
                        "description": "Default Channel/Website Currency Code",
                        "type": "string",
                        "example": "USD"
                    },
                    "order_currency_code": {
                        "title": "Order Currency Code",
                        "description": "Order currency code at the time order placed from store",
                        "type": "string",
                        "example": "USD"
                    },
                    "adjustment_refund": {
                        "title": "Adjustment Refund",
                        "description": "Adjustment refund amount",
                        "type": "number",
                        "format": "float",
                        "example": 5.5
                    },
                    "base_adjustment_refund": {
                        "title": "Base Adjustment Refund",
                        "description": "Base adjustment refund amount",
                        "type": "number",
                        "format": "float",
                        "example": 7.35
                    },
                    "adjustment_fee": {
                        "title": "Adjustment Fee",
                        "description": "Adjustment fee amount",
                        "type": "number",
                        "format": "float",
                        "example": 5.5
                    },
                    "base_adjustment_fee": {
                        "title": "Base Adjustment Fee",
                        "description": "Base adjustment fee amount",
                        "type": "number",
                        "format": "float",
                        "example": 7.35
                    },
                    "sub_total": {
                        "title": "Sub Total",
                        "description": "Refund Sub Total",
                        "type": "number",
                        "format": "float",
                        "example": 18.22
                    },
                    "formatted_sub_total": {
                        "title": "Formatted Sub Total",
                        "description": "Formatted refund sub total",
                        "type": "string",
                        "example": "€18.22"
                    },
                    "base_sub_total": {
                        "title": "Base Sub Total",
                        "description": "Refund base sub total",
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "formatted_base_sub_total": {
                        "title": "Formatted Base Sub Total",
                        "description": "Formatted refund base sub total",
                        "type": "string",
                        "example": "$20.00"
                    },
                    "grand_total": {
                        "title": "Grand Total",
                        "description": "Refund grand total",
                        "type": "number",
                        "format": "float",
                        "example": 18.22
                    },
                    "formatted_grand_total": {
                        "title": "Formatted Grand Total",
                        "description": "Formatted refund grand total",
                        "type": "string",
                        "example": "€18.22"
                    },
                    "base_grand_total": {
                        "title": "Base Grand Total",
                        "description": "Refund base grand total",
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "formatted_base_grand_total": {
                        "title": "Formatted Base Grand Total",
                        "description": "Formatted refund base grand total",
                        "type": "string",
                        "example": "$20.00"
                    },
                    "shipping_amount": {
                        "title": "Shipping Amount",
                        "description": "Refunded shipping amount",
                        "type": "number",
                        "format": "float",
                        "example": 18.22
                    },
                    "formatted_shipping_amount": {
                        "title": "Formatted Shipping Amount",
                        "description": "Refunded formatted shipping amount",
                        "type": "string",
                        "example": "€18.22"
                    },
                    "base_shipping_amount": {
                        "title": "Base Shipping Amount",
                        "description": "Refunded base shipping amount",
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "formatted_base_shipping_amount": {
                        "title": "Formatted Base Shipping Amount",
                        "description": "Refunded formatted base shipping amount",
                        "type": "string",
                        "example": "$20.00"
                    },
                    "tax_amount": {
                        "title": "Tax Amount",
                        "description": "Refunded tax amount",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_tax_amount": {
                        "title": "Formatted Tax Amount",
                        "description": "Refunded formatted tax amount",
                        "type": "string",
                        "example": "€0.00"
                    },
                    "base_tax_amount": {
                        "title": "Base Tax Amount",
                        "description": "Refunded base tax amount",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_base_tax_amount": {
                        "title": "Formatted Base Tax Amount",
                        "description": "Refunded formatted base tax amount",
                        "type": "string",
                        "example": "$0.00"
                    },
                    "discount_percent": {
                        "title": "Discount Percent",
                        "description": "Refunded discount percentage",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "discount_amount": {
                        "title": "Discount Amount",
                        "description": "Refunded discount amount",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_discount_amount": {
                        "title": "Formatted Discount Amount",
                        "description": "Refunded formatted discount amount",
                        "type": "string",
                        "example": "€0.00"
                    },
                    "base_discount_amount": {
                        "title": "Base Discount Amount",
                        "description": "Refunded base discount amount",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_base_discount_amount": {
                        "title": "Formatted Base Discount Amount",
                        "description": "Refunded formatted base discount amount",
                        "type": "string",
                        "example": "$0.00"
                    },
                    "order_id": {
                        "title": "Order ID",
                        "description": "Order ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "items": {
                        "title": "Refund Items",
                        "description": "Refund items"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "RefundItem": {
                "title": "RefundItem",
                "description": "RefundItem model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Product name for ordered item",
                        "type": "string",
                        "example": "Wooden Chair"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Product description",
                        "type": "string",
                        "example": null
                    },
                    "sku": {
                        "title": "SKU",
                        "description": "Product SKU",
                        "type": "string",
                        "example": "wooden-chair"
                    },
                    "qty": {
                        "title": "Qty",
                        "description": "Shipment qty",
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "price": {
                        "title": "Price",
                        "description": "Refund item price",
                        "type": "number",
                        "format": "float",
                        "example": 9.13
                    },
                    "formatted_price": {
                        "title": "Formatted Price",
                        "description": "Formatted price of refund's item",
                        "type": "string",
                        "example": "€9.13"
                    },
                    "base_price": {
                        "title": "Base Price",
                        "description": "Refund's item base price",
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "formatted_based_price": {
                        "title": "Formatted Base Price",
                        "description": "Formatted Base Price of the refund item",
                        "type": "string",
                        "example": "$10.00"
                    },
                    "total": {
                        "title": "Item Total",
                        "description": "Refund item total",
                        "type": "number",
                        "format": "float",
                        "example": 18.26
                    },
                    "formatted_total": {
                        "title": "Formatted Total",
                        "description": "Formatted total of refund's item",
                        "type": "number",
                        "format": "float",
                        "example": "€18.26"
                    },
                    "base_total": {
                        "title": "Base Total",
                        "description": "Refund's item base total",
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "formatted_based_total": {
                        "title": "Formatted Base Total",
                        "description": "Formatted base total of refund item",
                        "type": "string",
                        "example": "$20.00"
                    },
                    "tax_amount": {
                        "title": "Tax Amount",
                        "description": "Tax Amount calculated at refund item price",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_tax_amount": {
                        "title": "Formatted Tax Amount",
                        "description": "Formatted tax amount calculated at refund item price",
                        "type": "string",
                        "example": "€0.00"
                    },
                    "base_tax_amount": {
                        "title": "Base Tax Amount",
                        "description": "Base tax amount calculated at refund item price",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_based_tax_amount": {
                        "title": "Formatted Base Tax Amount",
                        "description": "Formatted base tax amount calculated at refund item price",
                        "type": "string",
                        "example": "$0.41"
                    },
                    "discount_percent": {
                        "title": "Discount Percent",
                        "description": "Refunded discount percentage",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "discount_amount": {
                        "title": "Discount Amount",
                        "description": "Refunded discount amount",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_discount_amount": {
                        "title": "Formatted Discount Amount",
                        "description": "Refunded formatted discount amount",
                        "type": "string",
                        "example": "€0.00"
                    },
                    "base_discount_amount": {
                        "title": "Base Discount Amount",
                        "description": "Refunded base discount amount",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_base_discount_amount": {
                        "title": "Formatted Base Discount Amount",
                        "description": "Refunded formatted base discount amount",
                        "type": "string",
                        "example": "$42.95"
                    },
                    "grand_total": {
                        "title": "Grand Total",
                        "description": "Grand total",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_grand_total": {
                        "title": "Formatted Grand Total",
                        "description": "Formatted grand total",
                        "type": "string",
                        "example": "€0.00"
                    },
                    "base_grand_total": {
                        "title": "Base Grand Total",
                        "description": "Base grand total",
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "formatted_based_grand_total": {
                        "title": "Formatted Base Grand Total",
                        "description": "Formatted base grand total",
                        "type": "string",
                        "example": "$0.00"
                    },
                    "additional": {
                        "title": "Additional",
                        "description": "selected_configurable_option, super_attribute, and attributes fields will use in case of configurable type product.",
                        "type": "array",
                        "items": {
                            "properties": {
                                "additional": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "locale": {
                                                "type": "string"
                                            },
                                            "quantity": {
                                                "type": "integer"
                                            },
                                            "product_id": {
                                                "type": "integer"
                                            },
                                            "parent_id": {
                                                "type": "integer"
                                            },
                                            "selected_configurable_option": {
                                                "type": "integer"
                                            },
                                            "attributes": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "size": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "option_id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "option_label": {
                                                                        "type": "string"
                                                                    },
                                                                    "attribute_name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "color": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "option_id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "option_label": {
                                                                        "type": "string"
                                                                    },
                                                                    "attribute_name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "super_attribute": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "locale": "en",
                            "quantity": 1,
                            "product_id": 1,
                            "parent_id": null,
                            "selected_configurable_option": 2,
                            "attributes": {
                                "size": {
                                    "option_id": 8,
                                    "option_label": "L",
                                    "attribute_name": "Size"
                                },
                                "color": {
                                    "option_id": 5,
                                    "option_label": "White",
                                    "attribute_name": "Color"
                                }
                            },
                            "super_attribute": [
                                "5",
                                "8"
                            ]
                        }
                    },
                    "child": {
                        "title": "Child",
                        "description": "Child of refund's item"
                    },
                    "children": {
                        "title": "Children",
                        "description": "Children of refund's item"
                    }
                },
                "type": "object"
            },
            "Shipment": {
                "title": "Shipment",
                "description": "Shipment model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "status": {
                        "title": "Order's Shipment Status",
                        "description": "Order's shipment status",
                        "type": "string",
                        "example": "shipped|null"
                    },
                    "total_qty": {
                        "title": "Shipment Total Quantity",
                        "description": "Shipment total quantity",
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "total_weight": {
                        "title": "Total Weight Of Shipment",
                        "description": "Total weight of shipment",
                        "type": "number",
                        "format": "float",
                        "example": "10.30"
                    },
                    "carrier_code": {
                        "title": "Carrier/Shipment Code",
                        "description": "Carrier/Shipment Code (Shipping Method Code)",
                        "type": "string",
                        "example": "free_shipping"
                    },
                    "carrier_title": {
                        "title": "Carrier Title",
                        "description": "Carrier Title (Shipping Method Title)",
                        "type": "string",
                        "example": "BlueDart"
                    },
                    "track_number": {
                        "title": "Tracking ID",
                        "description": "Shipment's tracking number",
                        "type": "string",
                        "example": "SHP101"
                    },
                    "email_sent": {
                        "title": "Shipment Email Sent",
                        "description": "Shipment Email Sent Status",
                        "type": "boolean",
                        "example": true
                    },
                    "customer": {
                        "$ref": "#/components/schemas/Customer"
                    },
                    "inventory_source": {
                        "title": "Inventory Source",
                        "description": "Shipment's inventory source"
                    },
                    "items": {
                        "title": "Shipment Items",
                        "description": "Shipment items"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "ShipmentItem": {
                "title": "ShipmentItem",
                "description": "ShipmentItem model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Product name for ordered item",
                        "type": "string",
                        "example": "Wooden Chair"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Product description",
                        "type": "string",
                        "example": null
                    },
                    "sku": {
                        "title": "SKU",
                        "description": "Product SKU",
                        "type": "string",
                        "example": "wooden-chair"
                    },
                    "qty": {
                        "title": "Qty",
                        "description": "Shipment qty",
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "weight": {
                        "title": "Weight",
                        "description": "Shipped product weight",
                        "type": "number",
                        "format": "int64",
                        "example": 2
                    },
                    "price": {
                        "title": "Price",
                        "description": "Shipment item price",
                        "type": "number",
                        "format": "float",
                        "example": 9.13
                    },
                    "formatted_price": {
                        "title": "Formatted Price",
                        "description": "Formatted price of shipment's item",
                        "type": "string",
                        "example": "€9.13"
                    },
                    "base_price": {
                        "title": "Base Price",
                        "description": "Shipment's item base price",
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "formatted_based_price": {
                        "title": "Formatted Base Price",
                        "description": "Formatted Base Price of the shipment item",
                        "type": "string",
                        "example": "$10.00"
                    },
                    "total": {
                        "title": "Item Total",
                        "description": "Shipment item total",
                        "type": "number",
                        "format": "float",
                        "example": 18.26
                    },
                    "formatted_total": {
                        "title": "Formatted Total",
                        "description": "Formatted total of shipment's item",
                        "type": "number",
                        "format": "float",
                        "example": "€18.26"
                    },
                    "base_total": {
                        "title": "Base Total",
                        "description": "Shipment's item base total",
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "formatted_based_total": {
                        "title": "Formatted Base Total",
                        "description": "Formatted base total of shipment item",
                        "type": "string",
                        "example": "$20.00"
                    },
                    "additional": {
                        "title": "Additional",
                        "description": "selected_configurable_option, super_attribute, and attributes fields will use in case of configurable type product.",
                        "type": "array",
                        "items": {
                            "properties": {
                                "additional": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "locale": {
                                                "type": "string"
                                            },
                                            "quantity": {
                                                "type": "integer"
                                            },
                                            "product_id": {
                                                "type": "integer"
                                            },
                                            "parent_id": {
                                                "type": "integer"
                                            },
                                            "selected_configurable_option": {
                                                "type": "integer"
                                            },
                                            "attributes": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "size": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "option_id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "option_label": {
                                                                        "type": "string"
                                                                    },
                                                                    "attribute_name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "color": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "option_id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "option_label": {
                                                                        "type": "string"
                                                                    },
                                                                    "attribute_name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "super_attribute": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "locale": "en",
                            "quantity": 1,
                            "product_id": 1,
                            "parent_id": null,
                            "selected_configurable_option": 2,
                            "attributes": {
                                "size": {
                                    "option_id": 8,
                                    "option_label": "L",
                                    "attribute_name": "Size"
                                },
                                "color": {
                                    "option_id": 5,
                                    "option_label": "White",
                                    "attribute_name": "Color"
                                }
                            },
                            "super_attribute": [
                                "5",
                                "8"
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "Transaction": {
                "title": "Transaction",
                "description": "Transaction model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "transaction_id": {
                        "title": "Transaction ID",
                        "description": "Invoice's transaction id",
                        "type": "string",
                        "example": "TXNS5845AAEFVF"
                    },
                    "status": {
                        "title": "Status",
                        "description": "Transaction status",
                        "type": "string",
                        "enum": [
                            "paid"
                        ],
                        "example": "paid"
                    },
                    "type": {
                        "title": "Type",
                        "description": "Transaction type",
                        "type": "string",
                        "enum": [
                            "cashondelivery",
                            "moneytransfer"
                        ],
                        "example": "cashondelivery"
                    },
                    "payment_method": {
                        "title": "Payment Method",
                        "description": "Used payment method for transaction",
                        "type": "string",
                        "enum": [
                            "cashondelivery",
                            "moneytransfer"
                        ],
                        "example": "cashondelivery"
                    },
                    "data": {
                        "title": "Data",
                        "description": "Transaction's additional information",
                        "properties": {
                            "paidAmount": {
                                "type": "integer",
                                "example": "28"
                            }
                        },
                        "type": "object",
                        "example": {
                            "paidAmount": "28"
                        }
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "Channel": {
                "title": "Channel",
                "description": "Channel model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "code": {
                        "title": "Code",
                        "description": "Channel code",
                        "type": "string",
                        "example": "default"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Channel name",
                        "type": "string",
                        "example": "Default"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Channel description",
                        "type": "string",
                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                    },
                    "timezone": {
                        "title": "Timezone",
                        "description": "Channel timezone",
                        "type": "string",
                        "example": "GMT+5:30"
                    },
                    "theme": {
                        "title": "Theme",
                        "description": "Channel theme code",
                        "type": "string",
                        "example": "velocity"
                    },
                    "home_page_content": {
                        "title": "Home Page Content",
                        "description": "Channel home page content",
                        "type": "string",
                        "example": "<p>@include('shop::home.slider') @include('shop::home.featured-products') @include('shop::home.new-products')</p>"
                    },
                    "footer_content": {
                        "title": "Footer Content",
                        "description": "Channel footer content",
                        "type": "string",
                        "example": "<div class='list-container'><span class='list-heading'>Quick Links</span></div>"
                    },
                    "hostname": {
                        "title": "Hostname",
                        "description": "Channel host name, website URL",
                        "type": "string",
                        "example": "https://demo.bagisto.com/"
                    },
                    "logo": {
                        "title": "Logo",
                        "description": "Channel logo, website's logo",
                        "type": "string",
                        "example": "channel/{channel_id}/{logo_name.jpg}"
                    },
                    "logo_url": {
                        "title": "Logo URL",
                        "description": "Channel logo URL, website's logo URL",
                        "type": "string",
                        "example": "http://localhost/private/storage/channel/{channel_id}/{logo_name.jpg}"
                    },
                    "favicon": {
                        "title": "Favicon",
                        "description": "Channel favicon, website's favicon",
                        "type": "string",
                        "example": "channel/{channel_id}/{favicon_name.jpg}"
                    },
                    "favicon_url": {
                        "title": "Favicon URL",
                        "description": "Channel favicon URL, website's favicon URL",
                        "type": "string",
                        "example": "http://localhost/private/storage/channel/{channel_id}/{favicon_name.jpg}"
                    },
                    "default_locale": {
                        "$ref": "#/components/schemas/Locale"
                    },
                    "root_category_id": {
                        "title": "Root Category Id",
                        "description": "Channel's default root category ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "root_category": {
                        "$ref": "#/components/schemas/Category"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "Currency": {
                "title": "Currency",
                "description": "Currency model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "code": {
                        "title": "Code",
                        "description": "Currency code",
                        "type": "string",
                        "example": "EUR"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Currency name",
                        "type": "string",
                        "example": "Euro"
                    },
                    "symbol": {
                        "title": "Symbol",
                        "description": "Currency symbol",
                        "type": "string",
                        "example": "€"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "ExchangeRate": {
                "title": "Currency",
                "description": "Currency model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "rate": {
                        "title": "Rate",
                        "description": "Conversion rate",
                        "type": "number",
                        "format": "float",
                        "example": 0.91
                    },
                    "target_currency_id": {
                        "title": "Target Currency ID",
                        "description": "Target currency ID",
                        "type": "string",
                        "example": 1
                    },
                    "target_currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "symbol": {
                        "title": "Symbol",
                        "description": "Currency symbol",
                        "type": "string",
                        "example": "$"
                    }
                },
                "type": "object"
            },
            "InventorySource": {
                "title": "InventorySource",
                "description": "InventorySource model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "code": {
                        "title": "Code",
                        "description": "Inventory source's code",
                        "type": "string",
                        "example": "default"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Inventory source's name",
                        "type": "string",
                        "example": "Default"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Inventory source's description",
                        "type": "string",
                        "example": null
                    },
                    "contact_name": {
                        "title": "Contact Name",
                        "description": "Inventory source's contact name",
                        "type": "string",
                        "example": "Detroit Warehouse"
                    },
                    "contact_email": {
                        "title": "Contact Email",
                        "description": "Inventory source's contact email",
                        "type": "string",
                        "example": "warehouse@example.com"
                    },
                    "contact_number": {
                        "title": "Contact Number",
                        "description": "Inventory source's contact number",
                        "type": "string",
                        "example": "1234567899"
                    },
                    "contact_fax": {
                        "title": "Contact Fax",
                        "description": "Inventory source's contact fax",
                        "type": "string",
                        "example": null
                    },
                    "country": {
                        "title": "Country",
                        "description": "Inventory source's country code",
                        "type": "string",
                        "example": "US"
                    },
                    "state": {
                        "title": "State",
                        "description": "Inventory source's state code",
                        "type": "string",
                        "example": "MI"
                    },
                    "city": {
                        "title": "City",
                        "description": "Inventory source's city",
                        "type": "string",
                        "example": "Detroit"
                    },
                    "street": {
                        "title": "Street",
                        "description": "Inventory source's street",
                        "type": "string",
                        "example": "12th Street"
                    },
                    "postcode": {
                        "title": "Postcode",
                        "description": "Inventory source's postcode",
                        "type": "string",
                        "example": "48127"
                    },
                    "priority": {
                        "title": "Priority",
                        "description": "Inventory source's priority",
                        "type": "integer",
                        "example": 0
                    },
                    "latitude": {
                        "title": "Latitude",
                        "description": "Inventory source's latitude",
                        "type": "number",
                        "format": "float",
                        "example": null
                    },
                    "longitude": {
                        "title": "Longitude",
                        "description": "Inventory source's longitude",
                        "type": "number",
                        "format": "float",
                        "example": null
                    },
                    "status": {
                        "title": "Status",
                        "description": "Inventory source's status",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "Locale": {
                "title": "Locale",
                "description": "Locale model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "code": {
                        "title": "Code",
                        "description": "Locale code",
                        "type": "string",
                        "example": "en"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Locale name",
                        "type": "string",
                        "example": "English"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "direction": {
                        "title": "Direction",
                        "description": "Locale direction",
                        "type": "string",
                        "enum": [
                            "ltr",
                            "rtl"
                        ]
                    },
                    "logo_path": {
                        "title": "Image",
                        "description": "Locale image",
                        "type": "string",
                        "example": "settings/locale-images/1/image_name.jpg"
                    }
                },
                "type": "object"
            },
            "TaxCategory": {
                "title": "TaxCategory",
                "description": "TaxCategory model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "code": {
                        "title": "Code",
                        "description": "Tax Category's code",
                        "type": "string",
                        "example": "in-service-tax"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Tax Category's name",
                        "type": "string",
                        "example": "IN Service Tax"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Tax Category's description",
                        "type": "string",
                        "example": "Service tax applied to all state of India"
                    },
                    "rates": {
                        "title": "Rates",
                        "description": "Tax rates belongs to Tax category",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxRate"
                        }
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "TaxRate": {
                "title": "TaxRate",
                "description": "TaxRate model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "identifier": {
                        "title": "Identifier",
                        "description": "Tax rate's identifier",
                        "type": "string",
                        "example": "State Service Tax"
                    },
                    "is_zip": {
                        "title": "Is Zip",
                        "description": "Is zip range or fixed, i.e 0 = fixed, 1 = zip range",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "zip_code": {
                        "title": "Zip Code",
                        "description": "Zip code only use if `is_zip` set to `0`",
                        "type": "string",
                        "example": "23454"
                    },
                    "zip_from": {
                        "title": "Zip From",
                        "description": "Zip from",
                        "type": "string",
                        "example": "201100"
                    },
                    "zip_to": {
                        "title": "Zip To",
                        "description": "Zip to",
                        "type": "string",
                        "example": "201900"
                    },
                    "state": {
                        "title": "State",
                        "description": "State code i.e. if want to apply on all state left it blank",
                        "type": "string",
                        "example": "UP"
                    },
                    "country": {
                        "title": "Country",
                        "description": "Country code",
                        "type": "string",
                        "example": "IN"
                    },
                    "tax_rate": {
                        "title": "Tax Rate",
                        "description": "Tax Rate",
                        "type": "number",
                        "format": "int64",
                        "example": 1.2
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "Theme": {
                "title": "Theme",
                "description": "Theme model",
                "properties": {
                    "locale": {
                        "description": "Locale code",
                        "type": "string",
                        "example": "en"
                    },
                    "en": {
                        "description": "English locale options",
                        "properties": {
                            "options": {
                                "description": "Theme options",
                                "properties": {
                                    "images": {
                                        "description": "Image carousel images",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "link": {
                                                    "description": "Image link",
                                                    "type": "string",
                                                    "example": "test1"
                                                },
                                                "image": {
                                                    "description": "Image path",
                                                    "type": "string",
                                                    "example": "storage/theme/1/1.webp"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "type": {
                        "description": "Type of the theme",
                        "type": "string",
                        "example": "image_carousel"
                    },
                    "name": {
                        "description": "Name of the theme",
                        "type": "string",
                        "example": "Image Carousel"
                    },
                    "sort_order": {
                        "description": "Sort order of the theme",
                        "type": "integer",
                        "example": 12
                    },
                    "channel_id": {
                        "description": "Channel ID",
                        "type": "string",
                        "example": "1"
                    },
                    "status": {
                        "description": "Status of the theme",
                        "type": "string",
                        "example": "on"
                    }
                },
                "type": "object"
            },
            "Pagination": {
                "title": "Pagination",
                "description": "Pagination model",
                "properties": {
                    "current_page": {
                        "title": "Current Page",
                        "description": "Current Page",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "from": {
                        "title": "From",
                        "description": "From",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "last_page": {
                        "title": "Last Page",
                        "description": "Last Page",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "per_page": {
                        "title": "Per Page",
                        "description": "Per Page",
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "links": {
                        "title": "Links",
                        "description": "Links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "example": null
                                },
                                "label": {
                                    "type": "string",
                                    "example": "Previous"
                                },
                                "active": {
                                    "type": "boolean",
                                    "example": false
                                }
                            },
                            "type": "object"
                        },
                        "example": [
                            {
                                "url": null,
                                "label": "Previous",
                                "active": false
                            },
                            {
                                "url": "http://localhost/public/api/v1/examples?sort=id&order=desc&page=1",
                                "label": "1",
                                "active": true
                            },
                            {
                                "url": null,
                                "label": "Next",
                                "active": false
                            }
                        ]
                    },
                    "path": {
                        "title": "Path",
                        "description": "Path",
                        "type": "integer",
                        "example": "http://localhost/public/api/v1/examples"
                    },
                    "to": {
                        "title": "To",
                        "description": "To",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "total": {
                        "title": "Total",
                        "description": "Total",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Role": {
                "title": "Role",
                "description": "Role model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Role name",
                        "type": "string",
                        "example": "Administrator"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Role description",
                        "type": "string",
                        "example": "Administrator role, i.e. User may have full admin access"
                    },
                    "permission_type": {
                        "title": "Permission Type",
                        "description": "Permission type",
                        "type": "string",
                        "enum": [
                            "all",
                            "custom"
                        ],
                        "example": "custom"
                    },
                    "permission": {
                        "title": "Permission",
                        "description": "Role's permission",
                        "type": "array",
                        "items": {
                            "properties": {
                                "dashboard": {
                                    "type": "string"
                                },
                                "catalog": {
                                    "type": "string"
                                },
                                "catalog.products": {
                                    "type": "string"
                                },
                                "catalog.categories": {
                                    "type": "string"
                                },
                                "catalog.attributes": {
                                    "type": "string"
                                },
                                "catalog.families": {
                                    "type": "string"
                                },
                                "settings": {
                                    "type": "string"
                                },
                                "settings.users": {
                                    "type": "string"
                                },
                                "settings.users.users": {
                                    "type": "string"
                                },
                                "settings.users.users.edit": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "example": [
                            "dashboard",
                            "catalog",
                            "catalog.products",
                            "catalog.products.create",
                            "catalog.products.copy",
                            "catalog.products.edit",
                            "catalog.products.delete",
                            "catalog.products.mass-update",
                            "catalog.products.mass-delete",
                            "catalog.categories",
                            "catalog.attributes",
                            "catalog.families",
                            "settings",
                            "settings.users",
                            "settings.users.users",
                            "settings.users.users.edit"
                        ]
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Admin user's full name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Admin user's email",
                        "type": "string",
                        "example": "admin@example.com"
                    },
                    "status": {
                        "title": "Status",
                        "description": "Admin user's status",
                        "type": "boolean",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "role": {
                        "$ref": "#/components/schemas/Role"
                    },
                    "token": {
                        "title": "Token",
                        "description": "Admin user's token",
                        "type": "string",
                        "example": "29|i0hx5mbtzQ7T8Ny33ciCHOCCbSAUqEXD7RZn2iII"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "404": {
                "description": "Resource Not Found"
            }
        },
        "securitySchemes": {
            "sanctum_admin": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            },
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for Authentication"
        },
        {
            "name": "Orders",
            "description": "API Endpoints for Orders"
        },
        {
            "name": "ReOrders",
            "description": "API Endpoints for Re Orders"
        },
        {
            "name": "Shipments",
            "description": "API Endpoints for Shipments"
        },
        {
            "name": "Invoices",
            "description": "API Endpoints for Invoices"
        },
        {
            "name": "Refunds",
            "description": "API Endpoints for Refunds"
        },
        {
            "name": "Transactions",
            "description": "API Endpoints for Transactions"
        },
        {
            "name": "Products",
            "description": "API Endpoints for Products"
        },
        {
            "name": "Categories",
            "description": "API Endpoints for Categories"
        },
        {
            "name": "Attributes",
            "description": "API Endpoints for Product Attributes"
        },
        {
            "name": "Attribute Families",
            "description": "API Endpoints for Product Attribute Families"
        },
        {
            "name": "Customers",
            "description": "API Endpoints for Customers"
        },
        {
            "name": "Customer Addresses",
            "description": "API Endpoints for Customer Addresses"
        },
        {
            "name": "Customer Groups",
            "description": "API Endpoints for Customer Groups"
        },
        {
            "name": "Customer Reviews",
            "description": "API Endpoints for Customer Reviews"
        },
        {
            "name": "Customer GDPR",
            "description": "API Endpoints for Customer GDPR"
        },
        {
            "name": "CMS Pages",
            "description": "API Endpoints for CMS Pages"
        },
        {
            "name": "Catalog Rules",
            "description": "API Endpoints for Catalog Rules"
        },
        {
            "name": "Cart Rules",
            "description": "API Endpoints for Cart Rules"
        },
        {
            "name": "Cart Rule Coupons",
            "description": "API Endpoints for Cart Rule Coupons"
        },
        {
            "name": "Email Templates",
            "description": "API Endpoints for Email Templates"
        },
        {
            "name": "Events",
            "description": "API Endpoints for Events"
        },
        {
            "name": "Campaigns",
            "description": "API Endpoints for Campaigns"
        },
        {
            "name": "Newsletter Subscriptions",
            "description": "API Endpoints for Newsletter Subscriptions"
        },
        {
            "name": "URL Rewrite",
            "description": "API Endpoints for URL Rewrites"
        },
        {
            "name": "Search Terms",
            "description": "API Endpoints for Search Terms"
        },
        {
            "name": "Sitemaps",
            "description": "API Endpoints for Sitemaps"
        },
        {
            "name": "Reportings",
            "description": "API Endpoints for Reportings"
        },
        {
            "name": "Locales",
            "description": "API Endpoints for Locales"
        },
        {
            "name": "Currencies",
            "description": "API Endpoints for Currencies"
        },
        {
            "name": "Exchange Rates",
            "description": "API Endpoints for Exchange Rates"
        },
        {
            "name": "Inventory Sources",
            "description": "API Endpoints for Inventory Sources"
        },
        {
            "name": "Channels",
            "description": "API Endpoints for Channels"
        },
        {
            "name": "Users",
            "description": "API Endpoints for Users"
        },
        {
            "name": "Roles",
            "description": "API Endpoints for Roles"
        },
        {
            "name": "Themes",
            "description": "API Endpoints for Themes"
        },
        {
            "name": "Tax Categories",
            "description": "API Endpoints for Tax Categories"
        },
        {
            "name": "Tax Rates",
            "description": "API Endpoints for Tax Rates"
        },
        {
            "name": "Configurations",
            "description": "API Endpoints for Configurations"
        },
        {
            "name": "Search Synonym",
            "description": "Search Synonym"
        }
    ],
    "security": [
        {
            "sanctum_admin": []
        },
        {
            "sanctum": []
        }
    ]
}